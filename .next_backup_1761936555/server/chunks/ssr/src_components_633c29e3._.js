module.exports=[85970,a=>{"use strict";let b;a.s(["default",()=>fm],85970);var c=a.i(87924),d=a.i(72131);let e=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],f=new Set(e),g=a=>180*a/Math.PI,h=a=>j(g(Math.atan2(a[1],a[0]))),i={x:4,y:5,translateX:4,translateY:5,scaleX:0,scaleY:3,scale:a=>(Math.abs(a[0])+Math.abs(a[3]))/2,rotate:h,rotateZ:h,skewX:a=>g(Math.atan(a[1])),skewY:a=>g(Math.atan(a[2])),skew:a=>(Math.abs(a[1])+Math.abs(a[2]))/2},j=a=>((a%=360)<0&&(a+=360),a),k=a=>Math.sqrt(a[0]*a[0]+a[1]*a[1]),l=a=>Math.sqrt(a[4]*a[4]+a[5]*a[5]),m={x:12,y:13,z:14,translateX:12,translateY:13,translateZ:14,scaleX:k,scaleY:l,scale:a=>(k(a)+l(a))/2,rotateX:a=>j(g(Math.atan2(a[6],a[5]))),rotateY:a=>j(g(Math.atan2(-a[2],a[0]))),rotateZ:h,rotate:h,skewX:a=>g(Math.atan(a[4])),skewY:a=>g(Math.atan(a[1])),skew:a=>(Math.abs(a[1])+Math.abs(a[4]))/2};function n(a){return+!!a.includes("scale")}function o(a,b){let c,d;if(!a||"none"===a)return n(b);let e=a.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);if(e)c=m,d=e;else{let b=a.match(/^matrix\(([-\d.e\s,]+)\)$/u);c=i,d=b}if(!d)return n(b);let f=c[b],g=d[1].split(",").map(p);return"function"==typeof f?f(g):g[f]}function p(a){return parseFloat(a.trim())}let q=a=>b=>"string"==typeof b&&b.startsWith(a),r=q("--"),s=q("var(--"),t=a=>!!s(a)&&u.test(a.split("/*")[0].trim()),u=/var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;function v({top:a,left:b,right:c,bottom:d}){return{x:{min:b,max:c},y:{min:a,max:d}}}let w=(a,b,c)=>a+(b-a)*c;function x(a){return void 0===a||1===a}function y({scale:a,scaleX:b,scaleY:c}){return!x(a)||!x(b)||!x(c)}function z(a){return y(a)||A(a)||a.z||a.rotate||a.rotateX||a.rotateY||a.skewX||a.skewY}function A(a){var b,c;return(b=a.x)&&"0%"!==b||(c=a.y)&&"0%"!==c}function B(a,b,c,d,e){return void 0!==e&&(a=d+e*(a-d)),d+c*(a-d)+b}function C(a,b=0,c=1,d,e){a.min=B(a.min,b,c,d,e),a.max=B(a.max,b,c,d,e)}function D(a,{x:b,y:c}){C(a.x,b.translate,b.scale,b.originPoint),C(a.y,c.translate,c.scale,c.originPoint)}function E(a,b){a.min=a.min+b,a.max=a.max+b}function F(a,b,c,d,e=.5){let f=w(a.min,a.max,e);C(a,b,c,f,d)}function G(a,b){F(a.x,b.x,b.scaleX,b.scale,b.originX),F(a.y,b.y,b.scaleY,b.scale,b.originY)}function H(a,b){return v(function(a,b){if(!b)return a;let c=b({x:a.left,y:a.top}),d=b({x:a.right,y:a.bottom});return{top:c.y,left:c.x,bottom:d.y,right:d.x}}(a.getBoundingClientRect(),b))}let I=new Set(["width","height","top","left","right","bottom",...e]),J=(a,b,c)=>c>b?b:c<a?a:c,K={test:a=>"number"==typeof a,parse:parseFloat,transform:a=>a},L={...K,transform:a=>J(0,1,a)},M={...K,default:1},N=a=>({test:b=>"string"==typeof b&&b.endsWith(a)&&1===b.split(" ").length,parse:parseFloat,transform:b=>`${b}${a}`}),O=N("deg"),P=N("%"),Q=N("px"),R=N("vh"),S=N("vw"),T={...P,parse:a=>P.parse(a)/100,transform:a=>P.transform(100*a)},U=a=>b=>b.test(a),V=[K,Q,P,O,S,R,{test:a=>"auto"===a,parse:a=>a}],W=a=>V.find(U(a)),X=()=>{},Y=()=>{},Z=a=>/^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(a),$=/^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u,_=a=>a===K||a===Q,aa=new Set(["x","y","z"]),ab=e.filter(a=>!aa.has(a)),ac={width:({x:a},{paddingLeft:b="0",paddingRight:c="0"})=>a.max-a.min-parseFloat(b)-parseFloat(c),height:({y:a},{paddingTop:b="0",paddingBottom:c="0"})=>a.max-a.min-parseFloat(b)-parseFloat(c),top:(a,{top:b})=>parseFloat(b),left:(a,{left:b})=>parseFloat(b),bottom:({y:a},{top:b})=>parseFloat(b)+(a.max-a.min),right:({x:a},{left:b})=>parseFloat(b)+(a.max-a.min),x:(a,{transform:b})=>o(b,"x"),y:(a,{transform:b})=>o(b,"y")};ac.translateX=ac.x,ac.translateY=ac.y;let ad=a=>a,ae={},af=["setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender"],ag={value:null,addProjectionMetrics:null};function ah(a,b){let c=!1,d=!0,e={delta:0,timestamp:0,isProcessing:!1},f=()=>c=!0,g=af.reduce((a,c)=>(a[c]=function(a,b){let c=new Set,d=new Set,e=!1,f=!1,g=new WeakSet,h={delta:0,timestamp:0,isProcessing:!1},i=0;function j(b){g.has(b)&&(k.schedule(b),a()),i++,b(h)}let k={schedule:(a,b=!1,f=!1)=>{let h=f&&e?c:d;return b&&g.add(a),h.has(a)||h.add(a),a},cancel:a=>{d.delete(a),g.delete(a)},process:a=>{if(h=a,e){f=!0;return}e=!0,[c,d]=[d,c],c.forEach(j),b&&ag.value&&ag.value.frameloop[b].push(i),i=0,c.clear(),e=!1,f&&(f=!1,k.process(a))}};return k}(f,b?c:void 0),a),{}),{setup:h,read:i,resolveKeyframes:j,preUpdate:k,update:l,preRender:m,render:n,postRender:o}=g,p=()=>{let f=ae.useManualTiming?e.timestamp:performance.now();c=!1,ae.useManualTiming||(e.delta=d?1e3/60:Math.max(Math.min(f-e.timestamp,40),1)),e.timestamp=f,e.isProcessing=!0,h.process(e),i.process(e),j.process(e),k.process(e),l.process(e),m.process(e),n.process(e),o.process(e),e.isProcessing=!1,c&&b&&(d=!1,a(p))};return{schedule:af.reduce((b,f)=>{let h=g[f];return b[f]=(b,f=!1,g=!1)=>(!c&&(c=!0,d=!0,e.isProcessing||a(p)),h.schedule(b,f,g)),b},{}),cancel:a=>{for(let b=0;b<af.length;b++)g[af[b]].cancel(a)},state:e,steps:g}}let{schedule:ai,cancel:aj,state:ak,steps:al}=ah("undefined"!=typeof requestAnimationFrame?requestAnimationFrame:ad,!0),am=new Set,an=!1,ao=!1,ap=!1;function aq(){if(ao){let a=Array.from(am).filter(a=>a.needsMeasurement),b=new Set(a.map(a=>a.element)),c=new Map;b.forEach(a=>{let b=function(a){let b=[];return ab.forEach(c=>{let d=a.getValue(c);void 0!==d&&(b.push([c,d.get()]),d.set(+!!c.startsWith("scale")))}),b}(a);b.length&&(c.set(a,b),a.render())}),a.forEach(a=>a.measureInitialState()),b.forEach(a=>{a.render();let b=c.get(a);b&&b.forEach(([b,c])=>{a.getValue(b)?.set(c)})}),a.forEach(a=>a.measureEndState()),a.forEach(a=>{void 0!==a.suspendedScrollY&&window.scrollTo(0,a.suspendedScrollY)})}ao=!1,an=!1,am.forEach(a=>a.complete(ap)),am.clear()}function ar(){am.forEach(a=>{a.readKeyframes(),a.needsMeasurement&&(ao=!0)})}class as{constructor(a,b,c,d,e,f=!1){this.state="pending",this.isAsync=!1,this.needsMeasurement=!1,this.unresolvedKeyframes=[...a],this.onComplete=b,this.name=c,this.motionValue=d,this.element=e,this.isAsync=f}scheduleResolve(){this.state="scheduled",this.isAsync?(am.add(this),an||(an=!0,ai.read(ar),ai.resolveKeyframes(aq))):(this.readKeyframes(),this.complete())}readKeyframes(){let{unresolvedKeyframes:a,name:b,element:c,motionValue:d}=this;if(null===a[0]){let e=d?.get(),f=a[a.length-1];if(void 0!==e)a[0]=e;else if(c&&b){let d=c.readValue(b,f);null!=d&&(a[0]=d)}void 0===a[0]&&(a[0]=f),d&&void 0===e&&d.set(a[0])}for(let b=1;b<a.length;b++)a[b]??(a[b]=a[b-1])}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(a=!1){this.state="complete",this.onComplete(this.unresolvedKeyframes,this.finalKeyframe,a),am.delete(this)}cancel(){"scheduled"===this.state&&(am.delete(this),this.state="pending")}resume(){"pending"===this.state&&this.scheduleResolve()}}let at=a=>/^0[^.\s]+$/u.test(a),au=a=>Math.round(1e5*a)/1e5,av=/-?(?:\d+(?:\.\d+)?|\.\d+)/gu,aw=/^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu,ax=(a,b)=>c=>!!("string"==typeof c&&aw.test(c)&&c.startsWith(a)||b&&null!=c&&Object.prototype.hasOwnProperty.call(c,b)),ay=(a,b,c)=>d=>{if("string"!=typeof d)return d;let[e,f,g,h]=d.match(av);return{[a]:parseFloat(e),[b]:parseFloat(f),[c]:parseFloat(g),alpha:void 0!==h?parseFloat(h):1}},az={...K,transform:a=>Math.round(J(0,255,a))},aA={test:ax("rgb","red"),parse:ay("red","green","blue"),transform:({red:a,green:b,blue:c,alpha:d=1})=>"rgba("+az.transform(a)+", "+az.transform(b)+", "+az.transform(c)+", "+au(L.transform(d))+")"},aB={test:ax("#"),parse:function(a){let b="",c="",d="",e="";return a.length>5?(b=a.substring(1,3),c=a.substring(3,5),d=a.substring(5,7),e=a.substring(7,9)):(b=a.substring(1,2),c=a.substring(2,3),d=a.substring(3,4),e=a.substring(4,5),b+=b,c+=c,d+=d,e+=e),{red:parseInt(b,16),green:parseInt(c,16),blue:parseInt(d,16),alpha:e?parseInt(e,16)/255:1}},transform:aA.transform},aC={test:ax("hsl","hue"),parse:ay("hue","saturation","lightness"),transform:({hue:a,saturation:b,lightness:c,alpha:d=1})=>"hsla("+Math.round(a)+", "+P.transform(au(b))+", "+P.transform(au(c))+", "+au(L.transform(d))+")"},aD={test:a=>aA.test(a)||aB.test(a)||aC.test(a),parse:a=>aA.test(a)?aA.parse(a):aC.test(a)?aC.parse(a):aB.parse(a),transform:a=>"string"==typeof a?a:a.hasOwnProperty("red")?aA.transform(a):aC.transform(a),getAnimatableNone:a=>{let b=aD.parse(a);return b.alpha=0,aD.transform(b)}},aE=/(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu,aF="number",aG="color",aH=/var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;function aI(a){let b=a.toString(),c=[],d={color:[],number:[],var:[]},e=[],f=0,g=b.replace(aH,a=>(aD.test(a)?(d.color.push(f),e.push(aG),c.push(aD.parse(a))):a.startsWith("var(")?(d.var.push(f),e.push("var"),c.push(a)):(d.number.push(f),e.push(aF),c.push(parseFloat(a))),++f,"${}")).split("${}");return{values:c,split:g,indexes:d,types:e}}function aJ(a){return aI(a).values}function aK(a){let{split:b,types:c}=aI(a),d=b.length;return a=>{let e="";for(let f=0;f<d;f++)if(e+=b[f],void 0!==a[f]){let b=c[f];b===aF?e+=au(a[f]):b===aG?e+=aD.transform(a[f]):e+=a[f]}return e}}let aL=a=>"number"==typeof a?0:aD.test(a)?aD.getAnimatableNone(a):a,aM={test:function(a){return isNaN(a)&&"string"==typeof a&&(a.match(av)?.length||0)+(a.match(aE)?.length||0)>0},parse:aJ,createTransformer:aK,getAnimatableNone:function(a){let b=aJ(a);return aK(a)(b.map(aL))}},aN=new Set(["brightness","contrast","saturate","opacity"]);function aO(a){let[b,c]=a.slice(0,-1).split("(");if("drop-shadow"===b)return a;let[d]=c.match(av)||[];if(!d)return a;let e=c.replace(d,""),f=+!!aN.has(b);return d!==c&&(f*=100),b+"("+f+e+")"}let aP=/\b([a-z-]*)\(.*?\)/gu,aQ={...aM,getAnimatableNone:a=>{let b=a.match(aP);return b?b.map(aO).join(" "):a}},aR={...K,transform:Math.round},aS={borderWidth:Q,borderTopWidth:Q,borderRightWidth:Q,borderBottomWidth:Q,borderLeftWidth:Q,borderRadius:Q,radius:Q,borderTopLeftRadius:Q,borderTopRightRadius:Q,borderBottomRightRadius:Q,borderBottomLeftRadius:Q,width:Q,maxWidth:Q,height:Q,maxHeight:Q,top:Q,right:Q,bottom:Q,left:Q,padding:Q,paddingTop:Q,paddingRight:Q,paddingBottom:Q,paddingLeft:Q,margin:Q,marginTop:Q,marginRight:Q,marginBottom:Q,marginLeft:Q,backgroundPositionX:Q,backgroundPositionY:Q,rotate:O,rotateX:O,rotateY:O,rotateZ:O,scale:M,scaleX:M,scaleY:M,scaleZ:M,skew:O,skewX:O,skewY:O,distance:Q,translateX:Q,translateY:Q,translateZ:Q,x:Q,y:Q,z:Q,perspective:Q,transformPerspective:Q,opacity:L,originX:T,originY:T,originZ:Q,zIndex:aR,fillOpacity:L,strokeOpacity:L,numOctaves:aR},aT={...aS,color:aD,backgroundColor:aD,outlineColor:aD,fill:aD,stroke:aD,borderColor:aD,borderTopColor:aD,borderRightColor:aD,borderBottomColor:aD,borderLeftColor:aD,filter:aQ,WebkitFilter:aQ},aU=a=>aT[a];function aV(a,b){let c=aU(a);return c!==aQ&&(c=aM),c.getAnimatableNone?c.getAnimatableNone(b):void 0}let aW=new Set(["auto","none","0"]);class aX extends as{constructor(a,b,c,d,e){super(a,b,c,d,e,!0)}readKeyframes(){let{unresolvedKeyframes:a,element:b,name:c}=this;if(!b||!b.current)return;super.readKeyframes();for(let c=0;c<a.length;c++){let d=a[c];if("string"==typeof d&&t(d=d.trim())){let e=function a(b,c,d=1){Y(d<=4,`Max CSS variable fallback depth detected in property "${b}". This may indicate a circular fallback dependency.`,"max-css-var-depth");let[e,f]=function(a){let b=$.exec(a);if(!b)return[,];let[,c,d,e]=b;return[`--${c??d}`,e]}(b);if(!e)return;let g=window.getComputedStyle(c).getPropertyValue(e);if(g){let a=g.trim();return Z(a)?parseFloat(a):a}return t(f)?a(f,c,d+1):f}(d,b.current);void 0!==e&&(a[c]=e),c===a.length-1&&(this.finalKeyframe=d)}}if(this.resolveNoneKeyframes(),!I.has(c)||2!==a.length)return;let[d,e]=a,f=W(d),g=W(e);if(f!==g)if(_(f)&&_(g))for(let b=0;b<a.length;b++){let c=a[b];"string"==typeof c&&(a[b]=parseFloat(c))}else ac[c]&&(this.needsMeasurement=!0)}resolveNoneKeyframes(){let{unresolvedKeyframes:a,name:b}=this,c=[];for(let b=0;b<a.length;b++){var d;(null===a[b]||("number"==typeof(d=a[b])?0===d:null===d||"none"===d||"0"===d||at(d)))&&c.push(b)}c.length&&function(a,b,c){let d,e=0;for(;e<a.length&&!d;){let b=a[e];"string"==typeof b&&!aW.has(b)&&aI(b).values.length&&(d=a[e]),e++}if(d&&c)for(let e of b)a[e]=aV(c,d)}(a,c,b)}measureInitialState(){let{element:a,unresolvedKeyframes:b,name:c}=this;if(!a||!a.current)return;"height"===c&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=ac[c](a.measureViewportBox(),window.getComputedStyle(a.current)),b[0]=this.measuredOrigin;let d=b[b.length-1];void 0!==d&&a.getValue(c,d).jump(d,!1)}measureEndState(){let{element:a,name:b,unresolvedKeyframes:c}=this;if(!a||!a.current)return;let d=a.getValue(b);d&&d.jump(this.measuredOrigin,!1);let e=c.length-1,f=c[e];c[e]=ac[b](a.measureViewportBox(),window.getComputedStyle(a.current)),null!==f&&void 0===this.finalKeyframe&&(this.finalKeyframe=f),this.removedTransforms?.length&&this.removedTransforms.forEach(([b,c])=>{a.getValue(b).set(c)}),this.resolveNoneKeyframes()}}let aY=a=>!!(a&&a.getVelocity);function aZ(){b=void 0}let a$={now:()=>(void 0===b&&a$.set(ak.isProcessing||ae.useManualTiming?ak.timestamp:performance.now()),b),set:a=>{b=a,queueMicrotask(aZ)}};function a_(a,b){-1===a.indexOf(b)&&a.push(b)}function a0(a,b){let c=a.indexOf(b);c>-1&&a.splice(c,1)}class a1{constructor(){this.subscriptions=[]}add(a){return a_(this.subscriptions,a),()=>a0(this.subscriptions,a)}notify(a,b,c){let d=this.subscriptions.length;if(d)if(1===d)this.subscriptions[0](a,b,c);else for(let e=0;e<d;e++){let d=this.subscriptions[e];d&&d(a,b,c)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}let a2={current:void 0};class a3{constructor(a,b={}){this.canTrackVelocity=null,this.events={},this.updateAndNotify=a=>{let b=a$.now();if(this.updatedAt!==b&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(a),this.current!==this.prev&&(this.events.change?.notify(this.current),this.dependents))for(let a of this.dependents)a.dirty()},this.hasAnimated=!1,this.setCurrent(a),this.owner=b.owner}setCurrent(a){this.current=a,this.updatedAt=a$.now(),null===this.canTrackVelocity&&void 0!==a&&(this.canTrackVelocity=!isNaN(parseFloat(this.current)))}setPrevFrameValue(a=this.current){this.prevFrameValue=a,this.prevUpdatedAt=this.updatedAt}onChange(a){return this.on("change",a)}on(a,b){this.events[a]||(this.events[a]=new a1);let c=this.events[a].add(b);return"change"===a?()=>{c(),ai.read(()=>{this.events.change.getSize()||this.stop()})}:c}clearListeners(){for(let a in this.events)this.events[a].clear()}attach(a,b){this.passiveEffect=a,this.stopPassiveEffect=b}set(a){this.passiveEffect?this.passiveEffect(a,this.updateAndNotify):this.updateAndNotify(a)}setWithVelocity(a,b,c){this.set(b),this.prev=void 0,this.prevFrameValue=a,this.prevUpdatedAt=this.updatedAt-c}jump(a,b=!0){this.updateAndNotify(a),this.prev=a,this.prevUpdatedAt=this.prevFrameValue=void 0,b&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}dirty(){this.events.change?.notify(this.current)}addDependent(a){this.dependents||(this.dependents=new Set),this.dependents.add(a)}removeDependent(a){this.dependents&&this.dependents.delete(a)}get(){return a2.current&&a2.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){var a;let b=a$.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||b-this.updatedAt>30)return 0;let c=Math.min(this.updatedAt-this.prevUpdatedAt,30);return a=parseFloat(this.current)-parseFloat(this.prevFrameValue),c?1e3/c*a:0}start(a){return this.stop(),new Promise(b=>{this.hasAnimated=!0,this.animation=a(b),this.events.animationStart&&this.events.animationStart.notify()}).then(()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()})}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.dependents?.clear(),this.events.destroy?.notify(),this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function a4(a,b){return new a3(a,b)}let a5=[...V,aD,aM],{schedule:a6}=ah(queueMicrotask,!1),a7={animation:["animate","variants","whileHover","whileTap","exit","whileInView","whileFocus","whileDrag"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},a8={};for(let a in a7)a8[a]={isEnabled:b=>a7[a].some(a=>!!b[a])};let a9=()=>({translate:0,scale:1,origin:0,originPoint:0}),ba=()=>({x:a9(),y:a9()}),bb=()=>({min:0,max:0}),bc=()=>({x:bb(),y:bb()}),bd={current:null},be={current:!1},bf=new WeakMap;function bg(a){return null!==a&&"object"==typeof a&&"function"==typeof a.start}function bh(a){return"string"==typeof a||Array.isArray(a)}let bi=["animate","whileInView","whileFocus","whileHover","whileTap","whileDrag","exit"],bj=["initial",...bi];function bk(a){return bg(a.animate)||bj.some(b=>bh(a[b]))}function bl(a){return!!(bk(a)||a.variants)}function bm(a){let b=[{},{}];return a?.values.forEach((a,c)=>{b[0][c]=a.get(),b[1][c]=a.getVelocity()}),b}function bn(a,b,c,d){if("function"==typeof b){let[e,f]=bm(d);b=b(void 0!==c?c:a.custom,e,f)}if("string"==typeof b&&(b=a.variants&&a.variants[b]),"function"==typeof b){let[e,f]=bm(d);b=b(void 0!==c?c:a.custom,e,f)}return b}let bo=["AnimationStart","AnimationComplete","Update","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"];class bp{scrapeMotionValuesFromProps(a,b,c){return{}}constructor({parent:a,props:b,presenceContext:c,reducedMotionConfig:d,blockInitialAnimation:e,visualState:f},g={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.KeyframeResolver=as,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.renderScheduledAt=0,this.scheduleRender=()=>{let a=a$.now();this.renderScheduledAt<a&&(this.renderScheduledAt=a,ai.render(this.render,!1,!0))};let{latestValues:h,renderState:i}=f;this.latestValues=h,this.baseTarget={...h},this.initialValues=b.initial?{...h}:{},this.renderState=i,this.parent=a,this.props=b,this.presenceContext=c,this.depth=a?a.depth+1:0,this.reducedMotionConfig=d,this.options=g,this.blockInitialAnimation=!!e,this.isControllingVariants=bk(b),this.isVariantNode=bl(b),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=!!(a&&a.current);let{willChange:j,...k}=this.scrapeMotionValuesFromProps(b,{},this);for(let a in k){let b=k[a];void 0!==h[a]&&aY(b)&&b.set(h[a])}}mount(a){this.current=a,bf.set(a,this),this.projection&&!this.projection.instance&&this.projection.mount(a),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach((a,b)=>this.bindToMotionValue(b,a)),be.current||(be.current=!0),this.shouldReduceMotion="never"!==this.reducedMotionConfig&&("always"===this.reducedMotionConfig||bd.current),this.parent?.addChild(this),this.update(this.props,this.presenceContext)}unmount(){for(let a in this.projection&&this.projection.unmount(),aj(this.notifyUpdate),aj(this.render),this.valueSubscriptions.forEach(a=>a()),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent?.removeChild(this),this.events)this.events[a].clear();for(let a in this.features){let b=this.features[a];b&&(b.unmount(),b.isMounted=!1)}this.current=null}addChild(a){this.children.add(a),this.enteringChildren??(this.enteringChildren=new Set),this.enteringChildren.add(a)}removeChild(a){this.children.delete(a),this.enteringChildren&&this.enteringChildren.delete(a)}bindToMotionValue(a,b){let c;this.valueSubscriptions.has(a)&&this.valueSubscriptions.get(a)();let d=f.has(a);d&&this.onBindTransform&&this.onBindTransform();let e=b.on("change",b=>{this.latestValues[a]=b,this.props.onUpdate&&ai.preRender(this.notifyUpdate),d&&this.projection&&(this.projection.isTransformDirty=!0),this.scheduleRender()});window.MotionCheckAppearSync&&(c=window.MotionCheckAppearSync(this,a,b)),this.valueSubscriptions.set(a,()=>{e(),c&&c(),b.owner&&b.stop()})}sortNodePosition(a){return this.current&&this.sortInstanceNodePosition&&this.type===a.type?this.sortInstanceNodePosition(this.current,a.current):0}updateFeatures(){let a="animation";for(a in a8){let b=a8[a];if(!b)continue;let{isEnabled:c,Feature:d}=b;if(!this.features[a]&&d&&c(this.props)&&(this.features[a]=new d(this)),this.features[a]){let b=this.features[a];b.isMounted?b.update():(b.mount(),b.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):bc()}getStaticValue(a){return this.latestValues[a]}setStaticValue(a,b){this.latestValues[a]=b}update(a,b){(a.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=a,this.prevPresenceContext=this.presenceContext,this.presenceContext=b;for(let b=0;b<bo.length;b++){let c=bo[b];this.propEventSubscriptions[c]&&(this.propEventSubscriptions[c](),delete this.propEventSubscriptions[c]);let d=a["on"+c];d&&(this.propEventSubscriptions[c]=this.on(c,d))}this.prevMotionValues=function(a,b,c){for(let d in b){let e=b[d],f=c[d];if(aY(e))a.addValue(d,e);else if(aY(f))a.addValue(d,a4(e,{owner:a}));else if(f!==e)if(a.hasValue(d)){let b=a.getValue(d);!0===b.liveStyle?b.jump(e):b.hasAnimated||b.set(e)}else{let b=a.getStaticValue(d);a.addValue(d,a4(void 0!==b?b:e,{owner:a}))}}for(let d in c)void 0===b[d]&&a.removeValue(d);return b}(this,this.scrapeMotionValuesFromProps(a,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(a){return this.props.variants?this.props.variants[a]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}addVariantChild(a){let b=this.getClosestVariantNode();if(b)return b.variantChildren&&b.variantChildren.add(a),()=>b.variantChildren.delete(a)}addValue(a,b){let c=this.values.get(a);b!==c&&(c&&this.removeValue(a),this.bindToMotionValue(a,b),this.values.set(a,b),this.latestValues[a]=b.get())}removeValue(a){this.values.delete(a);let b=this.valueSubscriptions.get(a);b&&(b(),this.valueSubscriptions.delete(a)),delete this.latestValues[a],this.removeValueFromRenderState(a,this.renderState)}hasValue(a){return this.values.has(a)}getValue(a,b){if(this.props.values&&this.props.values[a])return this.props.values[a];let c=this.values.get(a);return void 0===c&&void 0!==b&&(c=a4(null===b?void 0:b,{owner:this}),this.addValue(a,c)),c}readValue(a,b){let c=void 0===this.latestValues[a]&&this.current?this.getBaseTargetFromProps(this.props,a)??this.readValueFromInstance(this.current,a,this.options):this.latestValues[a];if(null!=c){if("string"==typeof c&&(Z(c)||at(c)))c=parseFloat(c);else{let d;d=c,!a5.find(U(d))&&aM.test(b)&&(c=aV(a,b))}this.setBaseTarget(a,aY(c)?c.get():c)}return aY(c)?c.get():c}setBaseTarget(a,b){this.baseTarget[a]=b}getBaseTarget(a){let b,{initial:c}=this.props;if("string"==typeof c||"object"==typeof c){let d=bn(this.props,c,this.presenceContext?.custom);d&&(b=d[a])}if(c&&void 0!==b)return b;let d=this.getBaseTargetFromProps(this.props,a);return void 0===d||aY(d)?void 0!==this.initialValues[a]&&void 0===b?void 0:this.baseTarget[a]:d}on(a,b){return this.events[a]||(this.events[a]=new a1),this.events[a].add(b)}notify(a,...b){this.events[a]&&this.events[a].notify(...b)}scheduleRenderMicrotask(){a6.render(this.render)}}class bq extends bp{constructor(){super(...arguments),this.KeyframeResolver=aX}sortInstanceNodePosition(a,b){return 2&a.compareDocumentPosition(b)?1:-1}getBaseTargetFromProps(a,b){return a.style?a.style[b]:void 0}removeValueFromRenderState(a,{vars:b,style:c}){delete b[a],delete c[a]}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);let{children:a}=this.props;aY(a)&&(this.childSubscription=a.on("change",a=>{this.current&&(this.current.textContent=`${a}`)}))}}let br=(a,b)=>b&&"number"==typeof a?b.transform(a):a,bs={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},bt=e.length;function bu(a,b,c){let{style:d,vars:g,transformOrigin:h}=a,i=!1,j=!1;for(let a in b){let c=b[a];if(f.has(a)){i=!0;continue}if(r(a)){g[a]=c;continue}{let b=br(c,aS[a]);a.startsWith("origin")?(j=!0,h[a]=b):d[a]=b}}if(!b.transform&&(i||c?d.transform=function(a,b,c){let d="",f=!0;for(let g=0;g<bt;g++){let h=e[g],i=a[h];if(void 0===i)continue;let j=!0;if(!(j="number"==typeof i?i===+!!h.startsWith("scale"):0===parseFloat(i))||c){let a=br(i,aS[h]);if(!j){f=!1;let b=bs[h]||h;d+=`${b}(${a}) `}c&&(b[h]=a)}}return d=d.trim(),c?d=c(b,f?"":d):f&&(d="none"),d}(b,a.transform,c):d.transform&&(d.transform="none")),j){let{originX:a="50%",originY:b="50%",originZ:c=0}=h;d.transformOrigin=`${a} ${b} ${c}`}}function bv(a,{style:b,vars:c},d,e){let f,g=a.style;for(f in b)g[f]=b[f];for(f in e?.applyProjectionStyles(g,d),c)g.setProperty(f,c[f])}let bw={};function bx(a,{layout:b,layoutId:c}){return f.has(a)||a.startsWith("origin")||(b||void 0!==c)&&(!!bw[a]||"opacity"===a)}function by(a,b,c){let{style:d}=a,e={};for(let f in d)(aY(d[f])||b.style&&aY(b.style[f])||bx(f,a)||c?.getValue(f)?.liveStyle!==void 0)&&(e[f]=d[f]);return e}class bz extends bq{constructor(){super(...arguments),this.type="html",this.renderInstance=bv}readValueFromInstance(a,b){if(f.has(b))return this.projection?.isProjecting?n(b):((a,b)=>{let{transform:c="none"}=getComputedStyle(a);return o(c,b)})(a,b);{let c=window.getComputedStyle(a),d=(r(b)?c.getPropertyValue(b):c[b])||0;return"string"==typeof d?d.trim():d}}measureInstanceViewportBox(a,{transformPagePoint:b}){return H(a,b)}build(a,b,c){bu(a,b,c.transformTemplate)}scrapeMotionValuesFromProps(a,b,c){return by(a,b,c)}}let bA=a=>a.replace(/([a-z])([A-Z])/gu,"$1-$2").toLowerCase(),bB={offset:"stroke-dashoffset",array:"stroke-dasharray"},bC={offset:"strokeDashoffset",array:"strokeDasharray"};function bD(a,{attrX:b,attrY:c,attrScale:d,pathLength:e,pathSpacing:f=1,pathOffset:g=0,...h},i,j,k){if(bu(a,h,j),i){a.style.viewBox&&(a.attrs.viewBox=a.style.viewBox);return}a.attrs=a.style,a.style={};let{attrs:l,style:m}=a;l.transform&&(m.transform=l.transform,delete l.transform),(m.transform||l.transformOrigin)&&(m.transformOrigin=l.transformOrigin??"50% 50%",delete l.transformOrigin),m.transform&&(m.transformBox=k?.transformBox??"fill-box",delete l.transformBox),void 0!==b&&(l.x=b),void 0!==c&&(l.y=c),void 0!==d&&(l.scale=d),void 0!==e&&function(a,b,c=1,d=0,e=!0){a.pathLength=1;let f=e?bB:bC;a[f.offset]=Q.transform(-d);let g=Q.transform(b),h=Q.transform(c);a[f.array]=`${g} ${h}`}(l,e,f,g,!1)}let bE=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]),bF=a=>"string"==typeof a&&"svg"===a.toLowerCase();function bG(a,b,c){let d=by(a,b,c);for(let c in a)(aY(a[c])||aY(b[c]))&&(d[-1!==e.indexOf(c)?"attr"+c.charAt(0).toUpperCase()+c.substring(1):c]=a[c]);return d}class bH extends bq{constructor(){super(...arguments),this.type="svg",this.isSVGTag=!1,this.measureInstanceViewportBox=bc}getBaseTargetFromProps(a,b){return a[b]}readValueFromInstance(a,b){if(f.has(b)){let a=aU(b);return a&&a.default||0}return b=bE.has(b)?b:bA(b),a.getAttribute(b)}scrapeMotionValuesFromProps(a,b,c){return bG(a,b,c)}build(a,b,c){bD(a,b,this.isSVGTag,c.transformTemplate,c.style)}renderInstance(a,b,c,d){for(let c in bv(a,b,void 0,d),b.attrs)a.setAttribute(bE.has(c)?c:bA(c),b.attrs[c])}mount(a){this.isSVGTag=bF(a.tagName),super.mount(a)}}let bI=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function bJ(a){if("string"!=typeof a||a.includes("-"));else if(bI.indexOf(a)>-1||/[A-Z]/u.test(a))return!0;return!1}let bK=(0,d.createContext)({}),bL=((0,d.createContext)({strict:!1}),(0,d.createContext)({transformPagePoint:a=>a,isStatic:!1,reducedMotion:"never"})),bM=(0,d.createContext)({});function bN(a){return Array.isArray(a)?a.join(" "):a}let bO=()=>({style:{},transform:{},transformOrigin:{},vars:{}});function bP(a,b,c){for(let d in b)aY(b[d])||bx(d,c)||(a[d]=b[d])}let bQ=()=>({...bO(),attrs:{}}),bR=new Set(["animate","exit","variants","initial","style","values","variants","transition","transformTemplate","custom","inherit","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","_dragX","_dragY","onHoverStart","onHoverEnd","onViewportEnter","onViewportLeave","globalTapTarget","ignoreStrict","viewport"]);function bS(a){return a.startsWith("while")||a.startsWith("drag")&&"draggable"!==a||a.startsWith("layout")||a.startsWith("onTap")||a.startsWith("onPan")||a.startsWith("onLayout")||bR.has(a)}let bT=a=>!bS(a);try{!function(a){"function"==typeof a&&(bT=b=>b.startsWith("on")?!bS(b):a(b))}((()=>{let a=Error("Cannot find module '@emotion/is-prop-valid'");throw a.code="MODULE_NOT_FOUND",a})().default)}catch{}let bU=(0,d.createContext)(null);function bV(a){let b=(0,d.useRef)(null);return null===b.current&&(b.current=a()),b.current}function bW(a){return aY(a)?a.get():a}let bX=a=>(b,c)=>{let e=(0,d.useContext)(bM),f=(0,d.useContext)(bU),g=()=>(function({scrapeMotionValuesFromProps:a,createRenderState:b},c,d,e){return{latestValues:function(a,b,c,d){let e={},f=d(a,{});for(let a in f)e[a]=bW(f[a]);let{initial:g,animate:h}=a,i=bk(a),j=bl(a);b&&j&&!i&&!1!==a.inherit&&(void 0===g&&(g=b.initial),void 0===h&&(h=b.animate));let k=!!c&&!1===c.initial,l=(k=k||!1===g)?h:g;if(l&&"boolean"!=typeof l&&!bg(l)){let b=Array.isArray(l)?l:[l];for(let c=0;c<b.length;c++){let d=bn(a,b[c]);if(d){let{transitionEnd:a,transition:b,...c}=d;for(let a in c){let b=c[a];if(Array.isArray(b)){let a=k?b.length-1:0;b=b[a]}null!==b&&(e[a]=b)}for(let b in a)e[b]=a[b]}}}return e}(c,d,e,a),renderState:b()}})(a,b,e,f);return c?g():bV(g)},bY=bX({scrapeMotionValuesFromProps:by,createRenderState:bO}),bZ=bX({scrapeMotionValuesFromProps:bG,createRenderState:bQ}),b$=Symbol.for("motionComponentSymbol");function b_(a){return a&&"object"==typeof a&&Object.prototype.hasOwnProperty.call(a,"current")}let b0="data-"+bA("framerAppearId"),b1=(0,d.createContext)({}),b2=d.useEffect;function b3(a,{forwardMotionProps:b=!1}={},e,f){e&&function(a){for(let b in a)a8[b]={...a8[b],...a[b]}}(e);let g=bJ(a)?bZ:bY;function h(e,f){var h;let i,j={...(0,d.useContext)(bL),...e,layoutId:function({layoutId:a}){let b=(0,d.useContext)(bK).id;return b&&void 0!==a?b+"-"+a:a}(e)},{isStatic:k}=j,l=function(a){let{initial:b,animate:c}=function(a,b){if(bk(a)){let{initial:b,animate:c}=a;return{initial:!1===b||bh(b)?b:void 0,animate:bh(c)?c:void 0}}return!1!==a.inherit?b:{}}(a,(0,d.useContext)(bM));return(0,d.useMemo)(()=>({initial:b,animate:c}),[bN(b),bN(c)])}(e),m=g(e,k);return(0,c.jsxs)(bM.Provider,{value:l,children:[i&&l.visualElement?(0,c.jsx)(i,{visualElement:l.visualElement,...j}):null,function(a,b,c,{latestValues:e},f,g=!1){let h=(bJ(a)?function(a,b,c,e){let f=(0,d.useMemo)(()=>{let c=bQ();return bD(c,b,bF(e),a.transformTemplate,a.style),{...c.attrs,style:{...c.style}}},[b]);if(a.style){let b={};bP(b,a.style,a),f.style={...b,...f.style}}return f}:function(a,b){let c={},e=function(a,b){let c=a.style||{},e={};return bP(e,c,a),Object.assign(e,function({transformTemplate:a},b){return(0,d.useMemo)(()=>{let c=bO();return bu(c,b,a),Object.assign({},c.vars,c.style)},[b])}(a,b)),e}(a,b);return a.drag&&!1!==a.dragListener&&(c.draggable=!1,e.userSelect=e.WebkitUserSelect=e.WebkitTouchCallout="none",e.touchAction=!0===a.drag?"none":`pan-${"x"===a.drag?"y":"x"}`),void 0===a.tabIndex&&(a.onTap||a.onTapStart||a.whileTap)&&(c.tabIndex=0),c.style=e,c})(b,e,f,a),i=function(a,b,c){let d={};for(let e in a)("values"!==e||"object"!=typeof a.values)&&(bT(e)||!0===c&&bS(e)||!b&&!bS(e)||a.draggable&&e.startsWith("onDrag"))&&(d[e]=a[e]);return d}(b,"string"==typeof a,g),j=a!==d.Fragment?{...i,...h,ref:c}:{},{children:k}=b,l=(0,d.useMemo)(()=>aY(k)?k.get():k,[k]);return(0,d.createElement)(a,{...j,children:l})}(a,e,(h=l.visualElement,(0,d.useCallback)(a=>{a&&m.onMount&&m.onMount(a),h&&(a?h.mount(a):h.unmount()),f&&("function"==typeof f?f(a):b_(f)&&(f.current=a))},[h])),m,k,b)]})}h.displayName=`motion.${"string"==typeof a?a:`create(${a.displayName??a.name??""})`}`;let i=(0,d.forwardRef)(h);return i[b$]=a,i}function b4(a,b,c){let d=a.getProps();return bn(d,b,void 0!==c?c:d.custom,a)}function b5(a,b){return a?.[b]??a?.default??a}let b6=a=>Array.isArray(a);function b7(a,b){let{transitionEnd:c={},transition:d={},...e}=b4(a,b)||{};for(let b in e={...e,...c}){var f;let c=b6(f=e[b])?f[f.length-1]||0:f;a.hasValue(b)?a.getValue(b).set(c):a.addValue(b,a4(c))}}function b8(a,b){let c=a.getValue("willChange");if(aY(c)&&c.add)return c.add(b);if(!c&&ae.WillChange){let c=new ae.WillChange("auto");a.addValue("willChange",c),c.add(b)}}function b9(a){a.duration=0,a.type="keyframes"}let ca=(a,b)=>c=>b(a(c)),cb=(...a)=>a.reduce(ca),cc=a=>1e3*a,cd={layout:0,mainThread:0,waapi:0};function ce(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*(2/3-c)*6:a}function cf(a,b){return c=>c>0?b:a}let cg=(a,b,c)=>{let d=a*a,e=c*(b*b-d)+d;return e<0?0:Math.sqrt(e)},ch=[aB,aA,aC];function ci(a){let b=ch.find(b=>b.test(a));if(X(!!b,`'${a}' is not an animatable color. Use the equivalent color code instead.`,"color-not-animatable"),!b)return!1;let c=b.parse(a);return b===aC&&(c=function({hue:a,saturation:b,lightness:c,alpha:d}){a/=360,c/=100;let e=0,f=0,g=0;if(b/=100){let d=c<.5?c*(1+b):c+b-c*b,h=2*c-d;e=ce(h,d,a+1/3),f=ce(h,d,a),g=ce(h,d,a-1/3)}else e=f=g=c;return{red:Math.round(255*e),green:Math.round(255*f),blue:Math.round(255*g),alpha:d}}(c)),c}let cj=(a,b)=>{let c=ci(a),d=ci(b);if(!c||!d)return cf(a,b);let e={...c};return a=>(e.red=cg(c.red,d.red,a),e.green=cg(c.green,d.green,a),e.blue=cg(c.blue,d.blue,a),e.alpha=w(c.alpha,d.alpha,a),aA.transform(e))},ck=new Set(["none","hidden"]);function cl(a,b){return c=>w(a,b,c)}function cm(a){return"number"==typeof a?cl:"string"==typeof a?t(a)?cf:aD.test(a)?cj:cp:Array.isArray(a)?cn:"object"==typeof a?aD.test(a)?cj:co:cf}function cn(a,b){let c=[...a],d=c.length,e=a.map((a,c)=>cm(a)(a,b[c]));return a=>{for(let b=0;b<d;b++)c[b]=e[b](a);return c}}function co(a,b){let c={...a,...b},d={};for(let e in c)void 0!==a[e]&&void 0!==b[e]&&(d[e]=cm(a[e])(a[e],b[e]));return a=>{for(let b in d)c[b]=d[b](a);return c}}let cp=(a,b)=>{let c=aM.createTransformer(b),d=aI(a),e=aI(b);return d.indexes.var.length===e.indexes.var.length&&d.indexes.color.length===e.indexes.color.length&&d.indexes.number.length>=e.indexes.number.length?ck.has(a)&&!e.values.length||ck.has(b)&&!d.values.length?function(a,b){return ck.has(a)?c=>c<=0?a:b:c=>c>=1?b:a}(a,b):cb(cn(function(a,b){let c=[],d={color:0,var:0,number:0};for(let e=0;e<b.values.length;e++){let f=b.types[e],g=a.indexes[f][d[f]],h=a.values[g]??0;c[e]=h,d[f]++}return c}(d,e),e.values),c):(X(!0,`Complex values '${a}' and '${b}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`,"complex-values-different"),cf(a,b))};function cq(a,b,c){return"number"==typeof a&&"number"==typeof b&&"number"==typeof c?w(a,b,c):cm(a)(a,b)}let cr=a=>{let b=({timestamp:b})=>a(b);return{start:(a=!0)=>ai.update(b,a),stop:()=>aj(b),now:()=>ak.isProcessing?ak.timestamp:a$.now()}},cs=(a,b,c=10)=>{let d="",e=Math.max(Math.round(b/c),2);for(let b=0;b<e;b++)d+=Math.round(1e4*a(b/(e-1)))/1e4+", ";return`linear(${d.substring(0,d.length-2)})`};function ct(a){let b=0,c=a.next(b);for(;!c.done&&b<2e4;)b+=50,c=a.next(b);return b>=2e4?1/0:b}function cu(a,b,c){var d,e;let f=Math.max(b-5,0);return d=c-a(f),(e=b-f)?1e3/e*d:0}let cv={stiffness:100,damping:10,mass:1,velocity:0,duration:800,bounce:.3,visualDuration:.3,restSpeed:{granular:.01,default:2},restDelta:{granular:.005,default:.5},minDuration:.01,maxDuration:10,minDamping:.05,maxDamping:1};function cw(a,b){return a*Math.sqrt(1-b*b)}let cx=["duration","bounce"],cy=["stiffness","damping","mass"];function cz(a,b){return b.some(b=>void 0!==a[b])}function cA(a=cv.visualDuration,b=cv.bounce){let c,d="object"!=typeof a?{visualDuration:a,keyframes:[0,1],bounce:b}:a,{restSpeed:e,restDelta:f}=d,g=d.keyframes[0],h=d.keyframes[d.keyframes.length-1],i={done:!1,value:g},{stiffness:j,damping:k,mass:l,duration:m,velocity:n,isResolvedFromDuration:o}=function(a){let b={velocity:cv.velocity,stiffness:cv.stiffness,damping:cv.damping,mass:cv.mass,isResolvedFromDuration:!1,...a};if(!cz(a,cy)&&cz(a,cx))if(a.visualDuration){let c=2*Math.PI/(1.2*a.visualDuration),d=c*c,e=2*J(.05,1,1-(a.bounce||0))*Math.sqrt(d);b={...b,mass:cv.mass,stiffness:d,damping:e}}else{let c=function({duration:a=cv.duration,bounce:b=cv.bounce,velocity:c=cv.velocity,mass:d=cv.mass}){let e,f;X(a<=cc(cv.maxDuration),"Spring duration must be 10 seconds or less","spring-duration-limit");let g=1-b;g=J(cv.minDamping,cv.maxDamping,g),a=J(cv.minDuration,cv.maxDuration,a/1e3),g<1?(e=b=>{let d=b*g,e=d*a;return .001-(d-c)/cw(b,g)*Math.exp(-e)},f=b=>{let d=b*g*a,f=Math.pow(g,2)*Math.pow(b,2)*a,h=Math.exp(-d),i=cw(Math.pow(b,2),g);return(d*c+c-f)*h*(-e(b)+.001>0?-1:1)/i}):(e=b=>-.001+Math.exp(-b*a)*((b-c)*a+1),f=b=>a*a*(c-b)*Math.exp(-b*a));let h=function(a,b,c){let d=c;for(let c=1;c<12;c++)d-=a(d)/b(d);return d}(e,f,5/a);if(a=cc(a),isNaN(h))return{stiffness:cv.stiffness,damping:cv.damping,duration:a};{let b=Math.pow(h,2)*d;return{stiffness:b,damping:2*g*Math.sqrt(d*b),duration:a}}}(a);(b={...b,...c,mass:cv.mass}).isResolvedFromDuration=!0}return b}({...d,velocity:-((d.velocity||0)/1e3)}),p=n||0,q=k/(2*Math.sqrt(j*l)),r=h-g,s=Math.sqrt(j/l)/1e3,t=5>Math.abs(r);if(e||(e=t?cv.restSpeed.granular:cv.restSpeed.default),f||(f=t?cv.restDelta.granular:cv.restDelta.default),q<1){let a=cw(s,q);c=b=>h-Math.exp(-q*s*b)*((p+q*s*r)/a*Math.sin(a*b)+r*Math.cos(a*b))}else if(1===q)c=a=>h-Math.exp(-s*a)*(r+(p+s*r)*a);else{let a=s*Math.sqrt(q*q-1);c=b=>{let c=Math.exp(-q*s*b),d=Math.min(a*b,300);return h-c*((p+q*s*r)*Math.sinh(d)+a*r*Math.cosh(d))/a}}let u={calculatedDuration:o&&m||null,next:a=>{let b=c(a);if(o)i.done=a>=m;else{let d=0===a?p:0;q<1&&(d=0===a?cc(p):cu(c,a,b));let g=Math.abs(h-b)<=f;i.done=Math.abs(d)<=e&&g}return i.value=i.done?h:b,i},toString:()=>{let a=Math.min(ct(u),2e4),b=cs(b=>u.next(a*b).value,a,30);return a+"ms "+b},toTransition:()=>{}};return u}function cB({keyframes:a,velocity:b=0,power:c=.8,timeConstant:d=325,bounceDamping:e=10,bounceStiffness:f=500,modifyTarget:g,min:h,max:i,restDelta:j=.5,restSpeed:k}){let l,m,n=a[0],o={done:!1,value:n},p=c*b,q=n+p,r=void 0===g?q:g(q);r!==q&&(p=r-n);let s=a=>-p*Math.exp(-a/d),t=a=>r+s(a),u=a=>{let b=s(a),c=t(a);o.done=Math.abs(b)<=j,o.value=o.done?r:c},v=a=>{let b;if(b=o.value,void 0!==h&&b<h||void 0!==i&&b>i){var c;l=a,m=cA({keyframes:[o.value,(c=o.value,void 0===h?i:void 0===i||Math.abs(h-c)<Math.abs(i-c)?h:i)],velocity:cu(t,a,o.value),damping:e,stiffness:f,restDelta:j,restSpeed:k})}};return v(0),{calculatedDuration:null,next:a=>{let b=!1;return(m||void 0!==l||(b=!0,u(a),v(a)),void 0!==l&&a>=l)?m.next(a-l):(b||u(a),o)}}}cA.applyToOptions=a=>{let b=function(a,b=100,c){let d=c({...a,keyframes:[0,b]}),e=Math.min(ct(d),2e4);return{type:"keyframes",ease:a=>d.next(e*a).value/b,duration:e/1e3}}(a,100,cA);return a.ease=b.ease,a.duration=cc(b.duration),a.type="keyframes",a};let cC=(a,b,c)=>(((1-3*c+3*b)*a+(3*c-6*b))*a+3*b)*a;function cD(a,b,c,d){return a===b&&c===d?ad:e=>0===e||1===e?e:cC(function(a,b,c,d,e){let f,g,h=0;do(f=cC(g=b+(c-b)/2,d,e)-a)>0?c=g:b=g;while(Math.abs(f)>1e-7&&++h<12)return g}(e,0,1,a,c),b,d)}let cE=cD(.42,0,1,1),cF=cD(0,0,.58,1),cG=cD(.42,0,.58,1),cH=a=>b=>b<=.5?a(2*b)/2:(2-a(2*(1-b)))/2,cI=a=>b=>1-a(1-b),cJ=cD(.33,1.53,.69,.99),cK=cI(cJ),cL=cH(cK),cM=a=>(a*=2)<1?.5*cK(a):.5*(2-Math.pow(2,-10*(a-1))),cN=a=>1-Math.sin(Math.acos(a)),cO=cI(cN),cP=cH(cN),cQ=a=>Array.isArray(a)&&"number"==typeof a[0],cR={linear:ad,easeIn:cE,easeInOut:cG,easeOut:cF,circIn:cN,circInOut:cP,circOut:cO,backIn:cK,backInOut:cL,backOut:cJ,anticipate:cM},cS=a=>{if(cQ(a)){Y(4===a.length,"Cubic bezier arrays must contain four numerical values.","cubic-bezier-length");let[b,c,d,e]=a;return cD(b,c,d,e)}return"string"==typeof a?(Y(void 0!==cR[a],`Invalid easing type '${a}'`,"invalid-easing-type"),cR[a]):a},cT=(a,b,c)=>{let d=b-a;return 0===d?1:(c-a)/d};function cU({duration:a=300,keyframes:b,times:c,ease:d="easeInOut"}){var e;let f=Array.isArray(d)&&"number"!=typeof d[0]?d.map(cS):cS(d),g={done:!1,value:b[0]},h=function(a,b,{clamp:c=!0,ease:d,mixer:e}={}){let f=a.length;if(Y(f===b.length,"Both input and output ranges must be the same length","range-length"),1===f)return()=>b[0];if(2===f&&b[0]===b[1])return()=>b[1];let g=a[0]===a[1];a[0]>a[f-1]&&(a=[...a].reverse(),b=[...b].reverse());let h=function(a,b,c){let d=[],e=c||ae.mix||cq,f=a.length-1;for(let c=0;c<f;c++){let f=e(a[c],a[c+1]);b&&(f=cb(Array.isArray(b)?b[c]||ad:b,f)),d.push(f)}return d}(b,d,e),i=h.length,j=c=>{if(g&&c<a[0])return b[0];let d=0;if(i>1)for(;d<a.length-2&&!(c<a[d+1]);d++);let e=cT(a[d],a[d+1],c);return h[d](e)};return c?b=>j(J(a[0],a[f-1],b)):j}((e=c&&c.length===b.length?c:function(a){let b=[0];return!function(a,b){let c=a[a.length-1];for(let d=1;d<=b;d++){let e=cT(0,b,d);a.push(w(c,1,e))}}(b,a.length-1),b}(b),e.map(b=>b*a)),b,{ease:Array.isArray(f)?f:b.map(()=>f||cG).splice(0,b.length-1)});return{calculatedDuration:a,next:b=>(g.value=h(b),g.done=b>=a,g)}}let cV=a=>null!==a;function cW(a,{repeat:b,repeatType:c="loop"},d,e=1){let f=a.filter(cV),g=e<0||b&&"loop"!==c&&b%2==1?0:f.length-1;return g&&void 0!==d?d:f[g]}let cX={decay:cB,inertia:cB,tween:cU,keyframes:cU,spring:cA};function cY(a){"string"==typeof a.type&&(a.type=cX[a.type])}class cZ{constructor(){this.updateFinished()}get finished(){return this._finished}updateFinished(){this._finished=new Promise(a=>{this.resolve=a})}notifyFinished(){this.resolve()}then(a,b){return this.finished.then(a,b)}}let c$=a=>a/100;class c_ extends cZ{constructor(a){super(),this.state="idle",this.startTime=null,this.isStopped=!1,this.currentTime=0,this.holdTime=null,this.playbackSpeed=1,this.stop=()=>{let{motionValue:a}=this.options;a&&a.updatedAt!==a$.now()&&this.tick(a$.now()),this.isStopped=!0,"idle"!==this.state&&(this.teardown(),this.options.onStop?.())},cd.mainThread++,this.options=a,this.initAnimation(),this.play(),!1===a.autoplay&&this.pause()}initAnimation(){let{options:a}=this;cY(a);let{type:b=cU,repeat:c=0,repeatDelay:d=0,repeatType:e,velocity:f=0}=a,{keyframes:g}=a,h=b||cU;h!==cU&&"number"!=typeof g[0]&&(this.mixKeyframes=cb(c$,cq(g[0],g[1])),g=[0,100]);let i=h({...a,keyframes:g});"mirror"===e&&(this.mirroredGenerator=h({...a,keyframes:[...g].reverse(),velocity:-f})),null===i.calculatedDuration&&(i.calculatedDuration=ct(i));let{calculatedDuration:j}=i;this.calculatedDuration=j,this.resolvedDuration=j+d,this.totalDuration=this.resolvedDuration*(c+1)-d,this.generator=i}updateTime(a){let b=Math.round(a-this.startTime)*this.playbackSpeed;null!==this.holdTime?this.currentTime=this.holdTime:this.currentTime=b}tick(a,b=!1){let{generator:c,totalDuration:d,mixKeyframes:e,mirroredGenerator:f,resolvedDuration:g,calculatedDuration:h}=this;if(null===this.startTime)return c.next(0);let{delay:i=0,keyframes:j,repeat:k,repeatType:l,repeatDelay:m,type:n,onUpdate:o,finalKeyframe:p}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,a):this.speed<0&&(this.startTime=Math.min(a-d/this.speed,this.startTime)),b?this.currentTime=a:this.updateTime(a);let q=this.currentTime-i*(this.playbackSpeed>=0?1:-1),r=this.playbackSpeed>=0?q<0:q>d;this.currentTime=Math.max(q,0),"finished"===this.state&&null===this.holdTime&&(this.currentTime=d);let s=this.currentTime,t=c;if(k){let a=Math.min(this.currentTime,d)/g,b=Math.floor(a),c=a%1;!c&&a>=1&&(c=1),1===c&&b--,(b=Math.min(b,k+1))%2&&("reverse"===l?(c=1-c,m&&(c-=m/g)):"mirror"===l&&(t=f)),s=J(0,1,c)*g}let u=r?{done:!1,value:j[0]}:t.next(s);e&&(u.value=e(u.value));let{done:v}=u;r||null===h||(v=this.playbackSpeed>=0?this.currentTime>=d:this.currentTime<=0);let w=null===this.holdTime&&("finished"===this.state||"running"===this.state&&v);return w&&n!==cB&&(u.value=cW(j,this.options,p,this.speed)),o&&o(u.value),w&&this.finish(),u}then(a,b){return this.finished.then(a,b)}get duration(){return this.calculatedDuration/1e3}get iterationDuration(){let{delay:a=0}=this.options||{};return this.duration+a/1e3}get time(){return this.currentTime/1e3}set time(a){a=cc(a),this.currentTime=a,null===this.startTime||null!==this.holdTime||0===this.playbackSpeed?this.holdTime=a:this.driver&&(this.startTime=this.driver.now()-a/this.playbackSpeed),this.driver?.start(!1)}get speed(){return this.playbackSpeed}set speed(a){this.updateTime(a$.now());let b=this.playbackSpeed!==a;this.playbackSpeed=a,b&&(this.time=this.currentTime/1e3)}play(){if(this.isStopped)return;let{driver:a=cr,startTime:b}=this.options;this.driver||(this.driver=a(a=>this.tick(a))),this.options.onPlay?.();let c=this.driver.now();"finished"===this.state?(this.updateFinished(),this.startTime=c):null!==this.holdTime?this.startTime=c-this.holdTime:this.startTime||(this.startTime=b??c),"finished"===this.state&&this.speed<0&&(this.startTime+=this.calculatedDuration),this.holdTime=null,this.state="running",this.driver.start()}pause(){this.state="paused",this.updateTime(a$.now()),this.holdTime=this.currentTime}complete(){"running"!==this.state&&this.play(),this.state="finished",this.holdTime=null}finish(){this.notifyFinished(),this.teardown(),this.state="finished",this.options.onComplete?.()}cancel(){this.holdTime=null,this.startTime=0,this.tick(0),this.teardown(),this.options.onCancel?.()}teardown(){this.state="idle",this.stopDriver(),this.startTime=this.holdTime=null,cd.mainThread--}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(a){return this.startTime=0,this.tick(a,!0)}attachTimeline(a){return this.options.allowFlatten&&(this.options.type="keyframes",this.options.ease="linear",this.initAnimation()),this.driver?.stop(),a.observe(this)}}function c0(a){let b;return()=>(void 0===b&&(b=a()),b)}let c1=c0(()=>void 0!==window.ScrollTimeline),c2={},c3=function(a,b){let c=c0(a);return()=>c2[b]??c()}(()=>{try{document.createElement("div").animate({opacity:0},{easing:"linear(0, 1)"})}catch(a){return!1}return!0},"linearEasing"),c4=([a,b,c,d])=>`cubic-bezier(${a}, ${b}, ${c}, ${d})`,c5={linear:"linear",ease:"ease",easeIn:"ease-in",easeOut:"ease-out",easeInOut:"ease-in-out",circIn:c4([0,.65,.55,1]),circOut:c4([.55,0,1,.45]),backIn:c4([.31,.01,.66,-.59]),backOut:c4([.33,1.53,.69,.99])};function c6(a){return"function"==typeof a&&"applyToOptions"in a}class c7 extends cZ{constructor(a){if(super(),this.finishedTime=null,this.isStopped=!1,!a)return;let{element:b,name:c,keyframes:d,pseudoElement:e,allowFlatten:f=!1,finalKeyframe:g,onComplete:h}=a;this.isPseudoElement=!!e,this.allowFlatten=f,this.options=a,Y("string"!=typeof a.type,'Mini animate() doesn\'t support "type" as a string.',"mini-spring");let i=function({type:a,...b}){return c6(a)&&c3()?a.applyToOptions(b):(b.duration??(b.duration=300),b.ease??(b.ease="easeOut"),b)}(a);this.animation=function(a,b,c,{delay:d=0,duration:e=300,repeat:f=0,repeatType:g="loop",ease:h="easeOut",times:i}={},j){let k={[b]:c};i&&(k.offset=i);let l=function a(b,c){if(b)return"function"==typeof b?c3()?cs(b,c):"ease-out":cQ(b)?c4(b):Array.isArray(b)?b.map(b=>a(b,c)||c5.easeOut):c5[b]}(h,e);Array.isArray(l)&&(k.easing=l),ag.value&&cd.waapi++;let m={delay:d,duration:e,easing:Array.isArray(l)?"linear":l,fill:"both",iterations:f+1,direction:"reverse"===g?"alternate":"normal"};j&&(m.pseudoElement=j);let n=a.animate(k,m);return ag.value&&n.finished.finally(()=>{cd.waapi--}),n}(b,c,d,i,e),!1===i.autoplay&&this.animation.pause(),this.animation.onfinish=()=>{if(this.finishedTime=this.time,!e){let a=cW(d,this.options,g,this.speed);this.updateMotionValue?this.updateMotionValue(a):function(a,b,c){b.startsWith("--")?a.style.setProperty(b,c):a.style[b]=c}(b,c,a),this.animation.cancel()}h?.(),this.notifyFinished()}}play(){this.isStopped||(this.animation.play(),"finished"===this.state&&this.updateFinished())}pause(){this.animation.pause()}complete(){this.animation.finish?.()}cancel(){try{this.animation.cancel()}catch(a){}}stop(){if(this.isStopped)return;this.isStopped=!0;let{state:a}=this;"idle"!==a&&"finished"!==a&&(this.updateMotionValue?this.updateMotionValue():this.commitStyles(),this.isPseudoElement||this.cancel())}commitStyles(){this.isPseudoElement||this.animation.commitStyles?.()}get duration(){return Number(this.animation.effect?.getComputedTiming?.().duration||0)/1e3}get iterationDuration(){let{delay:a=0}=this.options||{};return this.duration+a/1e3}get time(){return(Number(this.animation.currentTime)||0)/1e3}set time(a){this.finishedTime=null,this.animation.currentTime=cc(a)}get speed(){return this.animation.playbackRate}set speed(a){a<0&&(this.finishedTime=null),this.animation.playbackRate=a}get state(){return null!==this.finishedTime?"finished":this.animation.playState}get startTime(){return Number(this.animation.startTime)}set startTime(a){this.animation.startTime=a}attachTimeline({timeline:a,observe:b}){return(this.allowFlatten&&this.animation.effect?.updateTiming({easing:"linear"}),this.animation.onfinish=null,a&&c1())?(this.animation.timeline=a,ad):b(this)}}let c8={anticipate:cM,backInOut:cL,circInOut:cP};class c9 extends c7{constructor(a){!function(a){"string"==typeof a.ease&&a.ease in c8&&(a.ease=c8[a.ease])}(a),cY(a),super(a),a.startTime&&(this.startTime=a.startTime),this.options=a}updateMotionValue(a){let{motionValue:b,onUpdate:c,onComplete:d,element:e,...f}=this.options;if(!b)return;if(void 0!==a)return void b.set(a);let g=new c_({...f,autoplay:!1}),h=cc(this.finishedTime??this.time);b.setWithVelocity(g.sample(h-10).value,g.sample(h).value,10),g.stop()}}let da=(a,b)=>"zIndex"!==b&&!!("number"==typeof a||Array.isArray(a)||"string"==typeof a&&(aM.test(a)||"0"===a)&&!a.startsWith("url(")),db=new Set(["opacity","clipPath","filter","transform"]),dc=c0(()=>Object.hasOwnProperty.call(Element.prototype,"animate"));class dd extends cZ{constructor({autoplay:a=!0,delay:b=0,type:c="keyframes",repeat:d=0,repeatDelay:e=0,repeatType:f="loop",keyframes:g,name:h,motionValue:i,element:j,...k}){super(),this.stop=()=>{this._animation&&(this._animation.stop(),this.stopTimeline?.()),this.keyframeResolver?.cancel()},this.createdAt=a$.now();let l={autoplay:a,delay:b,type:c,repeat:d,repeatDelay:e,repeatType:f,name:h,motionValue:i,element:j,...k},m=j?.KeyframeResolver||as;this.keyframeResolver=new m(g,(a,b,c)=>this.onKeyframesResolved(a,b,l,!c),h,i,j),this.keyframeResolver?.scheduleResolve()}onKeyframesResolved(a,b,c,d){this.keyframeResolver=void 0;let{name:e,type:f,velocity:g,delay:h,isHandoff:i,onUpdate:j}=c;this.resolvedAt=a$.now(),!function(a,b,c,d){let e=a[0];if(null===e)return!1;if("display"===b||"visibility"===b)return!0;let f=a[a.length-1],g=da(e,b),h=da(f,b);return X(g===h,`You are trying to animate ${b} from "${e}" to "${f}". "${g?f:e}" is not an animatable value.`,"value-not-animatable"),!!g&&!!h&&(function(a){let b=a[0];if(1===a.length)return!0;for(let c=0;c<a.length;c++)if(a[c]!==b)return!0}(a)||("spring"===c||c6(c))&&d)}(a,e,f,g)&&((ae.instantAnimations||!h)&&j?.(cW(a,c,b)),a[0]=a[a.length-1],b9(c),c.repeat=0);let k={startTime:d?this.resolvedAt&&this.resolvedAt-this.createdAt>40?this.resolvedAt:this.createdAt:void 0,finalKeyframe:b,...c,keyframes:a},l=!i&&function(a){let{motionValue:b,name:c,repeatDelay:d,repeatType:e,damping:f,type:g}=a;if(!(b?.owner?.current instanceof HTMLElement))return!1;let{onUpdate:h,transformTemplate:i}=b.owner.getProps();return dc()&&c&&db.has(c)&&("transform"!==c||!i)&&!h&&!d&&"mirror"!==e&&0!==f&&"inertia"!==g}(k)?new c9({...k,element:k.motionValue.owner.current}):new c_(k);l.finished.then(()=>this.notifyFinished()).catch(ad),this.pendingTimeline&&(this.stopTimeline=l.attachTimeline(this.pendingTimeline),this.pendingTimeline=void 0),this._animation=l}get finished(){return this._animation?this.animation.finished:this._finished}then(a,b){return this.finished.finally(a).then(()=>{})}get animation(){return this._animation||(this.keyframeResolver?.resume(),ap=!0,ar(),aq(),ap=!1),this._animation}get duration(){return this.animation.duration}get iterationDuration(){return this.animation.iterationDuration}get time(){return this.animation.time}set time(a){this.animation.time=a}get speed(){return this.animation.speed}get state(){return this.animation.state}set speed(a){this.animation.speed=a}get startTime(){return this.animation.startTime}attachTimeline(a){return this._animation?this.stopTimeline=this.animation.attachTimeline(a):this.pendingTimeline=a,()=>this.stop()}play(){this.animation.play()}pause(){this.animation.pause()}complete(){this.animation.complete()}cancel(){this._animation&&this.animation.cancel(),this.keyframeResolver?.cancel()}}let de=a=>null!==a,df={type:"spring",stiffness:500,damping:25,restSpeed:10},dg={type:"keyframes",duration:.8},dh={type:"keyframes",ease:[.25,.1,.35,1],duration:.3},di=(a,b,c,d={},e,g)=>h=>{let i=b5(d,a)||{},j=i.delay||d.delay||0,{elapsed:k=0}=d;k-=cc(j);let l={keyframes:Array.isArray(c)?c:[null,c],ease:"easeOut",velocity:b.getVelocity(),...i,delay:-k,onUpdate:a=>{b.set(a),i.onUpdate&&i.onUpdate(a)},onComplete:()=>{h(),i.onComplete&&i.onComplete()},name:a,motionValue:b,element:g?void 0:e};!function({when:a,delay:b,delayChildren:c,staggerChildren:d,staggerDirection:e,repeat:f,repeatType:g,repeatDelay:h,from:i,elapsed:j,...k}){return!!Object.keys(k).length}(i)&&Object.assign(l,((a,{keyframes:b})=>b.length>2?dg:f.has(a)?a.startsWith("scale")?{type:"spring",stiffness:550,damping:0===b[1]?2*Math.sqrt(550):30,restSpeed:10}:df:dh)(a,l)),l.duration&&(l.duration=cc(l.duration)),l.repeatDelay&&(l.repeatDelay=cc(l.repeatDelay)),void 0!==l.from&&(l.keyframes[0]=l.from);let m=!1;if(!1!==l.type&&(0!==l.duration||l.repeatDelay)||(b9(l),0===l.delay&&(m=!0)),(ae.instantAnimations||ae.skipAnimations)&&(m=!0,b9(l),l.delay=0),l.allowFlatten=!i.type&&!i.ease,m&&!g&&void 0!==b.get()){let a=function(a,{repeat:b,repeatType:c="loop"},d){let e=a.filter(de),f=b&&"loop"!==c&&b%2==1?0:e.length-1;return e[f]}(l.keyframes,i);if(void 0!==a)return void ai.update(()=>{l.onUpdate(a),l.onComplete()})}return i.isSync?new c_(l):new dd(l)};function dj(a,b,{delay:c=0,transitionOverride:d,type:e}={}){let{transition:f=a.getDefaultTransition(),transitionEnd:g,...h}=b;d&&(f=d);let i=[],j=e&&a.animationState&&a.animationState.getState()[e];for(let b in h){let d=a.getValue(b,a.latestValues[b]??null),e=h[b];if(void 0===e||j&&function({protectedKeys:a,needsAnimating:b},c){let d=a.hasOwnProperty(c)&&!0!==b[c];return b[c]=!1,d}(j,b))continue;let g={delay:c,...b5(f||{},b)},k=d.get();if(void 0!==k&&!d.isAnimating&&!Array.isArray(e)&&e===k&&!g.velocity)continue;let l=!1;if(window.MotionHandoffAnimation){let c=a.props[b0];if(c){let a=window.MotionHandoffAnimation(c,b,ai);null!==a&&(g.startTime=a,l=!0)}}b8(a,b),d.start(di(b,d,e,a.shouldReduceMotion&&I.has(b)?{type:!1}:g,a,l));let m=d.animation;m&&i.push(m)}return g&&Promise.all(i).then(()=>{ai.update(()=>{g&&b7(a,g)})}),i}function dk(a,b,c,d=0,e=1){let f=Array.from(a).sort((a,b)=>a.sortNodePosition(b)).indexOf(b),g=a.size,h=(g-1)*d;return"function"==typeof c?c(f,g):1===e?f*d:h-f*d}function dl(a,b,c={}){let d=b4(a,b,"exit"===c.type?a.presenceContext?.custom:void 0),{transition:e=a.getDefaultTransition()||{}}=d||{};c.transitionOverride&&(e=c.transitionOverride);let f=d?()=>Promise.all(dj(a,d,c)):()=>Promise.resolve(),g=a.variantChildren&&a.variantChildren.size?(d=0)=>{let{delayChildren:f=0,staggerChildren:g,staggerDirection:h}=e;return function(a,b,c=0,d=0,e=0,f=1,g){let h=[];for(let i of a.variantChildren)i.notify("AnimationStart",b),h.push(dl(i,b,{...g,delay:c+("function"==typeof d?0:d)+dk(a.variantChildren,i,d,e,f)}).then(()=>i.notify("AnimationComplete",b)));return Promise.all(h)}(a,b,d,f,g,h,c)}:()=>Promise.resolve(),{when:h}=e;if(!h)return Promise.all([f(),g(c.delay)]);{let[a,b]="beforeChildren"===h?[f,g]:[g,f];return a().then(()=>b())}}function dm(a,b,c={}){let d;if(a.notify("AnimationStart",b),Array.isArray(b))d=Promise.all(b.map(b=>dl(a,b,c)));else if("string"==typeof b)d=dl(a,b,c);else{let e="function"==typeof b?b4(a,b,c.custom):b;d=Promise.all(dj(a,e,c))}return d.then(()=>{a.notify("AnimationComplete",b)})}function dn(a,b){if(!Array.isArray(b))return!1;let c=b.length;if(c!==a.length)return!1;for(let d=0;d<c;d++)if(b[d]!==a[d])return!1;return!0}let dp=bj.length,dq=[...bi].reverse(),dr=bi.length;function ds(a=!1){return{isActive:a,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function dt(){return{animate:ds(!0),whileInView:ds(),whileHover:ds(),whileTap:ds(),whileDrag:ds(),whileFocus:ds(),exit:ds()}}class du{constructor(a){this.isMounted=!1,this.node=a}update(){}}let dv=0,dw={x:!1,y:!1};function dx(a,b,c,d={passive:!0}){return a.addEventListener(b,c,d),()=>a.removeEventListener(b,c)}let dy=a=>"mouse"===a.pointerType?"number"!=typeof a.button||a.button<=0:!1!==a.isPrimary;function dz(a){return{point:{x:a.pageX,y:a.pageY}}}function dA(a,b,c,d){return dx(a,b,a=>dy(a)&&c(a,dz(a)),d)}function dB(a){return a.max-a.min}function dC(a,b,c,d=.5){a.origin=d,a.originPoint=w(b.min,b.max,a.origin),a.scale=dB(c)/dB(b),a.translate=w(c.min,c.max,a.origin)-a.originPoint,(a.scale>=.9999&&a.scale<=1.0001||isNaN(a.scale))&&(a.scale=1),(a.translate>=-.01&&a.translate<=.01||isNaN(a.translate))&&(a.translate=0)}function dD(a,b,c,d){dC(a.x,b.x,c.x,d?d.originX:void 0),dC(a.y,b.y,c.y,d?d.originY:void 0)}function dE(a,b,c){a.min=c.min+b.min,a.max=a.min+dB(b)}function dF(a,b,c){a.min=b.min-c.min,a.max=a.min+dB(b)}function dG(a,b,c){dF(a.x,b.x,c.x),dF(a.y,b.y,c.y)}function dH(a){return[a("x"),a("y")]}let dI=({current:a})=>a?a.ownerDocument.defaultView:null,dJ=(a,b)=>Math.abs(a-b);class dK{constructor(a,b,{transformPagePoint:c,contextWindow:d=window,dragSnapToOrigin:e=!1,distanceThreshold:f=3}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!(this.lastMoveEvent&&this.lastMoveEventInfo))return;let a=dN(this.lastMoveEventInfo,this.history),b=null!==this.startEvent,c=function(a,b){return Math.sqrt(dJ(a.x,b.x)**2+dJ(a.y,b.y)**2)}(a.offset,{x:0,y:0})>=this.distanceThreshold;if(!b&&!c)return;let{point:d}=a,{timestamp:e}=ak;this.history.push({...d,timestamp:e});let{onStart:f,onMove:g}=this.handlers;b||(f&&f(this.lastMoveEvent,a),this.startEvent=this.lastMoveEvent),g&&g(this.lastMoveEvent,a)},this.handlePointerMove=(a,b)=>{this.lastMoveEvent=a,this.lastMoveEventInfo=dL(b,this.transformPagePoint),ai.update(this.updatePoint,!0)},this.handlePointerUp=(a,b)=>{this.end();let{onEnd:c,onSessionEnd:d,resumeAnimation:e}=this.handlers;if(this.dragSnapToOrigin&&e&&e(),!(this.lastMoveEvent&&this.lastMoveEventInfo))return;let f=dN("pointercancel"===a.type?this.lastMoveEventInfo:dL(b,this.transformPagePoint),this.history);this.startEvent&&c&&c(a,f),d&&d(a,f)},!dy(a))return;this.dragSnapToOrigin=e,this.handlers=b,this.transformPagePoint=c,this.distanceThreshold=f,this.contextWindow=d||window;let g=dL(dz(a),this.transformPagePoint),{point:h}=g,{timestamp:i}=ak;this.history=[{...h,timestamp:i}];let{onSessionStart:j}=b;j&&j(a,dN(g,this.history)),this.removeListeners=cb(dA(this.contextWindow,"pointermove",this.handlePointerMove),dA(this.contextWindow,"pointerup",this.handlePointerUp),dA(this.contextWindow,"pointercancel",this.handlePointerUp))}updateHandlers(a){this.handlers=a}end(){this.removeListeners&&this.removeListeners(),aj(this.updatePoint)}}function dL(a,b){return b?{point:b(a.point)}:a}function dM(a,b){return{x:a.x-b.x,y:a.y-b.y}}function dN({point:a},b){return{point:a,delta:dM(a,dO(b)),offset:dM(a,b[0]),velocity:function(a,b){if(a.length<2)return{x:0,y:0};let c=a.length-1,d=null,e=dO(a);for(;c>=0&&(d=a[c],!(e.timestamp-d.timestamp>cc(.1)));)c--;if(!d)return{x:0,y:0};let f=(e.timestamp-d.timestamp)/1e3;if(0===f)return{x:0,y:0};let g={x:(e.x-d.x)/f,y:(e.y-d.y)/f};return g.x===1/0&&(g.x=0),g.y===1/0&&(g.y=0),g}(b,.1)}}function dO(a){return a[a.length-1]}function dP(a,b,c){return{min:void 0!==b?a.min+b:void 0,max:void 0!==c?a.max+c-(a.max-a.min):void 0}}function dQ(a,b){let c=b.min-a.min,d=b.max-a.max;return b.max-b.min<a.max-a.min&&([c,d]=[d,c]),{min:c,max:d}}function dR(a,b,c){return{min:dS(a,b),max:dS(a,c)}}function dS(a,b){return"number"==typeof a?a:a[b]||0}let dT=new WeakMap;class dU{constructor(a){this.openDragLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=bc(),this.latestPointerEvent=null,this.latestPanInfo=null,this.visualElement=a}start(a,{snapToCursor:b=!1,distanceThreshold:c}={}){let{presenceContext:d}=this.visualElement;if(d&&!1===d.isPresent)return;let e=a=>{let{dragSnapToOrigin:c}=this.getProps();c?this.pauseAnimation():this.stopAnimation(),b&&this.snapToCursor(dz(a).point)},f=(a,b)=>{let{drag:c,dragPropagation:d,onDragStart:e}=this.getProps();if(c&&!d&&(this.openDragLock&&this.openDragLock(),this.openDragLock=function(a){if("x"===a||"y"===a)if(dw[a])return null;else return dw[a]=!0,()=>{dw[a]=!1};return dw.x||dw.y?null:(dw.x=dw.y=!0,()=>{dw.x=dw.y=!1})}(c),!this.openDragLock))return;this.latestPointerEvent=a,this.latestPanInfo=b,this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),dH(a=>{let b=this.getAxisMotionValue(a).get()||0;if(P.test(b)){let{projection:c}=this.visualElement;if(c&&c.layout){let d=c.layout.layoutBox[a];d&&(b=dB(d)*(parseFloat(b)/100))}}this.originPoint[a]=b}),e&&ai.postRender(()=>e(a,b)),b8(this.visualElement,"transform");let{animationState:f}=this.visualElement;f&&f.setActive("whileDrag",!0)},g=(a,b)=>{this.latestPointerEvent=a,this.latestPanInfo=b;let{dragPropagation:c,dragDirectionLock:d,onDirectionLock:e,onDrag:f}=this.getProps();if(!c&&!this.openDragLock)return;let{offset:g}=b;if(d&&null===this.currentDirection){this.currentDirection=function(a,b=10){let c=null;return Math.abs(a.y)>b?c="y":Math.abs(a.x)>b&&(c="x"),c}(g),null!==this.currentDirection&&e&&e(this.currentDirection);return}this.updateAxis("x",b.point,g),this.updateAxis("y",b.point,g),this.visualElement.render(),f&&f(a,b)},h=(a,b)=>{this.latestPointerEvent=a,this.latestPanInfo=b,this.stop(a,b),this.latestPointerEvent=null,this.latestPanInfo=null},i=()=>dH(a=>"paused"===this.getAnimationState(a)&&this.getAxisMotionValue(a).animation?.play()),{dragSnapToOrigin:j}=this.getProps();this.panSession=new dK(a,{onSessionStart:e,onStart:f,onMove:g,onSessionEnd:h,resumeAnimation:i},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:j,distanceThreshold:c,contextWindow:dI(this.visualElement)})}stop(a,b){let c=a||this.latestPointerEvent,d=b||this.latestPanInfo,e=this.isDragging;if(this.cancel(),!e||!d||!c)return;let{velocity:f}=d;this.startAnimation(f);let{onDragEnd:g}=this.getProps();g&&ai.postRender(()=>g(c,d))}cancel(){this.isDragging=!1;let{projection:a,animationState:b}=this.visualElement;a&&(a.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;let{dragPropagation:c}=this.getProps();!c&&this.openDragLock&&(this.openDragLock(),this.openDragLock=null),b&&b.setActive("whileDrag",!1)}updateAxis(a,b,c){let{drag:d}=this.getProps();if(!c||!dV(a,d,this.currentDirection))return;let e=this.getAxisMotionValue(a),f=this.originPoint[a]+c[a];this.constraints&&this.constraints[a]&&(f=function(a,{min:b,max:c},d){return void 0!==b&&a<b?a=d?w(b,a,d.min):Math.max(a,b):void 0!==c&&a>c&&(a=d?w(c,a,d.max):Math.min(a,c)),a}(f,this.constraints[a],this.elastic[a])),e.set(f)}resolveConstraints(){let{dragConstraints:a,dragElastic:b}=this.getProps(),c=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):this.visualElement.projection?.layout,d=this.constraints;a&&b_(a)?this.constraints||(this.constraints=this.resolveRefConstraints()):a&&c?this.constraints=function(a,{top:b,left:c,bottom:d,right:e}){return{x:dP(a.x,c,e),y:dP(a.y,b,d)}}(c.layoutBox,a):this.constraints=!1,this.elastic=function(a=.35){return!1===a?a=0:!0===a&&(a=.35),{x:dR(a,"left","right"),y:dR(a,"top","bottom")}}(b),d!==this.constraints&&c&&this.constraints&&!this.hasMutatedConstraints&&dH(a=>{!1!==this.constraints&&this.getAxisMotionValue(a)&&(this.constraints[a]=function(a,b){let c={};return void 0!==b.min&&(c.min=b.min-a.min),void 0!==b.max&&(c.max=b.max-a.min),c}(c.layoutBox[a],this.constraints[a]))})}resolveRefConstraints(){var a;let{dragConstraints:b,onMeasureDragConstraints:c}=this.getProps();if(!b||!b_(b))return!1;let d=b.current;Y(null!==d,"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.","drag-constraints-ref");let{projection:e}=this.visualElement;if(!e||!e.layout)return!1;let f=function(a,b,c){let d=H(a,c),{scroll:e}=b;return e&&(E(d.x,e.offset.x),E(d.y,e.offset.y)),d}(d,e.root,this.visualElement.getTransformPagePoint()),g=(a=e.layout.layoutBox,{x:dQ(a.x,f.x),y:dQ(a.y,f.y)});if(c){let a=c(function({x:a,y:b}){return{top:b.min,right:a.max,bottom:b.max,left:a.min}}(g));this.hasMutatedConstraints=!!a,a&&(g=v(a))}return g}startAnimation(a){let{drag:b,dragMomentum:c,dragElastic:d,dragTransition:e,dragSnapToOrigin:f,onDragTransitionEnd:g}=this.getProps(),h=this.constraints||{};return Promise.all(dH(g=>{if(!dV(g,b,this.currentDirection))return;let i=h&&h[g]||{};f&&(i={min:0,max:0});let j={type:"inertia",velocity:c?a[g]:0,bounceStiffness:d?200:1e6,bounceDamping:d?40:1e7,timeConstant:750,restDelta:1,restSpeed:10,...e,...i};return this.startAxisValueAnimation(g,j)})).then(g)}startAxisValueAnimation(a,b){let c=this.getAxisMotionValue(a);return b8(this.visualElement,a),c.start(di(a,c,0,b,this.visualElement,!1))}stopAnimation(){dH(a=>this.getAxisMotionValue(a).stop())}pauseAnimation(){dH(a=>this.getAxisMotionValue(a).animation?.pause())}getAnimationState(a){return this.getAxisMotionValue(a).animation?.state}getAxisMotionValue(a){let b=`_drag${a.toUpperCase()}`,c=this.visualElement.getProps();return c[b]||this.visualElement.getValue(a,(c.initial?c.initial[a]:void 0)||0)}snapToCursor(a){dH(b=>{let{drag:c}=this.getProps();if(!dV(b,c,this.currentDirection))return;let{projection:d}=this.visualElement,e=this.getAxisMotionValue(b);if(d&&d.layout){let{min:c,max:f}=d.layout.layoutBox[b];e.set(a[b]-w(c,f,.5))}})}scalePositionWithinConstraints(){if(!this.visualElement.current)return;let{drag:a,dragConstraints:b}=this.getProps(),{projection:c}=this.visualElement;if(!b_(b)||!c||!this.constraints)return;this.stopAnimation();let d={x:0,y:0};dH(a=>{let b=this.getAxisMotionValue(a);if(b&&!1!==this.constraints){let c=b.get();d[a]=function(a,b){let c=.5,d=dB(a),e=dB(b);return e>d?c=cT(b.min,b.max-d,a.min):d>e&&(c=cT(a.min,a.max-e,b.min)),J(0,1,c)}({min:c,max:c},this.constraints[a])}});let{transformTemplate:e}=this.visualElement.getProps();this.visualElement.current.style.transform=e?e({},""):"none",c.root&&c.root.updateScroll(),c.updateLayout(),this.resolveConstraints(),dH(b=>{if(!dV(b,a,null))return;let c=this.getAxisMotionValue(b),{min:e,max:f}=this.constraints[b];c.set(w(e,f,d[b]))})}addListeners(){if(!this.visualElement.current)return;dT.set(this.visualElement,this);let a=dA(this.visualElement.current,"pointerdown",a=>{let{drag:b,dragListener:c=!0}=this.getProps();b&&c&&this.start(a)}),b=()=>{let{dragConstraints:a}=this.getProps();b_(a)&&a.current&&(this.constraints=this.resolveRefConstraints())},{projection:c}=this.visualElement,d=c.addEventListener("measure",b);c&&!c.layout&&(c.root&&c.root.updateScroll(),c.updateLayout()),ai.read(b);let e=dx(window,"resize",()=>this.scalePositionWithinConstraints()),f=c.addEventListener("didUpdate",({delta:a,hasLayoutChanged:b})=>{this.isDragging&&b&&(dH(b=>{let c=this.getAxisMotionValue(b);c&&(this.originPoint[b]+=a[b].translate,c.set(c.get()+a[b].translate))}),this.visualElement.render())});return()=>{e(),a(),d(),f&&f()}}getProps(){let a=this.visualElement.getProps(),{drag:b=!1,dragDirectionLock:c=!1,dragPropagation:d=!1,dragConstraints:e=!1,dragElastic:f=.35,dragMomentum:g=!0}=a;return{...a,drag:b,dragDirectionLock:c,dragPropagation:d,dragConstraints:e,dragElastic:f,dragMomentum:g}}}function dV(a,b,c){return(!0===b||b===a)&&(null===c||c===a)}let dW=a=>(b,c)=>{a&&ai.postRender(()=>a(b,c))};var dX=d;let dY={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function dZ(a,b){return b.max===b.min?0:a/(b.max-b.min)*100}let d$={correct:(a,b)=>{if(!b.target)return a;if("string"==typeof a)if(!Q.test(a))return a;else a=parseFloat(a);let c=dZ(a,b.target.x),d=dZ(a,b.target.y);return`${c}% ${d}%`}},d_=!1;class d0 extends dX.Component{componentDidMount(){let{visualElement:a,layoutGroup:b,switchLayoutGroup:c,layoutId:d}=this.props,{projection:e}=a;for(let a in d2)bw[a]=d2[a],r(a)&&(bw[a].isCSSVariable=!0);e&&(b.group&&b.group.add(e),c&&c.register&&d&&c.register(e),d_&&e.root.didUpdate(),e.addEventListener("animationComplete",()=>{this.safeToRemove()}),e.setOptions({...e.options,onExitComplete:()=>this.safeToRemove()})),dY.hasEverUpdated=!0}getSnapshotBeforeUpdate(a){let{layoutDependency:b,visualElement:c,drag:d,isPresent:e}=this.props,{projection:f}=c;return f&&(f.isPresent=e,d_=!0,d||a.layoutDependency!==b||void 0===b||a.isPresent!==e?f.willUpdate():this.safeToRemove(),a.isPresent!==e&&(e?f.promote():f.relegate()||ai.postRender(()=>{let a=f.getStack();a&&a.members.length||this.safeToRemove()}))),null}componentDidUpdate(){let{projection:a}=this.props.visualElement;a&&(a.root.didUpdate(),a6.postRender(()=>{!a.currentAnimation&&a.isLead()&&this.safeToRemove()}))}componentWillUnmount(){let{visualElement:a,layoutGroup:b,switchLayoutGroup:c}=this.props,{projection:d}=a;d_=!0,d&&(d.scheduleCheckAfterUnmount(),b&&b.group&&b.group.remove(d),c&&c.deregister&&c.deregister(d))}safeToRemove(){let{safeToRemove:a}=this.props;a&&a()}render(){return null}}function d1(a){let[b,e]=function(a=!0){let b=(0,d.useContext)(bU);if(null===b)return[!0,null];let{isPresent:c,onExitComplete:e,register:f}=b,g=(0,d.useId)();(0,d.useEffect)(()=>{if(a)return f(g)},[a]);let h=(0,d.useCallback)(()=>a&&e&&e(g),[g,e,a]);return!c&&e?[!1,h]:[!0]}(),f=(0,dX.useContext)(bK);return(0,c.jsx)(d0,{...a,layoutGroup:f,switchLayoutGroup:(0,dX.useContext)(b1),isPresent:b,safeToRemove:e})}let d2={borderRadius:{...d$,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:d$,borderTopRightRadius:d$,borderBottomLeftRadius:d$,borderBottomRightRadius:d$,boxShadow:{correct:(a,{treeScale:b,projectionDelta:c})=>{let d=aM.parse(a);if(d.length>5)return a;let e=aM.createTransformer(a),f=+("number"!=typeof d[0]),g=c.x.scale*b.x,h=c.y.scale*b.y;d[0+f]/=g,d[1+f]/=h;let i=w(g,h,.5);return"number"==typeof d[2+f]&&(d[2+f]/=i),"number"==typeof d[3+f]&&(d[3+f]/=i),e(d)}}};function d3(a){return"object"==typeof a&&null!==a}function d4(a){return d3(a)&&"ownerSVGElement"in a}let d5=(a,b)=>a.depth-b.depth;class d6{constructor(){this.children=[],this.isDirty=!1}add(a){a_(this.children,a),this.isDirty=!0}remove(a){a0(this.children,a),this.isDirty=!0}forEach(a){this.isDirty&&this.children.sort(d5),this.isDirty=!1,this.children.forEach(a)}}let d7=["TopLeft","TopRight","BottomLeft","BottomRight"],d8=d7.length,d9=a=>"string"==typeof a?parseFloat(a):a,ea=a=>"number"==typeof a||Q.test(a);function eb(a,b){return void 0!==a[b]?a[b]:a.borderRadius}let ec=ee(0,.5,cO),ed=ee(.5,.95,ad);function ee(a,b,c){return d=>d<a?0:d>b?1:c(cT(a,b,d))}function ef(a,b){a.min=b.min,a.max=b.max}function eg(a,b){ef(a.x,b.x),ef(a.y,b.y)}function eh(a,b){a.translate=b.translate,a.scale=b.scale,a.originPoint=b.originPoint,a.origin=b.origin}function ei(a,b,c,d,e){return a-=b,a=d+1/c*(a-d),void 0!==e&&(a=d+1/e*(a-d)),a}function ej(a,b,[c,d,e],f,g){!function(a,b=0,c=1,d=.5,e,f=a,g=a){if(P.test(b)&&(b=parseFloat(b),b=w(g.min,g.max,b/100)-g.min),"number"!=typeof b)return;let h=w(f.min,f.max,d);a===f&&(h-=b),a.min=ei(a.min,b,c,h,e),a.max=ei(a.max,b,c,h,e)}(a,b[c],b[d],b[e],b.scale,f,g)}let ek=["x","scaleX","originX"],el=["y","scaleY","originY"];function em(a,b,c,d){ej(a.x,b,ek,c?c.x:void 0,d?d.x:void 0),ej(a.y,b,el,c?c.y:void 0,d?d.y:void 0)}function en(a){return 0===a.translate&&1===a.scale}function eo(a){return en(a.x)&&en(a.y)}function ep(a,b){return a.min===b.min&&a.max===b.max}function eq(a,b){return Math.round(a.min)===Math.round(b.min)&&Math.round(a.max)===Math.round(b.max)}function er(a,b){return eq(a.x,b.x)&&eq(a.y,b.y)}function es(a){return dB(a.x)/dB(a.y)}function et(a,b){return a.translate===b.translate&&a.scale===b.scale&&a.originPoint===b.originPoint}class eu{constructor(){this.members=[]}add(a){a_(this.members,a),a.scheduleRender()}remove(a){if(a0(this.members,a),a===this.prevLead&&(this.prevLead=void 0),a===this.lead){let a=this.members[this.members.length-1];a&&this.promote(a)}}relegate(a){let b,c=this.members.findIndex(b=>a===b);if(0===c)return!1;for(let a=c;a>=0;a--){let c=this.members[a];if(!1!==c.isPresent){b=c;break}}return!!b&&(this.promote(b),!0)}promote(a,b){let c=this.lead;if(a!==c&&(this.prevLead=c,this.lead=a,a.show(),c)){c.instance&&c.scheduleRender(),a.scheduleRender(),a.resumeFrom=c,b&&(a.resumeFrom.preserveOpacity=!0),c.snapshot&&(a.snapshot=c.snapshot,a.snapshot.latestValues=c.animationValues||c.latestValues),a.root&&a.root.isUpdating&&(a.isLayoutDirty=!0);let{crossfade:d}=a.options;!1===d&&c.hide()}}exitAnimationComplete(){this.members.forEach(a=>{let{options:b,resumingFrom:c}=a;b.onExitComplete&&b.onExitComplete(),c&&c.options.onExitComplete&&c.options.onExitComplete()})}scheduleRender(){this.members.forEach(a=>{a.instance&&a.scheduleRender(!1)})}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}let ev={nodes:0,calculatedTargetDeltas:0,calculatedProjections:0},ew=["","X","Y","Z"],ex=0;function ey(a,b,c,d){let{latestValues:e}=b;e[a]&&(c[a]=e[a],b.setStaticValue(a,0),d&&(d[a]=0))}function ez({attachResizeListener:a,defaultParent:b,measureScroll:c,checkIsScrollRoot:d,resetTransform:e}){return class{constructor(a={},c=b?.()){this.id=ex++,this.animationId=0,this.animationCommitId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,ag.value&&(ev.nodes=ev.calculatedTargetDeltas=ev.calculatedProjections=0),this.nodes.forEach(eC),this.nodes.forEach(eJ),this.nodes.forEach(eK),this.nodes.forEach(eD),ag.addProjectionMetrics&&ag.addProjectionMetrics(ev)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=a,this.root=c?c.root||c:this,this.path=c?[...c.path,c]:[],this.parent=c,this.depth=c?c.depth+1:0;for(let a=0;a<this.path.length;a++)this.path[a].shouldResetTransform=!0;this.root===this&&(this.nodes=new d6)}addEventListener(a,b){return this.eventHandlers.has(a)||this.eventHandlers.set(a,new a1),this.eventHandlers.get(a).add(b)}notifyListeners(a,...b){let c=this.eventHandlers.get(a);c&&c.notify(...b)}hasListeners(a){return this.eventHandlers.has(a)}mount(b){if(this.instance)return;this.isSVG=d4(b)&&!(d4(b)&&"svg"===b.tagName),this.instance=b;let{layoutId:c,layout:d,visualElement:e}=this.options;if(e&&!e.current&&e.mount(b),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),this.root.hasTreeAnimated&&(d||c)&&(this.isLayoutDirty=!0),a){let c,d=0,e=()=>this.root.updateBlockedByResize=!1;ai.read(()=>{d=window.innerWidth}),a(b,()=>{let a=window.innerWidth;a!==d&&(d=a,this.root.updateBlockedByResize=!0,c&&c(),c=function(a,b){let c=a$.now(),d=({timestamp:b})=>{let e=b-c;e>=250&&(aj(d),a(e-250))};return ai.setup(d,!0),()=>aj(d)}(e,250),dY.hasAnimatedSinceResize&&(dY.hasAnimatedSinceResize=!1,this.nodes.forEach(eI)))})}c&&this.root.registerSharedNode(c,this),!1!==this.options.animate&&e&&(c||d)&&this.addEventListener("didUpdate",({delta:a,hasLayoutChanged:b,hasRelativeLayoutChanged:c,layout:d})=>{if(this.isTreeAnimationBlocked()){this.target=void 0,this.relativeTarget=void 0;return}let f=this.options.transition||e.getDefaultTransition()||eQ,{onLayoutAnimationStart:g,onLayoutAnimationComplete:h}=e.getProps(),i=!this.targetLayout||!er(this.targetLayout,d),j=!b&&c;if(this.options.layoutRoot||this.resumeFrom||j||b&&(i||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0);let b={...b5(f,"layout"),onPlay:g,onComplete:h};(e.shouldReduceMotion||this.options.layoutRoot)&&(b.delay=0,b.type=!1),this.startAnimation(b),this.setAnimationOrigin(a,j)}else b||eI(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=d})}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);let a=this.getStack();a&&a.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,this.eventHandlers.clear(),aj(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){!this.isUpdateBlocked()&&(this.isUpdating=!0,this.nodes&&this.nodes.forEach(eL),this.animationId++)}getTransformTemplate(){let{visualElement:a}=this.options;return a&&a.getProps().transformTemplate}willUpdate(a=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked()){this.options.onExitComplete&&this.options.onExitComplete();return}if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&function a(b){if(b.hasCheckedOptimisedAppear=!0,b.root===b)return;let{visualElement:c}=b.options;if(!c)return;let d=c.props[b0];if(window.MotionHasOptimisedAnimation(d,"transform")){let{layout:a,layoutId:c}=b.options;window.MotionCancelOptimisedAnimation(d,"transform",ai,!(a||c))}let{parent:e}=b;e&&!e.hasCheckedOptimisedAppear&&a(e)}(this),this.root.isUpdating||this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let a=0;a<this.path.length;a++){let b=this.path[a];b.shouldResetTransform=!0,b.updateScroll("snapshot"),b.options.layoutRoot&&b.willUpdate(!1)}let{layoutId:b,layout:c}=this.options;if(void 0===b&&!c)return;let d=this.getTransformTemplate();this.prevTransformTemplateValue=d?d(this.latestValues,""):void 0,this.updateSnapshot(),a&&this.notifyListeners("willUpdate")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked()){this.unblockUpdate(),this.clearAllSnapshots(),this.nodes.forEach(eF);return}if(this.animationId<=this.animationCommitId)return void this.nodes.forEach(eG);this.animationCommitId=this.animationId,this.isUpdating?(this.isUpdating=!1,this.nodes.forEach(eH),this.nodes.forEach(eA),this.nodes.forEach(eB)):this.nodes.forEach(eG),this.clearAllSnapshots();let a=a$.now();ak.delta=J(0,1e3/60,a-ak.timestamp),ak.timestamp=a,ak.isProcessing=!0,al.update.process(ak),al.preRender.process(ak),al.render.process(ak),ak.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,a6.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(eE),this.sharedNodes.forEach(eM)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,ai.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){ai.postRender(()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()})}updateSnapshot(){!this.snapshot&&this.instance&&(this.snapshot=this.measure(),!this.snapshot||dB(this.snapshot.measuredBox.x)||dB(this.snapshot.measuredBox.y)||(this.snapshot=void 0))}updateLayout(){if(!this.instance||(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead())&&!this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let a=0;a<this.path.length;a++)this.path[a].updateScroll();let a=this.layout;this.layout=this.measure(!1),this.layoutCorrected=bc(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.layoutBox);let{visualElement:b}=this.options;b&&b.notify("LayoutMeasure",this.layout.layoutBox,a?a.layoutBox:void 0)}updateScroll(a="measure"){let b=!!(this.options.layoutScroll&&this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===a&&(b=!1),b&&this.instance){let b=d(this.instance);this.scroll={animationId:this.root.animationId,phase:a,isRoot:b,offset:c(this.instance),wasRoot:this.scroll?this.scroll.isRoot:b}}}resetTransform(){if(!e)return;let a=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,b=this.projectionDelta&&!eo(this.projectionDelta),c=this.getTransformTemplate(),d=c?c(this.latestValues,""):void 0,f=d!==this.prevTransformTemplateValue;a&&this.instance&&(b||z(this.latestValues)||f)&&(e(this.instance,d),this.shouldResetTransform=!1,this.scheduleRender())}measure(a=!0){var b;let c=this.measurePageBox(),d=this.removeElementScroll(c);return a&&(d=this.removeTransform(d)),eT((b=d).x),eT(b.y),{animationId:this.root.animationId,measuredBox:c,layoutBox:d,latestValues:{},source:this.id}}measurePageBox(){let{visualElement:a}=this.options;if(!a)return bc();let b=a.measureViewportBox();if(!(this.scroll?.wasRoot||this.path.some(eV))){let{scroll:a}=this.root;a&&(E(b.x,a.offset.x),E(b.y,a.offset.y))}return b}removeElementScroll(a){let b=bc();if(eg(b,a),this.scroll?.wasRoot)return b;for(let c=0;c<this.path.length;c++){let d=this.path[c],{scroll:e,options:f}=d;d!==this.root&&e&&f.layoutScroll&&(e.wasRoot&&eg(b,a),E(b.x,e.offset.x),E(b.y,e.offset.y))}return b}applyTransform(a,b=!1){let c=bc();eg(c,a);for(let a=0;a<this.path.length;a++){let d=this.path[a];!b&&d.options.layoutScroll&&d.scroll&&d!==d.root&&G(c,{x:-d.scroll.offset.x,y:-d.scroll.offset.y}),z(d.latestValues)&&G(c,d.latestValues)}return z(this.latestValues)&&G(c,this.latestValues),c}removeTransform(a){let b=bc();eg(b,a);for(let a=0;a<this.path.length;a++){let c=this.path[a];if(!c.instance||!z(c.latestValues))continue;y(c.latestValues)&&c.updateSnapshot();let d=bc();eg(d,c.measurePageBox()),em(b,c.latestValues,c.snapshot?c.snapshot.layoutBox:void 0,d)}return z(this.latestValues)&&em(b,this.latestValues),b}setTargetDelta(a){this.targetDelta=a,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(a){this.options={...this.options,...a,crossfade:void 0===a.crossfade||a.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==ak.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(a=!1){let b=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=b.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=b.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=b.isSharedProjectionDirty);let c=!!this.resumingFrom||this!==b;if(!(a||c&&this.isSharedProjectionDirty||this.isProjectionDirty||this.parent?.isProjectionDirty||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;let{layout:d,layoutId:e}=this.options;if(this.layout&&(d||e)){if(this.resolvedRelativeTargetAt=ak.timestamp,!this.targetDelta&&!this.relativeTarget){let a=this.getClosestProjectingParent();a&&a.layout&&1!==this.animationProgress?(this.relativeParent=a,this.forceRelativeParentToResolveTarget(),this.relativeTarget=bc(),this.relativeTargetOrigin=bc(),dG(this.relativeTargetOrigin,this.layout.layoutBox,a.layout.layoutBox),eg(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){if(this.target||(this.target=bc(),this.targetWithTransforms=bc()),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target){var f,g,h;this.forceRelativeParentToResolveTarget(),f=this.target,g=this.relativeTarget,h=this.relativeParent.target,dE(f.x,g.x,h.x),dE(f.y,g.y,h.y)}else this.targetDelta?(this.resumingFrom?this.target=this.applyTransform(this.layout.layoutBox):eg(this.target,this.layout.layoutBox),D(this.target,this.targetDelta)):eg(this.target,this.layout.layoutBox);if(this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;let a=this.getClosestProjectingParent();a&&!!a.resumingFrom==!!this.resumingFrom&&!a.options.layoutScroll&&a.target&&1!==this.animationProgress?(this.relativeParent=a,this.forceRelativeParentToResolveTarget(),this.relativeTarget=bc(),this.relativeTargetOrigin=bc(),dG(this.relativeTargetOrigin,this.target,a.target),eg(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}ag.value&&ev.calculatedTargetDeltas++}}}getClosestProjectingParent(){if(!(!this.parent||y(this.parent.latestValues)||A(this.parent.latestValues)))if(this.parent.isProjecting())return this.parent;else return this.parent.getClosestProjectingParent()}isProjecting(){return!!((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){let a=this.getLead(),b=!!this.resumingFrom||this!==a,c=!0;if((this.isProjectionDirty||this.parent?.isProjectionDirty)&&(c=!1),b&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(c=!1),this.resolvedRelativeTargetAt===ak.timestamp&&(c=!1),c)return;let{layout:d,layoutId:e}=this.options;if(this.isTreeAnimating=!!(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!(d||e))return;eg(this.layoutCorrected,this.layout.layoutBox);let f=this.treeScale.x,g=this.treeScale.y;!function(a,b,c,d=!1){let e,f,g=c.length;if(g){b.x=b.y=1;for(let h=0;h<g;h++){f=(e=c[h]).projectionDelta;let{visualElement:g}=e.options;(!g||!g.props.style||"contents"!==g.props.style.display)&&(d&&e.options.layoutScroll&&e.scroll&&e!==e.root&&G(a,{x:-e.scroll.offset.x,y:-e.scroll.offset.y}),f&&(b.x*=f.x.scale,b.y*=f.y.scale,D(a,f)),d&&z(e.latestValues)&&G(a,e.latestValues))}b.x<1.0000000000001&&b.x>.999999999999&&(b.x=1),b.y<1.0000000000001&&b.y>.999999999999&&(b.y=1)}}(this.layoutCorrected,this.treeScale,this.path,b),a.layout&&!a.target&&(1!==this.treeScale.x||1!==this.treeScale.y)&&(a.target=a.layout.layoutBox,a.targetWithTransforms=bc());let{target:h}=a;if(!h){this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender());return}this.projectionDelta&&this.prevProjectionDelta?(eh(this.prevProjectionDelta.x,this.projectionDelta.x),eh(this.prevProjectionDelta.y,this.projectionDelta.y)):this.createProjectionDeltas(),dD(this.projectionDelta,this.layoutCorrected,h,this.latestValues),this.treeScale.x===f&&this.treeScale.y===g&&et(this.projectionDelta.x,this.prevProjectionDelta.x)&&et(this.projectionDelta.y,this.prevProjectionDelta.y)||(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",h)),ag.value&&ev.calculatedProjections++}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(a=!0){if(this.options.visualElement?.scheduleRender(),a){let a=this.getStack();a&&a.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta=ba(),this.projectionDelta=ba(),this.projectionDeltaWithTransform=ba()}setAnimationOrigin(a,b=!1){let c,d=this.snapshot,e=d?d.latestValues:{},f={...this.latestValues},g=ba();this.relativeParent&&this.relativeParent.options.layoutRoot||(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!b;let h=bc(),i=(d?d.source:void 0)!==(this.layout?this.layout.source:void 0),j=this.getStack(),k=!j||j.members.length<=1,l=!!(i&&!k&&!0===this.options.crossfade&&!this.path.some(eP));this.animationProgress=0,this.mixTargetDelta=b=>{let d=b/1e3;if(eN(g.x,a.x,d),eN(g.y,a.y,d),this.setTargetDelta(g),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout){var j,m,n,o,p,q;dG(h,this.layout.layoutBox,this.relativeParent.layout.layoutBox),n=this.relativeTarget,o=this.relativeTargetOrigin,p=h,q=d,eO(n.x,o.x,p.x,q),eO(n.y,o.y,p.y,q),c&&(j=this.relativeTarget,m=c,ep(j.x,m.x)&&ep(j.y,m.y))&&(this.isProjectionDirty=!1),c||(c=bc()),eg(c,this.relativeTarget)}i&&(this.animationValues=f,function(a,b,c,d,e,f){e?(a.opacity=w(0,c.opacity??1,ec(d)),a.opacityExit=w(b.opacity??1,0,ed(d))):f&&(a.opacity=w(b.opacity??1,c.opacity??1,d));for(let e=0;e<d8;e++){let f=`border${d7[e]}Radius`,g=eb(b,f),h=eb(c,f);(void 0!==g||void 0!==h)&&(g||(g=0),h||(h=0),0===g||0===h||ea(g)===ea(h)?(a[f]=Math.max(w(d9(g),d9(h),d),0),(P.test(h)||P.test(g))&&(a[f]+="%")):a[f]=h)}(b.rotate||c.rotate)&&(a.rotate=w(b.rotate||0,c.rotate||0,d))}(f,e,this.latestValues,d,l,k)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=d},this.mixTargetDelta(1e3*!!this.options.layoutRoot)}startAnimation(a){this.notifyListeners("animationStart"),this.currentAnimation?.stop(),this.resumingFrom?.currentAnimation?.stop(),this.pendingAnimation&&(aj(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=ai.update(()=>{dY.hasAnimatedSinceResize=!0,cd.layout++,this.motionValue||(this.motionValue=a4(0)),this.currentAnimation=function(a,b,c){let d=aY(a)?a:a4(a);return d.start(di("",d,b,c)),d.animation}(this.motionValue,[0,1e3],{...a,velocity:0,isSync:!0,onUpdate:b=>{this.mixTargetDelta(b),a.onUpdate&&a.onUpdate(b)},onStop:()=>{cd.layout--},onComplete:()=>{cd.layout--,a.onComplete&&a.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0})}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);let a=this.getStack();a&&a.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){let a=this.getLead(),{targetWithTransforms:b,target:c,layout:d,latestValues:e}=a;if(b&&c&&d){if(this!==a&&this.layout&&d&&eU(this.options.animationType,this.layout.layoutBox,d.layoutBox)){c=this.target||bc();let b=dB(this.layout.layoutBox.x);c.x.min=a.target.x.min,c.x.max=c.x.min+b;let d=dB(this.layout.layoutBox.y);c.y.min=a.target.y.min,c.y.max=c.y.min+d}eg(b,c),G(b,e),dD(this.projectionDeltaWithTransform,this.layoutCorrected,b,e)}}registerSharedNode(a,b){this.sharedNodes.has(a)||this.sharedNodes.set(a,new eu),this.sharedNodes.get(a).add(b);let c=b.options.initialPromotionConfig;b.promote({transition:c?c.transition:void 0,preserveFollowOpacity:c&&c.shouldPreserveFollowOpacity?c.shouldPreserveFollowOpacity(b):void 0})}isLead(){let a=this.getStack();return!a||a.lead===this}getLead(){let{layoutId:a}=this.options;return a&&this.getStack()?.lead||this}getPrevLead(){let{layoutId:a}=this.options;return a?this.getStack()?.prevLead:void 0}getStack(){let{layoutId:a}=this.options;if(a)return this.root.sharedNodes.get(a)}promote({needsReset:a,transition:b,preserveFollowOpacity:c}={}){let d=this.getStack();d&&d.promote(this,c),a&&(this.projectionDelta=void 0,this.needsReset=!0),b&&this.setOptions({transition:b})}relegate(){let a=this.getStack();return!!a&&a.relegate(this)}resetSkewAndRotation(){let{visualElement:a}=this.options;if(!a)return;let b=!1,{latestValues:c}=a;if((c.z||c.rotate||c.rotateX||c.rotateY||c.rotateZ||c.skewX||c.skewY)&&(b=!0),!b)return;let d={};c.z&&ey("z",a,d,this.animationValues);for(let b=0;b<ew.length;b++)ey(`rotate${ew[b]}`,a,d,this.animationValues),ey(`skew${ew[b]}`,a,d,this.animationValues);for(let b in a.render(),d)a.setStaticValue(b,d[b]),this.animationValues&&(this.animationValues[b]=d[b]);a.scheduleRender()}applyProjectionStyles(a,b){if(!this.instance||this.isSVG)return;if(!this.isVisible){a.visibility="hidden";return}let c=this.getTransformTemplate();if(this.needsReset){this.needsReset=!1,a.visibility="",a.opacity="",a.pointerEvents=bW(b?.pointerEvents)||"",a.transform=c?c(this.latestValues,""):"none";return}let d=this.getLead();if(!this.projectionDelta||!this.layout||!d.target){this.options.layoutId&&(a.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,a.pointerEvents=bW(b?.pointerEvents)||""),this.hasProjected&&!z(this.latestValues)&&(a.transform=c?c({},""):"none",this.hasProjected=!1);return}a.visibility="";let e=d.animationValues||d.latestValues;this.applyTransformsToTarget();let f=function(a,b,c){let d="",e=a.x.translate/b.x,f=a.y.translate/b.y,g=c?.z||0;if((e||f||g)&&(d=`translate3d(${e}px, ${f}px, ${g}px) `),(1!==b.x||1!==b.y)&&(d+=`scale(${1/b.x}, ${1/b.y}) `),c){let{transformPerspective:a,rotate:b,rotateX:e,rotateY:f,skewX:g,skewY:h}=c;a&&(d=`perspective(${a}px) ${d}`),b&&(d+=`rotate(${b}deg) `),e&&(d+=`rotateX(${e}deg) `),f&&(d+=`rotateY(${f}deg) `),g&&(d+=`skewX(${g}deg) `),h&&(d+=`skewY(${h}deg) `)}let h=a.x.scale*b.x,i=a.y.scale*b.y;return(1!==h||1!==i)&&(d+=`scale(${h}, ${i})`),d||"none"}(this.projectionDeltaWithTransform,this.treeScale,e);c&&(f=c(e,f)),a.transform=f;let{x:g,y:h}=this.projectionDelta;for(let b in a.transformOrigin=`${100*g.origin}% ${100*h.origin}% 0`,d.animationValues?a.opacity=d===this?e.opacity??this.latestValues.opacity??1:this.preserveOpacity?this.latestValues.opacity:e.opacityExit:a.opacity=d===this?void 0!==e.opacity?e.opacity:"":void 0!==e.opacityExit?e.opacityExit:0,bw){if(void 0===e[b])continue;let{correct:c,applyTo:g,isCSSVariable:h}=bw[b],i="none"===f?e[b]:c(e[b],d);if(g){let b=g.length;for(let c=0;c<b;c++)a[g[c]]=i}else h?this.options.visualElement.renderState.vars[b]=i:a[b]=i}this.options.layoutId&&(a.pointerEvents=d===this?bW(b?.pointerEvents)||"":"none")}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach(a=>a.currentAnimation?.stop()),this.root.nodes.forEach(eF),this.root.sharedNodes.clear()}}}function eA(a){a.updateLayout()}function eB(a){let b=a.resumeFrom?.snapshot||a.snapshot;if(a.isLead()&&a.layout&&b&&a.hasListeners("didUpdate")){let{layoutBox:c,measuredBox:d}=a.layout,{animationType:e}=a.options,f=b.source!==a.layout.source;"size"===e?dH(a=>{let d=f?b.measuredBox[a]:b.layoutBox[a],e=dB(d);d.min=c[a].min,d.max=d.min+e}):eU(e,b.layoutBox,c)&&dH(d=>{let e=f?b.measuredBox[d]:b.layoutBox[d],g=dB(c[d]);e.max=e.min+g,a.relativeTarget&&!a.currentAnimation&&(a.isProjectionDirty=!0,a.relativeTarget[d].max=a.relativeTarget[d].min+g)});let g=ba();dD(g,c,b.layoutBox);let h=ba();f?dD(h,a.applyTransform(d,!0),b.measuredBox):dD(h,c,b.layoutBox);let i=!eo(g),j=!1;if(!a.resumeFrom){let d=a.getClosestProjectingParent();if(d&&!d.resumeFrom){let{snapshot:e,layout:f}=d;if(e&&f){let g=bc();dG(g,b.layoutBox,e.layoutBox);let h=bc();dG(h,c,f.layoutBox),er(g,h)||(j=!0),d.options.layoutRoot&&(a.relativeTarget=h,a.relativeTargetOrigin=g,a.relativeParent=d)}}}a.notifyListeners("didUpdate",{layout:c,snapshot:b,delta:h,layoutDelta:g,hasLayoutChanged:i,hasRelativeLayoutChanged:j})}else if(a.isLead()){let{onExitComplete:b}=a.options;b&&b()}a.options.transition=void 0}function eC(a){ag.value&&ev.nodes++,a.parent&&(a.isProjecting()||(a.isProjectionDirty=a.parent.isProjectionDirty),a.isSharedProjectionDirty||(a.isSharedProjectionDirty=!!(a.isProjectionDirty||a.parent.isProjectionDirty||a.parent.isSharedProjectionDirty)),a.isTransformDirty||(a.isTransformDirty=a.parent.isTransformDirty))}function eD(a){a.isProjectionDirty=a.isSharedProjectionDirty=a.isTransformDirty=!1}function eE(a){a.clearSnapshot()}function eF(a){a.clearMeasurements()}function eG(a){a.isLayoutDirty=!1}function eH(a){let{visualElement:b}=a.options;b&&b.getProps().onBeforeLayoutMeasure&&b.notify("BeforeLayoutMeasure"),a.resetTransform()}function eI(a){a.finishAnimation(),a.targetDelta=a.relativeTarget=a.target=void 0,a.isProjectionDirty=!0}function eJ(a){a.resolveTargetDelta()}function eK(a){a.calcProjection()}function eL(a){a.resetSkewAndRotation()}function eM(a){a.removeLeadSnapshot()}function eN(a,b,c){a.translate=w(b.translate,0,c),a.scale=w(b.scale,1,c),a.origin=b.origin,a.originPoint=b.originPoint}function eO(a,b,c,d){a.min=w(b.min,c.min,d),a.max=w(b.max,c.max,d)}function eP(a){return a.animationValues&&void 0!==a.animationValues.opacityExit}let eQ={duration:.45,ease:[.4,0,.1,1]},eR=a=>"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(a),eS=eR("applewebkit/")&&!eR("chrome/")?Math.round:ad;function eT(a){a.min=eS(a.min),a.max=eS(a.max)}function eU(a,b,c){return"position"===a||"preserve-aspect"===a&&!(.2>=Math.abs(es(b)-es(c)))}function eV(a){return a!==a.root&&a.scroll?.wasRoot}let eW=ez({attachResizeListener:(a,b)=>dx(a,"resize",b),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),eX={current:void 0},eY=ez({measureScroll:a=>({x:a.scrollLeft,y:a.scrollTop}),defaultParent:()=>{if(!eX.current){let a=new eW({});a.mount(window),a.setOptions({layoutScroll:!0}),eX.current=a}return eX.current},resetTransform:(a,b)=>{a.style.transform=void 0!==b?b:"none"},checkIsScrollRoot:a=>"fixed"===window.getComputedStyle(a).position});function eZ(a,b){let c=function(a,b,c){if(a instanceof EventTarget)return[a];if("string"==typeof a){let b=document,c=(void 0)??b.querySelectorAll(a);return c?Array.from(c):[]}return Array.from(a)}(a),d=new AbortController;return[c,{passive:!0,...b,signal:d.signal},()=>d.abort()]}function e$(a){return!("touch"===a.pointerType||dw.x||dw.y)}function e_(a,b,c){let{props:d}=a;a.animationState&&d.whileHover&&a.animationState.setActive("whileHover","Start"===c);let e=d["onHover"+c];e&&ai.postRender(()=>e(b,dz(b)))}let e0=(a,b)=>!!b&&(a===b||e0(a,b.parentElement)),e1=new Set(["BUTTON","INPUT","SELECT","TEXTAREA","A"]),e2=new WeakSet;function e3(a){return b=>{"Enter"===b.key&&a(b)}}function e4(a,b){a.dispatchEvent(new PointerEvent("pointer"+b,{isPrimary:!0,bubbles:!0}))}function e5(a){return dy(a)&&!(dw.x||dw.y)}function e6(a,b,c){let{props:d}=a;if(a.current instanceof HTMLButtonElement&&a.current.disabled)return;a.animationState&&d.whileTap&&a.animationState.setActive("whileTap","Start"===c);let e=d["onTap"+("End"===c?"":c)];e&&ai.postRender(()=>e(b,dz(b)))}let e7=new WeakMap,e8=new WeakMap,e9=a=>{let b=e7.get(a.target);b&&b(a)},fa=a=>{a.forEach(e9)},fb={some:0,all:1},fc=function(a,b){if("undefined"==typeof Proxy)return b3;let c=new Map,d=(c,d)=>b3(c,d,a,b);return new Proxy((a,b)=>d(a,b),{get:(e,f)=>"create"===f?d:(c.has(f)||c.set(f,b3(f,void 0,a,b)),c.get(f))})}({animation:{Feature:class extends du{constructor(a){super(a),a.animationState||(a.animationState=function(a){let b=b=>Promise.all(b.map(({animation:b,options:c})=>dm(a,b,c))),c=dt(),d=!0,e=b=>(c,d)=>{let e=b4(a,d,"exit"===b?a.presenceContext?.custom:void 0);if(e){let{transition:a,transitionEnd:b,...d}=e;c={...c,...d,...b}}return c};function f(f){let{props:g}=a,h=function a(b){if(!b)return;if(!b.isControllingVariants){let c=b.parent&&a(b.parent)||{};return void 0!==b.props.initial&&(c.initial=b.props.initial),c}let c={};for(let a=0;a<dp;a++){let d=bj[a],e=b.props[d];(bh(e)||!1===e)&&(c[d]=e)}return c}(a.parent)||{},i=[],j=new Set,k={},l=1/0;for(let b=0;b<dr;b++){var m,n;let o=dq[b],p=c[o],q=void 0!==g[o]?g[o]:h[o],r=bh(q),s=o===f?p.isActive:null;!1===s&&(l=b);let t=q===h[o]&&q!==g[o]&&r;if(t&&d&&a.manuallyAnimateOnMount&&(t=!1),p.protectedKeys={...k},!p.isActive&&null===s||!q&&!p.prevProp||bg(q)||"boolean"==typeof q)continue;let u=(m=p.prevProp,"string"==typeof(n=q)?n!==m:!!Array.isArray(n)&&!dn(n,m)),v=u||o===f&&p.isActive&&!t&&r||b>l&&r,w=!1,x=Array.isArray(q)?q:[q],y=x.reduce(e(o),{});!1===s&&(y={});let{prevResolvedValues:z={}}=p,A={...z,...y},B=b=>{v=!0,j.has(b)&&(w=!0,j.delete(b)),p.needsAnimating[b]=!0;let c=a.getValue(b);c&&(c.liveStyle=!1)};for(let a in A){let b=y[a],c=z[a];if(!k.hasOwnProperty(a))(b6(b)&&b6(c)?dn(b,c):b===c)?void 0!==b&&j.has(a)?B(a):p.protectedKeys[a]=!0:null!=b?B(a):j.add(a)}p.prevProp=q,p.prevResolvedValues=y,p.isActive&&(k={...k,...y}),d&&a.blockInitialAnimation&&(v=!1);let C=t&&u,D=!C||w;v&&D&&i.push(...x.map(b=>{let c={type:o};if("string"==typeof b&&d&&!C&&a.manuallyAnimateOnMount&&a.parent){let{parent:d}=a,e=b4(d,b);if(d.enteringChildren&&e){let{delayChildren:b}=e.transition||{};c.delay=dk(d.enteringChildren,a,b)}}return{animation:b,options:c}}))}if(j.size){let b={};if("boolean"!=typeof g.initial){let c=b4(a,Array.isArray(g.initial)?g.initial[0]:g.initial);c&&c.transition&&(b.transition=c.transition)}j.forEach(c=>{let d=a.getBaseTarget(c),e=a.getValue(c);e&&(e.liveStyle=!0),b[c]=d??null}),i.push({animation:b})}let o=!!i.length;return d&&(!1===g.initial||g.initial===g.animate)&&!a.manuallyAnimateOnMount&&(o=!1),d=!1,o?b(i):Promise.resolve()}return{animateChanges:f,setActive:function(b,d){if(c[b].isActive===d)return Promise.resolve();a.variantChildren?.forEach(a=>a.animationState?.setActive(b,d)),c[b].isActive=d;let e=f(b);for(let a in c)c[a].protectedKeys={};return e},setAnimateFunction:function(c){b=c(a)},getState:()=>c,reset:()=>{c=dt()}}}(a))}updateAnimationControlsSubscription(){let{animate:a}=this.node.getProps();bg(a)&&(this.unmountControls=a.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){let{animate:a}=this.node.getProps(),{animate:b}=this.node.prevProps||{};a!==b&&this.updateAnimationControlsSubscription()}unmount(){this.node.animationState.reset(),this.unmountControls?.()}}},exit:{Feature:class extends du{constructor(){super(...arguments),this.id=dv++}update(){if(!this.node.presenceContext)return;let{isPresent:a,onExitComplete:b}=this.node.presenceContext,{isPresent:c}=this.node.prevPresenceContext||{};if(!this.node.animationState||a===c)return;let d=this.node.animationState.setActive("exit",!a);b&&!a&&d.then(()=>{b(this.id)})}mount(){let{register:a,onExitComplete:b}=this.node.presenceContext||{};b&&b(this.id),a&&(this.unmount=a(this.id))}unmount(){}}},inView:{Feature:class extends du{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();let{viewport:a={}}=this.node.getProps(),{root:b,margin:c,amount:d="some",once:e}=a,f={root:b?b.current:void 0,rootMargin:c,threshold:"number"==typeof d?d:fb[d]},g=a=>{let{isIntersecting:b}=a;if(this.isInView===b||(this.isInView=b,e&&!b&&this.hasEnteredView))return;b&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive("whileInView",b);let{onViewportEnter:c,onViewportLeave:d}=this.node.getProps(),f=b?c:d;f&&f(a)};var h=this.node.current;let i=function({root:a,...b}){let c=a||document;e8.has(c)||e8.set(c,{});let d=e8.get(c),e=JSON.stringify(b);return d[e]||(d[e]=new IntersectionObserver(fa,{root:a,...b})),d[e]}(f);return e7.set(h,g),i.observe(h),()=>{e7.delete(h),i.unobserve(h)}}mount(){this.startObserver()}update(){if("undefined"==typeof IntersectionObserver)return;let{props:a,prevProps:b}=this.node;["amount","margin","root"].some(function({viewport:a={}},{viewport:b={}}={}){return c=>a[c]!==b[c]}(a,b))&&this.startObserver()}unmount(){}}},tap:{Feature:class extends du{mount(){let{current:a}=this.node;a&&(this.unmount=function(a,b,c={}){let[d,e,f]=eZ(a,c),g=a=>{let d=a.currentTarget;if(!e5(a))return;e2.add(d);let f=b(d,a),g=(a,b)=>{window.removeEventListener("pointerup",h),window.removeEventListener("pointercancel",i),e2.has(d)&&e2.delete(d),e5(a)&&"function"==typeof f&&f(a,{success:b})},h=a=>{g(a,d===window||d===document||c.useGlobalTarget||e0(d,a.target))},i=a=>{g(a,!1)};window.addEventListener("pointerup",h,e),window.addEventListener("pointercancel",i,e)};return d.forEach(a=>{(c.useGlobalTarget?window:a).addEventListener("pointerdown",g,e),d3(a)&&"offsetHeight"in a&&(a.addEventListener("focus",a=>((a,b)=>{let c=a.currentTarget;if(!c)return;let d=e3(()=>{if(e2.has(c))return;e4(c,"down");let a=e3(()=>{e4(c,"up")});c.addEventListener("keyup",a,b),c.addEventListener("blur",()=>e4(c,"cancel"),b)});c.addEventListener("keydown",d,b),c.addEventListener("blur",()=>c.removeEventListener("keydown",d),b)})(a,e)),e1.has(a.tagName)||-1!==a.tabIndex||a.hasAttribute("tabindex")||(a.tabIndex=0))}),f}(a,(a,b)=>(e6(this.node,b,"Start"),(a,{success:b})=>e6(this.node,a,b?"End":"Cancel")),{useGlobalTarget:this.node.props.globalTapTarget}))}unmount(){}}},focus:{Feature:class extends du{constructor(){super(...arguments),this.isActive=!1}onFocus(){let a=!1;try{a=this.node.current.matches(":focus-visible")}catch(b){a=!0}a&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!0),this.isActive=!0)}onBlur(){this.isActive&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!1),this.isActive=!1)}mount(){this.unmount=cb(dx(this.node.current,"focus",()=>this.onFocus()),dx(this.node.current,"blur",()=>this.onBlur()))}unmount(){}}},hover:{Feature:class extends du{mount(){let{current:a}=this.node;a&&(this.unmount=function(a,b,c={}){let[d,e,f]=eZ(a,c),g=a=>{if(!e$(a))return;let{target:c}=a,d=b(c,a);if("function"!=typeof d||!c)return;let f=a=>{e$(a)&&(d(a),c.removeEventListener("pointerleave",f))};c.addEventListener("pointerleave",f,e)};return d.forEach(a=>{a.addEventListener("pointerenter",g,e)}),f}(a,(a,b)=>(e_(this.node,b,"Start"),a=>e_(this.node,a,"End"))))}unmount(){}}},pan:{Feature:class extends du{constructor(){super(...arguments),this.removePointerDownListener=ad}onPointerDown(a){this.session=new dK(a,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:dI(this.node)})}createPanHandlers(){let{onPanSessionStart:a,onPanStart:b,onPan:c,onPanEnd:d}=this.node.getProps();return{onSessionStart:dW(a),onStart:dW(b),onMove:c,onEnd:(a,b)=>{delete this.session,d&&ai.postRender(()=>d(a,b))}}}mount(){this.removePointerDownListener=dA(this.node.current,"pointerdown",a=>this.onPointerDown(a))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends du{constructor(a){super(a),this.removeGroupControls=ad,this.removeListeners=ad,this.controls=new dU(a)}mount(){let{dragControls:a}=this.node.getProps();a&&(this.removeGroupControls=a.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||ad}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:eY,MeasureLayout:d1},layout:{ProjectionNode:eY,MeasureLayout:d1}},(a,b)=>bJ(a)?new bH(b):new bz(b,{allowProjection:a!==d.Fragment}));function fd(a,b){[...b].reverse().forEach(c=>{let d=a.getVariant(c);d&&b7(a,d),a.variantChildren&&a.variantChildren.forEach(a=>{fd(a,b)})})}function fe(){let a=!1,b=new Set,c={subscribe:a=>(b.add(a),()=>void b.delete(a)),start(c,d){Y(a,"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.");let e=[];return b.forEach(a=>{e.push(dm(a,c,{transitionOverride:d}))}),Promise.all(e)},set:c=>(Y(a,"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook."),b.forEach(a=>{var b,d;b=a,Array.isArray(d=c)?fd(b,d):"string"==typeof d?fd(b,[d]):b7(b,d)})),stop(){b.forEach(a=>{a.values.forEach(a=>a.stop())})},mount:()=>(a=!0,()=>{a=!1,c.stop()})};return c}let ff=function(){let a=bV(fe);return b2(a.mount,[]),a},fg=[.6,.05,.2,1],fh={x:.5,y:.5};function fi(a){return a[Math.floor(Math.random()*a.length)]}function fj({size:a=56}){return(0,c.jsxs)("svg",{width:a,height:a,viewBox:"0 0 56 56",className:"text-white/90",fill:"none",children:[(0,c.jsx)("circle",{cx:"28",cy:"28",r:"18",stroke:"currentColor",strokeWidth:"1.5"}),(0,c.jsx)("circle",{cx:"28",cy:"28",r:"10",stroke:"currentColor",strokeWidth:"1.5",opacity:.9}),(0,c.jsx)("circle",{cx:"28",cy:"28",r:"3",fill:"currentColor"}),[0,90,180,270].map(a=>(0,c.jsx)("circle",{cx:28+18*Math.cos(a*Math.PI/180),cy:28+18*Math.sin(a*Math.PI/180),r:"2.5",fill:"currentColor"},a))]})}function fk({size:a=54}){return(0,c.jsxs)("svg",{width:a,height:a,viewBox:"0 0 56 56",className:"text-white/90",fill:"none",children:[(0,c.jsx)("rect",{x:"11",y:"11",width:"34",height:"34",rx:"3",stroke:"currentColor",strokeWidth:"1.5"}),(0,c.jsx)("rect",{x:"18",y:"18",width:"20",height:"20",rx:"2",stroke:"currentColor",strokeWidth:"1.5",opacity:.9}),[{x:11,y:11},{x:45,y:11},{x:11,y:45},{x:45,y:45}].map((a,b)=>(0,c.jsx)("circle",{cx:a.x,cy:a.y,r:"2.5",fill:"currentColor"},b))]})}function fl({size:a=58}){let b={x:28,y:8},d={x:8,y:46},e={x:48,y:46};return(0,c.jsxs)("svg",{width:a,height:a,viewBox:"0 0 56 56",className:"text-white/90",fill:"none",children:[(0,c.jsx)("path",{d:`M ${b.x} ${b.y} L ${d.x} ${d.y} L ${e.x} ${e.y} Z`,stroke:"currentColor",strokeWidth:"1.5"}),(0,c.jsx)("path",{d:"M 28 16 L 16 38 L 40 38 Z",stroke:"currentColor",strokeWidth:"1.5",opacity:.9}),[b,d,e].map((a,b)=>(0,c.jsx)("circle",{cx:a.x,cy:a.y,r:"2.5",fill:"currentColor"},b))]})}function fm({logos:a=!1}){let b=(0,d.useRef)(null),{w:e,h:f}=function(a){let[b,c]=(0,d.useState)({w:0,h:0});return(0,d.useEffect)(()=>{let b=a.current;if(!b)return;let d=new ResizeObserver(()=>{let a=b.getBoundingClientRect();c({w:a.width,h:a.height})});return d.observe(b),()=>d.disconnect()},[a]),b}(b),g=(0,d.useMemo)(()=>(function(){let a=[1/6,.5,5/6],b=[];for(let c=0;c<3;c++)for(let d=0;d<3;d++)b.push({x:a[d],y:a[c]});return b})(),[]),h=[ff(),ff(),ff(),ff()],i=[ff(),ff(),ff(),ff()],j=[ff(),ff(),ff(),ff()],k=a?4:3,[l,m]=(0,d.useState)([{x:.8*Math.random()+.1,y:.8*Math.random()+.1},{x:.8*Math.random()+.1,y:.8*Math.random()+.1},{x:.8*Math.random()+.1,y:.8*Math.random()+.1},{x:.8*Math.random()+.1,y:.8*Math.random()+.1}]),[n,o]=(0,d.useState)(!1),[p,q]=(0,d.useState)(0),r=a=>({left:`${100*a.x}%`,top:`${100*a.y}%`}),s=a=>({x:a.x*e,y:a.y*f});(0,d.useEffect)(()=>{let b=!0;return(async()=>{for(;b;){let c=[fi(g),fi(g),fi(g),fi(g)];if(m(c),await Promise.all(Array.from({length:k},(a,b)=>Promise.all([h[b].set(r(c[b])),i[b].start({opacity:[0,1],transition:{duration:.8,ease:fg}}),j[b].start({scale:1,transition:{duration:0}})]))),a){for(let a=0;a<6&&b;a++){let a=[fi(g),fi(g),fi(g),fi(g)];m(a),await Promise.all(Array.from({length:k},(b,c)=>h[c].start({...r(a[c]),transition:{duration:1.1,ease:fg}})))}continue}for(let a=0;a<3;a++){let a=[fi(g),fi(g),fi(g)];m(a),await Promise.all([0,1,2].slice(0,k).map(b=>h[b].start({...r(a[b]),transition:{duration:.9,ease:fg}})))}o(!0),q(0),await new Promise(a=>setTimeout(a,50)),q(1),await new Promise(a=>setTimeout(a,1200)),m([fh,fh,fh]),await Promise.all([0,1,2].slice(0,k).map(a=>h[a].start({...r(fh),transition:{duration:.9,ease:fg}}))),await Promise.all([0,1,2].slice(0,k).map(a=>j[a].start({scale:[1,1.18,1],transition:{duration:.7,ease:fg}}))),o(!1),await Promise.all([0,1,2].slice(0,k).map(a=>i[a].start({opacity:[1,.6,1],transition:{duration:.3}})))}})(),()=>{b=!1}},[]);let t=(0,d.useMemo)(()=>l.map(s),[l,e,f]);return(0,c.jsxs)("div",{ref:b,className:"relative w-full h-full overflow-hidden bg-black",children:[(0,c.jsx)("div",{className:"absolute inset-0 grid grid-cols-3 grid-rows-3 gap-6 p-6",children:Array.from({length:9}).map((a,b)=>(0,c.jsx)("div",{className:"rounded-xl border border-white/10 bg-white/[0.015]"},b))}),(0,c.jsx)("svg",{className:"absolute inset-0",width:e,height:f,viewBox:`0 0 ${e} ${f}`,children:n&&e>0&&f>0&&(0,c.jsx)(fc.path,{d:`M ${t[0].x} ${t[0].y} L ${t[1].x} ${t[1].y} L ${t[2].x} ${t[2].y} Z`,stroke:"white",strokeOpacity:.9,strokeWidth:1,fill:"none",initial:{pathLength:0},animate:{pathLength:p},transition:{duration:1.2,ease:fg}})}),[fj,fk,fl].map((a,b)=>(0,c.jsx)(fc.div,{className:"absolute -translate-x-1/2 -translate-y-1/2 mix-blend-lighten [filter:drop-shadow(0_0_8px_rgba(255,255,255,0.2))]",animate:h[b],initial:{left:"50%",top:"50%"},style:{pointerEvents:"none"},children:(0,c.jsx)(fc.div,{animate:j[b],children:(0,c.jsx)(fc.div,{animate:i[b],children:(0,c.jsx)(a,{})})})},b))]})}},10126,a=>{"use strict";a.s(["default",()=>d]);var b=a.i(87924),c=a.i(72131);function d({words:a,className:d,typingSpeedMs:e=90,deletingSpeedMs:f=55,pauseMs:g=850}){let h=(0,c.useMemo)(()=>a.length?a:[""],[a]),[i,j]=(0,c.useState)(0),[k,l]=(0,c.useState)(""),[m,n]=(0,c.useState)(!1);return(0,c.useEffect)(()=>{let a,b=h[i%h.length],c=m?f:e;return m||k!==b?m&&""===k?(n(!1),j(a=>(a+1)%h.length)):a=setTimeout(()=>{l(a=>m?a.slice(0,-1):b.slice(0,a.length+1))},c):a=setTimeout(()=>n(!0),g),()=>clearTimeout(a)},[k,m,i,h,e,f,g]),(0,b.jsxs)("span",{className:d,style:{color:"#eef895"},children:[k,(0,b.jsx)("span",{className:"ml-1 inline-block w-[2px] h-[0.9em] align-[-0.05em] bg-[#eef895] animate-pulse"})]})}},98823,a=>{"use strict";let b;a.s(["default",()=>fy],98823);var c=a.i(87924),d=a.i(72131);let e="srgb",f="srgb-linear",g="display-p3",h="display-p3-linear",i="linear",j="srgb",k="rec709",l="300 es";class m{addEventListener(a,b){void 0===this._listeners&&(this._listeners={});let c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)}hasEventListener(a,b){if(void 0===this._listeners)return!1;let c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)}removeEventListener(a,b){if(void 0===this._listeners)return;let c=this._listeners[a];if(void 0!==c){let a=c.indexOf(b);-1!==a&&c.splice(a,1)}}dispatchEvent(a){if(void 0===this._listeners)return;let b=this._listeners[a.type];if(void 0!==b){a.target=this;let c=b.slice(0);for(let b=0,d=c.length;b<d;b++)c[b].call(this,a);a.target=null}}}let n=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],o=Math.PI/180,p=180/Math.PI;function q(){let a=0xffffffff*Math.random()|0,b=0xffffffff*Math.random()|0,c=0xffffffff*Math.random()|0,d=0xffffffff*Math.random()|0;return(n[255&a]+n[a>>8&255]+n[a>>16&255]+n[a>>24&255]+"-"+n[255&b]+n[b>>8&255]+"-"+n[b>>16&15|64]+n[b>>24&255]+"-"+n[63&c|128]+n[c>>8&255]+"-"+n[c>>16&255]+n[c>>24&255]+n[255&d]+n[d>>8&255]+n[d>>16&255]+n[d>>24&255]).toLowerCase()}function r(a,b,c){return Math.max(b,Math.min(c,a))}function s(a){return(a&a-1)==0&&0!==a}function t(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}function u(a,b){switch(b.constructor){case Float32Array:return a;case Uint32Array:return a/0xffffffff;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int32Array:return Math.max(a/0x7fffffff,-1);case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw Error("Invalid component type.")}}function v(a,b){switch(b.constructor){case Float32Array:return a;case Uint32Array:return Math.round(0xffffffff*a);case Uint16Array:return Math.round(65535*a);case Uint8Array:return Math.round(255*a);case Int32Array:return Math.round(0x7fffffff*a);case Int16Array:return Math.round(32767*a);case Int8Array:return Math.round(127*a);default:throw Error("Invalid component type.")}}class w{constructor(a=0,b=0){w.prototype.isVector2=!0,this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a){return this.x+=a.x,this.y+=a.y,this}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a){return this.x-=a.x,this.y-=a.y,this}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){let b=this.x,c=this.y,d=a.elements;return this.x=d[0]*b+d[3]*c+d[6],this.y=d[1]*b+d[4]*c+d[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());return 0===b?Math.PI/2:Math.acos(r(this.dot(a)/b,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b){return this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class x{constructor(a,b,c,d,e,f,g,h,i){x.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==a&&this.set(a,b,c,d,e,f,g,h,i)}set(a,b,c,d,e,f,g,h,i){let j=this.elements;return j[0]=a,j[1]=d,j[2]=g,j[3]=b,j[4]=e,j[5]=h,j[6]=c,j[7]=f,j[8]=i,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(a){let b=a.elements;return this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[3],h=c[6],i=c[1],j=c[4],k=c[7],l=c[2],m=c[5],n=c[8],o=d[0],p=d[3],q=d[6],r=d[1],s=d[4],t=d[7],u=d[2],v=d[5],w=d[8];return e[0]=f*o+g*r+h*u,e[3]=f*p+g*s+h*v,e[6]=f*q+g*t+h*w,e[1]=i*o+j*r+k*u,e[4]=i*p+j*s+k*v,e[7]=i*q+j*t+k*w,e[2]=l*o+m*r+n*u,e[5]=l*p+m*s+n*v,e[8]=l*q+m*t+n*w,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=j*f-g*i,l=g*h-j*e,m=i*e-f*h,n=b*k+c*l+d*m;if(0===n)return this.set(0,0,0,0,0,0,0,0,0);let o=1/n;return a[0]=k*o,a[1]=(d*i-j*c)*o,a[2]=(g*c-d*f)*o,a[3]=l*o,a[4]=(j*b-d*h)*o,a[5]=(d*e-g*b)*o,a[6]=m*o,a[7]=(c*h-i*b)*o,a[8]=(f*b-c*e)*o,this}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this}getNormalMatrix(a){return this.setFromMatrix4(a).invert().transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(a,b,c,d,e,f,g){let h=Math.cos(e),i=Math.sin(e);return this.set(c*h,c*i,-c*(h*f+i*g)+f+a,-d*i,d*h,-d*(-i*f+h*g)+g+b,0,0,1),this}scale(a,b){return this.premultiply(y.makeScale(a,b)),this}rotate(a){return this.premultiply(y.makeRotation(-a)),this}translate(a,b){return this.premultiply(y.makeTranslation(a,b)),this}makeTranslation(a,b){return a.isVector2?this.set(1,0,a.x,0,1,a.y,0,0,1):this.set(1,0,a,0,1,b,0,0,1),this}makeRotation(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,c,b,0,0,0,1),this}makeScale(a,b){return this.set(a,0,0,0,b,0,0,0,1),this}equals(a){let b=this.elements,c=a.elements;for(let a=0;a<9;a++)if(b[a]!==c[a])return!1;return!0}fromArray(a,b=0){for(let c=0;c<9;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}clone(){return new this.constructor().fromArray(this.elements)}}let y=new x;function z(a){for(let b=a.length-1;b>=0;--b)if(a[b]>=65535)return!0;return!1}function A(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let B={};function C(a){a in B||(B[a]=!0,console.warn(a))}let D=new x().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),E=new x().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),F={[f]:{transfer:i,primaries:k,toReference:a=>a,fromReference:a=>a},[e]:{transfer:j,primaries:k,toReference:a=>a.convertSRGBToLinear(),fromReference:a=>a.convertLinearToSRGB()},[h]:{transfer:i,primaries:"p3",toReference:a=>a.applyMatrix3(E),fromReference:a=>a.applyMatrix3(D)},[g]:{transfer:j,primaries:"p3",toReference:a=>a.convertSRGBToLinear().applyMatrix3(E),fromReference:a=>a.applyMatrix3(D).convertLinearToSRGB()}},G=new Set([f,h]),H={enabled:!0,_workingColorSpace:f,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!G.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(a,b,c){if(!1===this.enabled||b===c||!b||!c)return a;let d=F[b].toReference;return(0,F[c].fromReference)(d(a))},fromWorkingColorSpace:function(a,b){return this.convert(a,this._workingColorSpace,b)},toWorkingColorSpace:function(a,b){return this.convert(a,b,this._workingColorSpace)},getPrimaries:function(a){return F[a].primaries},getTransfer:function(a){return""===a?i:F[a].transfer}};function I(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function J(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}class K{static getDataURL(a){let c;if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;if(a instanceof HTMLCanvasElement)c=a;else{void 0===b&&(b=A("canvas")),b.width=a.width,b.height=a.height;let d=b.getContext("2d");a instanceof ImageData?d.putImageData(a,0,0):d.drawImage(a,0,0,a.width,a.height),c=b}return c.width>2048||c.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",a),c.toDataURL("image/jpeg",.6)):c.toDataURL("image/png")}static sRGBToLinear(a){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let b=A("canvas");b.width=a.width,b.height=a.height;let c=b.getContext("2d");c.drawImage(a,0,0,a.width,a.height);let d=c.getImageData(0,0,a.width,a.height),e=d.data;for(let a=0;a<e.length;a++)e[a]=255*I(e[a]/255);return c.putImageData(d,0,0),b}if(!a.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),a;{let b=a.data.slice(0);for(let a=0;a<b.length;a++)b instanceof Uint8Array||b instanceof Uint8ClampedArray?b[a]=Math.floor(255*I(b[a]/255)):b[a]=I(b[a]);return{data:b,width:a.width,height:a.height}}}}let L=0;class M{constructor(a=null){this.isSource=!0,Object.defineProperty(this,"id",{value:L++}),this.uuid=q(),this.data=a,this.dataReady=!0,this.version=0}set needsUpdate(a){!0===a&&this.version++}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&&void 0!==a.images[this.uuid])return a.images[this.uuid];let c={uuid:this.uuid,url:""},d=this.data;if(null!==d){let a;if(Array.isArray(d)){a=[];for(let b=0,c=d.length;b<c;b++)d[b].isDataTexture?a.push(N(d[b].image)):a.push(N(d[b]))}else a=N(d);c.url=a}return b||(a.images[this.uuid]=c),c}}function N(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?K.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let O=0;class P extends m{constructor(a=P.DEFAULT_IMAGE,b=P.DEFAULT_MAPPING,c=1001,d=1001,f=1006,g=1008,h=1023,i=1009,j=P.DEFAULT_ANISOTROPY,k=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:O++}),this.uuid=q(),this.name="",this.source=new M(a),this.mipmaps=[],this.mapping=b,this.channel=0,this.wrapS=c,this.wrapT=d,this.magFilter=f,this.minFilter=g,this.anisotropy=j,this.format=h,this.internalFormat=null,this.type=i,this.offset=new w(0,0),this.repeat=new w(1,1),this.center=new w(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new x,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof k?this.colorSpace=k:(C("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===k?e:""),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(a=null){this.source.data=a}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(a){return this.name=a.name,this.source=a.source,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.channel=a.channel,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.colorSpace=a.colorSpace,this.userData=JSON.parse(JSON.stringify(a.userData)),this.needsUpdate=!0,this}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];let c={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(a).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(c.userData=this.userData),b||(a.textures[this.uuid]=c),c}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(a){if(300!==this.mapping)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case 1e3:a.x=a.x-Math.floor(a.x);break;case 1001:a.x=a.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case 1e3:a.y=a.y-Math.floor(a.y);break;case 1001:a.y=a.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}set needsUpdate(a){!0===a&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return C("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===e?3001:3e3}set encoding(a){C("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===a?e:""}}P.DEFAULT_IMAGE=null,P.DEFAULT_MAPPING=300,P.DEFAULT_ANISOTROPY=1;class Q{constructor(a=0,b=0,c=0,d=1){Q.prototype.isVector4=!0,this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this.w*=a.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(a){let b,c,d,e,f=a.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];if(.01>Math.abs(h-j)&&.01>Math.abs(i-m)&&.01>Math.abs(l-n)){if(.1>Math.abs(h+j)&&.1>Math.abs(i+m)&&.1>Math.abs(l+n)&&.1>Math.abs(g+k+o-3))return this.set(1,0,0,0),this;b=Math.PI;let a=(g+1)/2,f=(k+1)/2,p=(o+1)/2,q=(h+j)/4,r=(i+m)/4,s=(l+n)/4;return a>f&&a>p?a<.01?(c=0,d=.707106781,e=.707106781):(d=q/(c=Math.sqrt(a)),e=r/c):f>p?f<.01?(c=.707106781,d=0,e=.707106781):(c=q/(d=Math.sqrt(f)),e=s/d):p<.01?(c=.707106781,d=.707106781,e=0):(c=r/(e=Math.sqrt(p)),d=s/e),this.set(c,d,e,b),this}let p=Math.sqrt((n-l)*(n-l)+(i-m)*(i-m)+(j-h)*(j-h));return .001>Math.abs(p)&&(p=1),this.x=(n-l)/p,this.y=(i-m)/p,this.z=(j-h)/p,this.w=Math.acos((g+k+o-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b){return this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class R extends m{constructor(a=1,b=1,c={}){super(),this.isRenderTarget=!0,this.width=a,this.height=b,this.depth=1,this.scissor=new Q(0,0,a,b),this.scissorTest=!1,this.viewport=new Q(0,0,a,b),void 0!==c.encoding&&(C("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),c.colorSpace=3001===c.encoding?e:""),c=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},c),this.texture=new P({width:a,height:b,depth:1},c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=c.generateMipmaps,this.texture.internalFormat=c.internalFormat,this.depthBuffer=c.depthBuffer,this.stencilBuffer=c.stencilBuffer,this.depthTexture=c.depthTexture,this.samples=c.samples}setSize(a,b,c=1){(this.width!==a||this.height!==b||this.depth!==c)&&(this.width=a,this.height=b,this.depth=c,this.texture.image.width=a,this.texture.image.height=b,this.texture.image.depth=c,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)}clone(){return new this.constructor().copy(this)}copy(a){this.width=a.width,this.height=a.height,this.depth=a.depth,this.scissor.copy(a.scissor),this.scissorTest=a.scissorTest,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.texture.isRenderTargetTexture=!0;let b=Object.assign({},a.texture.image);return this.texture.source=new M(b),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,null!==a.depthTexture&&(this.depthTexture=a.depthTexture.clone()),this.samples=a.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class S extends R{constructor(a=1,b=1,c={}){super(a,b,c),this.isWebGLRenderTarget=!0}}class T extends P{constructor(a=null,b=1,c=1,d=1){super(null),this.isDataArrayTexture=!0,this.image={data:a,width:b,height:c,depth:d},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class U{constructor(a=0,b=0,c=0,d=1){this.isQuaternion=!0,this._x=a,this._y=b,this._z=c,this._w=d}static slerpFlat(a,b,c,d,e,f,g){let h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(0===g){a[b+0]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k;return}if(1===g){a[b+0]=l,a[b+1]=m,a[b+2]=n,a[b+3]=o;return}if(k!==o||h!==l||i!==m||j!==n){let a=1-g,b=h*l+i*m+j*n+k*o,c=b>=0?1:-1,d=1-b*b;if(d>Number.EPSILON){let e=Math.sqrt(d),f=Math.atan2(e,b*c);a=Math.sin(a*f)/e,g=Math.sin(g*f)/e}let e=g*c;if(h=h*a+l*e,i=i*a+m*e,j=j*a+n*e,k=k*a+o*e,a===1-g){let a=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=a,i*=a,j*=a,k*=a}}a[b]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(a,b=!0){let c=a._x,d=a._y,e=a._z,f=a._order,g=Math.cos,h=Math.sin,i=g(c/2),j=g(d/2),k=g(e/2),l=h(c/2),m=h(d/2),n=h(e/2);switch(f){case"XYZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"YXZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"ZXY":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"ZYX":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"YZX":this._x=l*j*k+i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k-l*m*n;break;case"XZY":this._x=l*j*k-i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k+l*m*n;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return!0===b&&this._onChangeCallback(),this}setFromAxisAngle(a,b){let c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(a){let b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;if(l>0){let a=.5/Math.sqrt(l+1);this._w=.25/a,this._x=(j-h)*a,this._y=(e-i)*a,this._z=(f-d)*a}else if(c>g&&c>k){let a=2*Math.sqrt(1+c-g-k);this._w=(j-h)/a,this._x=.25*a,this._y=(d+f)/a,this._z=(e+i)/a}else if(g>k){let a=2*Math.sqrt(1+g-c-k);this._w=(e-i)/a,this._x=(d+f)/a,this._y=.25*a,this._z=(h+j)/a}else{let a=2*Math.sqrt(1+k-c-g);this._w=(f-d)/a,this._x=(e+i)/a,this._y=(h+j)/a,this._z=.25*a}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<Number.EPSILON?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0):(this._x=0,this._y=-a.z,this._z=a.y)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x),this._w=c,this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(r(this.dot(a),-1,1)))}rotateTowards(a,b){let c=this.angleTo(a);if(0===c)return this;let d=Math.min(1,b/c);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a){return this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;let h=1-g*g;if(h<=Number.EPSILON){let a=1-b;return this._w=a*f+b*this._w,this._x=a*c+b*this._x,this._y=a*d+b*this._y,this._z=a*e+b*this._z,this.normalize(),this}let i=Math.sqrt(h),j=Math.atan2(i,g),k=Math.sin((1-b)*j)/i,l=Math.sin(b*j)/i;return this._w=f*k+this._w*l,this._x=c*k+this._x*l,this._y=d*k+this._y*l,this._z=e*k+this._z*l,this._onChangeCallback(),this}slerpQuaternions(a,b,c){return this.copy(a).slerp(b,c)}random(){let a=Math.random(),b=Math.sqrt(1-a),c=Math.sqrt(a),d=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(b*Math.cos(d),c*Math.sin(e),c*Math.cos(e),b*Math.sin(d))}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b=0){return this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class V{constructor(a=0,b=0,c=0){V.prototype.isVector3=!0,this.x=a,this.y=b,this.z=c}set(a,b,c){return void 0===c&&(c=this.z),this.x=a,this.y=b,this.z=c,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return this.applyQuaternion(X.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(X.setFromAxisAngle(a,b))}applyMatrix3(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this}applyQuaternion(a){let b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=2*(f*d-g*c),j=2*(g*b-e*d),k=2*(e*c-f*b);return this.x=b+h*i+f*k-g*j,this.y=c+h*j+g*i-e*k,this.z=d+h*k+e*j-f*i,this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a){return this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return W.copy(this).projectOnVector(a),this.sub(W)}reflect(a){return this.sub(W.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());return 0===b?Math.PI/2:Math.acos(r(this.dot(a)/b,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(a){let b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}setFromEuler(a){return this.x=a._x,this.y=a._y,this.z=a._z,this}setFromColor(a){return this.x=a.r,this.y=a.g,this.z=a.b,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b){return this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let a=(Math.random()-.5)*2,b=Math.random()*Math.PI*2,c=Math.sqrt(1-a**2);return this.x=c*Math.cos(b),this.y=c*Math.sin(b),this.z=a,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let W=new V,X=new U;class Y{constructor(a=new V(Infinity,Infinity,Infinity),b=new V(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b+=3)this.expandByPoint($.fromArray(a,b));return this}setFromBufferAttribute(a){this.makeEmpty();for(let b=0,c=a.count;b<c;b++)this.expandByPoint($.fromBufferAttribute(a,b));return this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=$.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}setFromObject(a,b=!1){return this.makeEmpty(),this.expandByObject(a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(a,b=!1){a.updateWorldMatrix(!1,!1);let c=a.geometry;if(void 0!==c){let d=c.getAttribute("position");if(!0===b&&void 0!==d&&!0!==a.isInstancedMesh)for(let b=0,c=d.count;b<c;b++)!0===a.isMesh?a.getVertexPosition(b,$):$.fromBufferAttribute(d,b),$.applyMatrix4(a.matrixWorld),this.expandByPoint($);else void 0!==a.boundingBox?(null===a.boundingBox&&a.computeBoundingBox(),_.copy(a.boundingBox)):(null===c.boundingBox&&c.computeBoundingBox(),_.copy(c.boundingBox)),_.applyMatrix4(a.matrixWorld),this.union(_)}let d=a.children;for(let a=0,c=d.length;a<c;a++)this.expandByObject(d[a],b);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,$),$.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<=-a.constant&&c>=-a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(ag),ah.subVectors(this.max,ag),aa.subVectors(a.a,ag),ab.subVectors(a.b,ag),ac.subVectors(a.c,ag),ad.subVectors(ab,aa),ae.subVectors(ac,ab),af.subVectors(aa,ac);let b=[0,-ad.z,ad.y,0,-ae.z,ae.y,0,-af.z,af.y,ad.z,0,-ad.x,ae.z,0,-ae.x,af.z,0,-af.x,-ad.y,ad.x,0,-ae.y,ae.x,0,-af.y,af.x,0];return!!ak(b,aa,ab,ac,ah)&&!!ak(b=[1,0,0,0,1,0,0,0,1],aa,ab,ac,ah)&&(ai.crossVectors(ad,ae),ak(b=[ai.x,ai.y,ai.z],aa,ab,ac,ah))}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){return this.clampPoint(a,$).distanceTo(a)}getBoundingSphere(a){return this.isEmpty()?a.makeEmpty():(this.getCenter(a.center),a.radius=.5*this.getSize($).length()),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(Z[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),Z[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),Z[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),Z[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),Z[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),Z[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),Z[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),Z[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(Z)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}let Z=[new V,new V,new V,new V,new V,new V,new V,new V],$=new V,_=new Y,aa=new V,ab=new V,ac=new V,ad=new V,ae=new V,af=new V,ag=new V,ah=new V,ai=new V,aj=new V;function ak(a,b,c,d,e){for(let f=0,g=a.length-3;f<=g;f+=3){aj.fromArray(a,f);let g=e.x*Math.abs(aj.x)+e.y*Math.abs(aj.y)+e.z*Math.abs(aj.z),h=b.dot(aj),i=c.dot(aj),j=d.dot(aj);if(Math.max(-Math.max(h,i,j),Math.min(h,i,j))>g)return!1}return!0}let al=new Y,am=new V,an=new V;class ao{constructor(a=new V,b=-1){this.isSphere=!0,this.center=a,this.radius=b}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,b){let c=this.center;void 0!==b?c.copy(b):al.setFromPoints(a).getCenter(c);let d=0;for(let b=0,e=a.length;b<e;b++)d=Math.max(d,c.distanceToSquared(a[b]));return this.radius=Math.sqrt(d),this}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,b){let c=this.center.distanceToSquared(a);return b.copy(a),c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center)),b}getBoundingBox(a){return this.isEmpty()?a.makeEmpty():(a.set(this.center,this.center),a.expandByScalar(this.radius)),a}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}expandByPoint(a){if(this.isEmpty())return this.center.copy(a),this.radius=0,this;am.subVectors(a,this.center);let b=am.lengthSq();if(b>this.radius*this.radius){let a=Math.sqrt(b),c=(a-this.radius)*.5;this.center.addScaledVector(am,c/a),this.radius+=c}return this}union(a){return a.isEmpty()||(this.isEmpty()?this.copy(a):!0===this.center.equals(a.center)?this.radius=Math.max(this.radius,a.radius):(an.subVectors(a.center,this.center).setLength(a.radius),this.expandByPoint(am.copy(a.center).add(an)),this.expandByPoint(am.copy(a.center).sub(an)))),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}clone(){return new this.constructor().copy(this)}}let ap=new V,aq=new V,ar=new V,as=new V,at=new V,au=new V,av=new V;class aw{constructor(a=new V,b=new V(0,0,-1)){this.origin=a,this.direction=b}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return b.copy(this.origin).addScaledVector(this.direction,a)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,ap)),this}closestPointToPoint(a,b){b.subVectors(a,this.origin);let c=b.dot(this.direction);return c<0?b.copy(this.origin):b.copy(this.origin).addScaledVector(this.direction,c)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=ap.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(ap.copy(this.origin).addScaledVector(this.direction,b),ap.distanceToSquared(a))}distanceSqToSegment(a,b,c,d){let e,f,g,h;aq.copy(a).add(b).multiplyScalar(.5),ar.copy(b).sub(a).normalize(),as.copy(this.origin).sub(aq);let i=.5*a.distanceTo(b),j=-this.direction.dot(ar),k=as.dot(this.direction),l=-as.dot(ar),m=as.lengthSq(),n=Math.abs(1-j*j);if(n>0)if(e=j*l-k,f=j*k-l,h=i*n,e>=0)if(f>=-h)if(f<=h){let a=1/n;e*=a,f*=a,g=e*(e+j*f+2*k)+f*(j*e+f+2*l)+m}else g=-(e=Math.max(0,-(j*(f=i)+k)))*e+f*(f+2*l)+m;else g=-(e=Math.max(0,-(j*(f=-i)+k)))*e+f*(f+2*l)+m;else f<=-h?(f=(e=Math.max(0,-(-j*i+k)))>0?-i:Math.min(Math.max(-i,-l),i),g=-e*e+f*(f+2*l)+m):f<=h?(e=0,g=(f=Math.min(Math.max(-i,-l),i))*(f+2*l)+m):(f=(e=Math.max(0,-(j*i+k)))>0?i:Math.min(Math.max(-i,-l),i),g=-e*e+f*(f+2*l)+m);else f=j>0?-i:i,g=-(e=Math.max(0,-(j*f+k)))*e+f*(f+2*l)+m;return c&&c.copy(this.origin).addScaledVector(this.direction,e),d&&d.copy(aq).addScaledVector(ar,f),g}intersectSphere(a,b){ap.subVectors(a.center,this.origin);let c=ap.dot(this.direction),d=ap.dot(ap)-c*c,e=a.radius*a.radius;if(d>e)return null;let f=Math.sqrt(e-d),g=c-f,h=c+f;return h<0?null:g<0?this.at(h,b):this.at(g,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(a,b){let c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);return!!(0===b||a.normal.dot(this.direction)*b<0)}intersectBox(a,b){let c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return(i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d||((e>c||isNaN(c))&&(c=e),(f<d||isNaN(d))&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d||((g>c||c!=c)&&(c=g),(h<d||d!=d)&&(d=h),d<0)))?null:this.at(c>=0?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,ap)}intersectTriangle(a,b,c,d,e){let f;at.subVectors(b,a),au.subVectors(c,a),av.crossVectors(at,au);let g=this.direction.dot(av);if(g>0){if(d)return null;f=1}else{if(!(g<0))return null;f=-1,g=-g}as.subVectors(this.origin,a);let h=f*this.direction.dot(au.crossVectors(as,au));if(h<0)return null;let i=f*this.direction.dot(at.cross(as));if(i<0||h+i>g)return null;let j=-f*as.dot(av);return j<0?null:this.at(j/g,e)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ax{constructor(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){ax.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==a&&this.set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){let q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ax().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],b[9]=c[9],b[10]=c[10],b[11]=c[11],b[12]=c[12],b[13]=c[13],b[14]=c[14],b[15]=c[15],this}copyPosition(a){let b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this}setFromMatrix3(a){let b=a.elements;return this.set(b[0],b[3],b[6],0,b[1],b[4],b[7],0,b[2],b[5],b[8],0,0,0,0,1),this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(a){let b=this.elements,c=a.elements,d=1/ay.setFromMatrixColumn(a,0).length(),e=1/ay.setFromMatrixColumn(a,1).length(),f=1/ay.setFromMatrixColumn(a,2).length();return b[0]=c[0]*d,b[1]=c[1]*d,b[2]=c[2]*d,b[3]=0,b[4]=c[4]*e,b[5]=c[5]*e,b[6]=c[6]*e,b[7]=0,b[8]=c[8]*f,b[9]=c[9]*f,b[10]=c[10]*f,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromEuler(a){let b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){let a=f*j,c=f*k,d=g*j,e=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=c+d*i,b[5]=a-e*i,b[9]=-g*h,b[2]=e-a*i,b[6]=d+c*i,b[10]=f*h}else if("YXZ"===a.order){let a=h*j,c=h*k,d=i*j,e=i*k;b[0]=a+e*g,b[4]=d*g-c,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=c*g-d,b[6]=e+a*g,b[10]=f*h}else if("ZXY"===a.order){let a=h*j,c=h*k,d=i*j,e=i*k;b[0]=a-e*g,b[4]=-f*k,b[8]=d+c*g,b[1]=c+d*g,b[5]=f*j,b[9]=e-a*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){let a=f*j,c=f*k,d=g*j,e=g*k;b[0]=h*j,b[4]=d*i-c,b[8]=a*i+e,b[1]=h*k,b[5]=e*i+a,b[9]=c*i-d,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){let a=f*h,c=f*i,d=g*h,e=g*i;b[0]=h*j,b[4]=e-a*k,b[8]=d*k+c,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=c*k+d,b[10]=a-e*k}else if("XZY"===a.order){let a=f*h,c=f*i,d=g*h,e=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=a*k+e,b[5]=f*j,b[9]=c*k-d,b[2]=d*k-c,b[6]=g*j,b[10]=e*k+a}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromQuaternion(a){return this.compose(aA,a,aB)}lookAt(a,b,c){let d=this.elements;return aE.subVectors(a,b),0===aE.lengthSq()&&(aE.z=1),aE.normalize(),aC.crossVectors(c,aE),0===aC.lengthSq()&&(1===Math.abs(c.z)?aE.x+=1e-4:aE.z+=1e-4,aE.normalize(),aC.crossVectors(c,aE)),aC.normalize(),aD.crossVectors(aE,aC),d[0]=aC.x,d[4]=aD.x,d[8]=aE.x,d[1]=aC.y,d[5]=aD.y,d[9]=aE.y,d[2]=aC.z,d[6]=aD.z,d[10]=aE.z,this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7];return n*(e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+a[11]*(b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+a[15]*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this}setPosition(a,b,c){let d=this.elements;return a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c),this}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=k*p*i-o*l*i+o*h*m-g*p*m-k*h*q+g*l*q,s=n*l*i-j*p*i-n*h*m+f*p*m+j*h*q-f*l*q,t=j*o*i-n*k*i+n*g*m-f*o*m-j*g*q+f*k*q,u=n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p,v=b*r+c*s+d*t+e*u;if(0===v)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/v;return a[0]=r*w,a[1]=(o*l*e-k*p*e-o*d*m+c*p*m+k*d*q-c*l*q)*w,a[2]=(g*p*e-o*h*e+o*d*i-c*p*i-g*d*q+c*h*q)*w,a[3]=(k*h*e-g*l*e-k*d*i+c*l*i+g*d*m-c*h*m)*w,a[4]=s*w,a[5]=(j*p*e-n*l*e+n*d*m-b*p*m-j*d*q+b*l*q)*w,a[6]=(n*h*e-f*p*e-n*d*i+b*p*i+f*d*q-b*h*q)*w,a[7]=(f*l*e-j*h*e+j*d*i-b*l*i-f*d*m+b*h*m)*w,a[8]=t*w,a[9]=(n*k*e-j*o*e-n*c*m+b*o*m+j*c*q-b*k*q)*w,a[10]=(f*o*e-n*g*e+n*c*i-b*o*i-f*c*q+b*g*q)*w,a[11]=(j*g*e-f*k*e-j*c*i+b*k*i+f*c*m-b*g*m)*w,a[12]=u*w,a[13]=(j*o*d-n*k*d+n*c*l-b*o*l-j*c*p+b*k*p)*w,a[14]=(n*g*d-f*o*d-n*c*h+b*o*h+f*c*p-b*g*p)*w,a[15]=(f*k*d-j*g*d+j*c*h-b*k*h-f*c*l+b*g*l)*w,this}scale(a){let b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2];return Math.sqrt(Math.max(b,a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))}makeTranslation(a,b,c){return a.isVector3?this.set(1,0,0,a.x,0,1,0,a.y,0,0,1,a.z,0,0,0,1):this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(a,b){let c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c,d,e,f){return this.set(1,c,e,0,a,1,f,0,b,d,1,0,0,0,0,1),this}compose(a,b,c){let d=this.elements,e=b._x,f=b._y,g=b._z,h=b._w,i=e+e,j=f+f,k=g+g,l=e*i,m=e*j,n=e*k,o=f*j,p=f*k,q=g*k,r=h*i,s=h*j,t=h*k,u=c.x,v=c.y,w=c.z;return d[0]=(1-(o+q))*u,d[1]=(m+t)*u,d[2]=(n-s)*u,d[3]=0,d[4]=(m-t)*v,d[5]=(1-(l+q))*v,d[6]=(p+r)*v,d[7]=0,d[8]=(n+s)*w,d[9]=(p-r)*w,d[10]=(1-(l+o))*w,d[11]=0,d[12]=a.x,d[13]=a.y,d[14]=a.z,d[15]=1,this}decompose(a,b,c){let d=this.elements,e=ay.set(d[0],d[1],d[2]).length(),f=ay.set(d[4],d[5],d[6]).length(),g=ay.set(d[8],d[9],d[10]).length();0>this.determinant()&&(e=-e),a.x=d[12],a.y=d[13],a.z=d[14],az.copy(this);let h=1/e,i=1/f,j=1/g;return az.elements[0]*=h,az.elements[1]*=h,az.elements[2]*=h,az.elements[4]*=i,az.elements[5]*=i,az.elements[6]*=i,az.elements[8]*=j,az.elements[9]*=j,az.elements[10]*=j,b.setFromRotationMatrix(az),c.x=e,c.y=f,c.z=g,this}makePerspective(a,b,c,d,e,f,g=2e3){let h,i,j=this.elements;if(2e3===g)h=-(f+e)/(f-e),i=-2*f*e/(f-e);else if(2001===g)h=-f/(f-e),i=-f*e/(f-e);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+g);return j[0]=2*e/(b-a),j[4]=0,j[8]=(b+a)/(b-a),j[12]=0,j[1]=0,j[5]=2*e/(c-d),j[9]=(c+d)/(c-d),j[13]=0,j[2]=0,j[6]=0,j[10]=h,j[14]=i,j[3]=0,j[7]=0,j[11]=-1,j[15]=0,this}makeOrthographic(a,b,c,d,e,f,g=2e3){let h,i,j=this.elements,k=1/(b-a),l=1/(c-d),m=1/(f-e);if(2e3===g)h=(f+e)*m,i=-2*m;else if(2001===g)h=e*m,i=-1*m;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+g);return j[0]=2*k,j[4]=0,j[8]=0,j[12]=-((b+a)*k),j[1]=0,j[5]=2*l,j[9]=0,j[13]=-((c+d)*l),j[2]=0,j[6]=0,j[10]=i,j[14]=-h,j[3]=0,j[7]=0,j[11]=0,j[15]=1,this}equals(a){let b=this.elements,c=a.elements;for(let a=0;a<16;a++)if(b[a]!==c[a])return!1;return!0}fromArray(a,b=0){for(let c=0;c<16;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}let ay=new V,az=new ax,aA=new V(0,0,0),aB=new V(1,1,1),aC=new V,aD=new V,aE=new V,aF=new ax,aG=new U;class aH{constructor(a=0,b=0,c=0,d=aH.DEFAULT_ORDER){this.isEuler=!0,this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d=this._order){return this._x=a,this._y=b,this._z=c,this._order=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(a,b=this._order,c=!0){let d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];switch(b){case"XYZ":this._y=Math.asin(r(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0);break;case"YXZ":this._x=Math.asin(-r(j,-1,1)),.9999999>Math.abs(j)?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0);break;case"ZXY":this._x=Math.asin(r(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e));break;case"ZYX":this._y=Math.asin(-r(k,-1,1)),.9999999>Math.abs(k)?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i));break;case"YZX":this._z=Math.asin(r(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m));break;case"XZY":this._z=Math.asin(-r(f,-1,1)),.9999999>Math.abs(f)?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+b)}return this._order=b,!0===c&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return aF.makeRotationFromQuaternion(a),this.setFromRotationMatrix(aF,b,c)}setFromVector3(a,b=this._order){return this.set(a.x,a.y,a.z,b)}reorder(a){return aG.setFromEuler(this),this.setFromQuaternion(aG,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}aH.DEFAULT_ORDER="XYZ";class aI{constructor(){this.mask=1}set(a){this.mask=1<<a>>>0}enable(a){this.mask|=1<<a}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a}disable(a){this.mask&=~(1<<a)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}isEnabled(a){return(this.mask&1<<a)!=0}}let aJ=0,aK=new V,aL=new U,aM=new ax,aN=new V,aO=new V,aP=new V,aQ=new U,aR=new V(1,0,0),aS=new V(0,1,0),aT=new V(0,0,1),aU={type:"added"},aV={type:"removed"};class aW extends m{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:aJ++}),this.uuid=q(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=aW.DEFAULT_UP.clone();let a=new V,b=new aH,c=new U,d=new V(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new ax},normalMatrix:{value:new x}}),this.matrix=new ax,this.matrixWorld=new ax,this.matrixAutoUpdate=aW.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=aW.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new aI,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(a){return this.quaternion.premultiply(a),this}setRotationFromAxisAngle(a,b){this.quaternion.setFromAxisAngle(a,b)}setRotationFromEuler(a){this.quaternion.setFromEuler(a,!0)}setRotationFromMatrix(a){this.quaternion.setFromRotationMatrix(a)}setRotationFromQuaternion(a){this.quaternion.copy(a)}rotateOnAxis(a,b){return aL.setFromAxisAngle(a,b),this.quaternion.multiply(aL),this}rotateOnWorldAxis(a,b){return aL.setFromAxisAngle(a,b),this.quaternion.premultiply(aL),this}rotateX(a){return this.rotateOnAxis(aR,a)}rotateY(a){return this.rotateOnAxis(aS,a)}rotateZ(a){return this.rotateOnAxis(aT,a)}translateOnAxis(a,b){return aK.copy(a).applyQuaternion(this.quaternion),this.position.add(aK.multiplyScalar(b)),this}translateX(a){return this.translateOnAxis(aR,a)}translateY(a){return this.translateOnAxis(aS,a)}translateZ(a){return this.translateOnAxis(aT,a)}localToWorld(a){return this.updateWorldMatrix(!0,!1),a.applyMatrix4(this.matrixWorld)}worldToLocal(a){return this.updateWorldMatrix(!0,!1),a.applyMatrix4(aM.copy(this.matrixWorld).invert())}lookAt(a,b,c){a.isVector3?aN.copy(a):aN.set(a,b,c);let d=this.parent;this.updateWorldMatrix(!0,!1),aO.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?aM.lookAt(aO,aN,this.up):aM.lookAt(aN,aO,this.up),this.quaternion.setFromRotationMatrix(aM),d&&(aM.extractRotation(d.matrixWorld),aL.setFromRotationMatrix(aM),this.quaternion.premultiply(aL.invert()))}add(a){if(arguments.length>1){for(let a=0;a<arguments.length;a++)this.add(arguments[a]);return this}return a===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",a):a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(aU)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this}remove(a){if(arguments.length>1){for(let a=0;a<arguments.length;a++)this.remove(arguments[a]);return this}let b=this.children.indexOf(a);return -1!==b&&(a.parent=null,this.children.splice(b,1),a.dispatchEvent(aV)),this}removeFromParent(){let a=this.parent;return null!==a&&a.remove(this),this}clear(){return this.remove(...this.children)}attach(a){return this.updateWorldMatrix(!0,!1),aM.copy(this.matrixWorld).invert(),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),aM.multiply(a.parent.matrixWorld)),a.applyMatrix4(aM),this.add(a),a.updateWorldMatrix(!1,!0),this}getObjectById(a){return this.getObjectByProperty("id",a)}getObjectByName(a){return this.getObjectByProperty("name",a)}getObjectByProperty(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){let d=this.children[c].getObjectByProperty(a,b);if(void 0!==d)return d}}getObjectsByProperty(a,b,c=[]){this[a]===b&&c.push(this);let d=this.children;for(let e=0,f=d.length;e<f;e++)d[e].getObjectsByProperty(a,b,c);return c}getWorldPosition(a){return this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aO,a,aP),a}getWorldScale(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aO,aQ,a),a}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(b[8],b[9],b[10]).normalize()}raycast(){}traverse(a){a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)}traverseVisible(a){if(!1===this.visible)return;a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}traverseAncestors(a){let b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let b=this.children;for(let c=0,d=b.length;c<d;c++){let d=b[c];(!0===d.matrixWorldAutoUpdate||!0===a)&&d.updateMatrixWorld(a)}}updateWorldMatrix(a,b){let c=this.parent;if(!0===a&&null!==c&&!0===c.matrixWorldAutoUpdate&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===b){let a=this.children;for(let b=0,c=a.length;b<c;b++){let c=a[b];!0===c.matrixWorldAutoUpdate&&c.updateWorldMatrix(!1,!0)}}}toJSON(a){let b=void 0===a||"string"==typeof a,c={};b&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},c.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let d={};function e(b,c){return void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a)),c.uuid}if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),!0===this.castShadow&&(d.castShadow=!0),!0===this.receiveShadow&&(d.receiveShadow=!0),!1===this.visible&&(d.visible=!1),!1===this.frustumCulled&&(d.frustumCulled=!1),0!==this.renderOrder&&(d.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(d.userData=this.userData),d.layers=this.layers.mask,d.matrix=this.matrix.toArray(),d.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(d.matrixAutoUpdate=!1),this.isInstancedMesh&&(d.type="InstancedMesh",d.count=this.count,d.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(d.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(d.type="BatchedMesh",d.perObjectFrustumCulled=this.perObjectFrustumCulled,d.sortObjects=this.sortObjects,d.drawRanges=this._drawRanges,d.reservedRanges=this._reservedRanges,d.visibility=this._visibility,d.active=this._active,d.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),d.maxGeometryCount=this._maxGeometryCount,d.maxVertexCount=this._maxVertexCount,d.maxIndexCount=this._maxIndexCount,d.geometryInitialized=this._geometryInitialized,d.geometryCount=this._geometryCount,d.matricesTexture=this._matricesTexture.toJSON(a),null!==this.boundingSphere&&(d.boundingSphere={center:d.boundingSphere.center.toArray(),radius:d.boundingSphere.radius}),null!==this.boundingBox&&(d.boundingBox={min:d.boundingBox.min.toArray(),max:d.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?d.background=this.background.toJSON():this.background.isTexture&&(d.background=this.background.toJSON(a).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(d.environment=this.environment.toJSON(a).uuid);else if(this.isMesh||this.isLine||this.isPoints){d.geometry=e(a.geometries,this.geometry);let b=this.geometry.parameters;if(void 0!==b&&void 0!==b.shapes){let c=b.shapes;if(Array.isArray(c))for(let b=0,d=c.length;b<d;b++){let d=c[b];e(a.shapes,d)}else e(a.shapes,c)}}if(this.isSkinnedMesh&&(d.bindMode=this.bindMode,d.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(a.skeletons,this.skeleton),d.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){let b=[];for(let c=0,d=this.material.length;c<d;c++)b.push(e(a.materials,this.material[c]));d.material=b}else d.material=e(a.materials,this.material);if(this.children.length>0){d.children=[];for(let b=0;b<this.children.length;b++)d.children.push(this.children[b].toJSON(a).object)}if(this.animations.length>0){d.animations=[];for(let b=0;b<this.animations.length;b++){let c=this.animations[b];d.animations.push(e(a.animations,c))}}if(b){let b=f(a.geometries),d=f(a.materials),e=f(a.textures),g=f(a.images),h=f(a.shapes),i=f(a.skeletons),j=f(a.animations),k=f(a.nodes);b.length>0&&(c.geometries=b),d.length>0&&(c.materials=d),e.length>0&&(c.textures=e),g.length>0&&(c.images=g),h.length>0&&(c.shapes=h),i.length>0&&(c.skeletons=i),j.length>0&&(c.animations=j),k.length>0&&(c.nodes=k)}return c.object=d,c;function f(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}}clone(a){return new this.constructor().copy(this,a)}copy(a,b=!0){if(this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldAutoUpdate=a.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.animations=a.animations.slice(),this.userData=JSON.parse(JSON.stringify(a.userData)),!0===b)for(let b=0;b<a.children.length;b++){let c=a.children[b];this.add(c.clone())}return this}}aW.DEFAULT_UP=new V(0,1,0),aW.DEFAULT_MATRIX_AUTO_UPDATE=!0,aW.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let aX=new V,aY=new V,aZ=new V,a$=new V,a_=new V,a0=new V,a1=new V,a2=new V,a3=new V,a4=new V;class a5{constructor(a=new V,b=new V,c=new V){this.a=a,this.b=b,this.c=c}static getNormal(a,b,c,d){d.subVectors(c,b),aX.subVectors(a,b),d.cross(aX);let e=d.lengthSq();return e>0?d.multiplyScalar(1/Math.sqrt(e)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){aX.subVectors(d,b),aY.subVectors(c,b),aZ.subVectors(a,b);let f=aX.dot(aX),g=aX.dot(aY),h=aX.dot(aZ),i=aY.dot(aY),j=aY.dot(aZ),k=f*i-g*g;if(0===k)return e.set(0,0,0),null;let l=1/k,m=(i*h-g*j)*l,n=(f*j-g*h)*l;return e.set(1-m-n,n,m)}static containsPoint(a,b,c,d){return null!==this.getBarycoord(a,b,c,d,a$)&&a$.x>=0&&a$.y>=0&&a$.x+a$.y<=1}static getInterpolation(a,b,c,d,e,f,g,h){return null===this.getBarycoord(a,b,c,d,a$)?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(e,a$.x),h.addScaledVector(f,a$.y),h.addScaledVector(g,a$.z),h)}static isFrontFacing(a,b,c,d){return aX.subVectors(c,b),aY.subVectors(a,b),0>aX.cross(aY).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}setFromAttributeAndIndices(a,b,c,d){return this.a.fromBufferAttribute(a,b),this.b.fromBufferAttribute(a,c),this.c.fromBufferAttribute(a,d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return aX.subVectors(this.c,this.b),aY.subVectors(this.a,this.b),.5*aX.cross(aY).length()}getMidpoint(a){return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return a5.getNormal(this.a,this.b,this.c,a)}getPlane(a){return a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return a5.getBarycoord(a,this.a,this.b,this.c,b)}getInterpolation(a,b,c,d,e){return a5.getInterpolation(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return a5.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return a5.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,b){let c,d,e=this.a,f=this.b,g=this.c;a_.subVectors(f,e),a0.subVectors(g,e),a2.subVectors(a,e);let h=a_.dot(a2),i=a0.dot(a2);if(h<=0&&i<=0)return b.copy(e);a3.subVectors(a,f);let j=a_.dot(a3),k=a0.dot(a3);if(j>=0&&k<=j)return b.copy(f);let l=h*k-j*i;if(l<=0&&h>=0&&j<=0)return c=h/(h-j),b.copy(e).addScaledVector(a_,c);a4.subVectors(a,g);let m=a_.dot(a4),n=a0.dot(a4);if(n>=0&&m<=n)return b.copy(g);let o=m*i-h*n;if(o<=0&&i>=0&&n<=0)return d=i/(i-n),b.copy(e).addScaledVector(a0,d);let p=j*n-m*k;if(p<=0&&k-j>=0&&m-n>=0)return a1.subVectors(g,f),d=(k-j)/(k-j+(m-n)),b.copy(f).addScaledVector(a1,d);let q=1/(p+o+l);return c=o*q,d=l*q,b.copy(e).addScaledVector(a_,c).addScaledVector(a0,d)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let a6={aliceblue:0xf0f8ff,antiquewhite:0xfaebd7,aqua:65535,aquamarine:8388564,azure:0xf0ffff,beige:0xf5f5dc,bisque:0xffe4c4,black:0,blanchedalmond:0xffebcd,blue:255,blueviolet:9055202,brown:0xa52a2a,burlywood:0xdeb887,cadetblue:6266528,chartreuse:8388352,chocolate:0xd2691e,coral:0xff7f50,cornflowerblue:6591981,cornsilk:0xfff8dc,crimson:0xdc143c,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:0xb8860b,darkgray:0xa9a9a9,darkgreen:25600,darkgrey:0xa9a9a9,darkkhaki:0xbdb76b,darkmagenta:9109643,darkolivegreen:5597999,darkorange:0xff8c00,darkorchid:0x9932cc,darkred:9109504,darksalmon:0xe9967a,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:0xff1493,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:0xb22222,floralwhite:0xfffaf0,forestgreen:2263842,fuchsia:0xff00ff,gainsboro:0xdcdcdc,ghostwhite:0xf8f8ff,gold:0xffd700,goldenrod:0xdaa520,gray:8421504,green:32768,greenyellow:0xadff2f,grey:8421504,honeydew:0xf0fff0,hotpink:0xff69b4,indianred:0xcd5c5c,indigo:4915330,ivory:0xfffff0,khaki:0xf0e68c,lavender:0xe6e6fa,lavenderblush:0xfff0f5,lawngreen:8190976,lemonchiffon:0xfffacd,lightblue:0xadd8e6,lightcoral:0xf08080,lightcyan:0xe0ffff,lightgoldenrodyellow:0xfafad2,lightgray:0xd3d3d3,lightgreen:9498256,lightgrey:0xd3d3d3,lightpink:0xffb6c1,lightsalmon:0xffa07a,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:0xb0c4de,lightyellow:0xffffe0,lime:65280,limegreen:3329330,linen:0xfaf0e6,magenta:0xff00ff,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:0xba55d3,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:0xc71585,midnightblue:1644912,mintcream:0xf5fffa,mistyrose:0xffe4e1,moccasin:0xffe4b5,navajowhite:0xffdead,navy:128,oldlace:0xfdf5e6,olive:8421376,olivedrab:7048739,orange:0xffa500,orangered:0xff4500,orchid:0xda70d6,palegoldenrod:0xeee8aa,palegreen:0x98fb98,paleturquoise:0xafeeee,palevioletred:0xdb7093,papayawhip:0xffefd5,peachpuff:0xffdab9,peru:0xcd853f,pink:0xffc0cb,plum:0xdda0dd,powderblue:0xb0e0e6,purple:8388736,rebeccapurple:6697881,red:0xff0000,rosybrown:0xbc8f8f,royalblue:4286945,saddlebrown:9127187,salmon:0xfa8072,sandybrown:0xf4a460,seagreen:3050327,seashell:0xfff5ee,sienna:0xa0522d,silver:0xc0c0c0,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:0xfffafa,springgreen:65407,steelblue:4620980,tan:0xd2b48c,teal:32896,thistle:0xd8bfd8,tomato:0xff6347,turquoise:4251856,violet:0xee82ee,wheat:0xf5deb3,white:0xffffff,whitesmoke:0xf5f5f5,yellow:0xffff00,yellowgreen:0x9acd32},a7={h:0,s:0,l:0},a8={h:0,s:0,l:0};function a9(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*6*(2/3-c):a}class ba{constructor(a,b,c){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(a,b,c)}set(a,b,c){return void 0===b&&void 0===c?a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a):this.setRGB(a,b,c),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a,b=e){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,H.toWorkingColorSpace(this,b),this}setRGB(a,b,c,d=H.workingColorSpace){return this.r=a,this.g=b,this.b=c,H.toWorkingColorSpace(this,d),this}setHSL(a,b,c,d=H.workingColorSpace){if(a=(a%1+1)%1,b=r(b,0,1),c=r(c,0,1),0===b)this.r=this.g=this.b=c;else{let d=c<=.5?c*(1+b):c+b-c*b,e=2*c-d;this.r=a9(e,d,a+1/3),this.g=a9(e,d,a),this.b=a9(e,d,a-1/3)}return H.toWorkingColorSpace(this,d),this}setStyle(a,b=e){let c;function d(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}if(c=/^(\w+)\(([^\)]*)\)/.exec(a)){let e,f=c[1],g=c[2];switch(f){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return d(e[4]),this.setRGB(Math.min(255,parseInt(e[1],10))/255,Math.min(255,parseInt(e[2],10))/255,Math.min(255,parseInt(e[3],10))/255,b);if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return d(e[4]),this.setRGB(Math.min(100,parseInt(e[1],10))/100,Math.min(100,parseInt(e[2],10))/100,Math.min(100,parseInt(e[3],10))/100,b);break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return d(e[4]),this.setHSL(parseFloat(e[1])/360,parseFloat(e[2])/100,parseFloat(e[3])/100,b);break;default:console.warn("THREE.Color: Unknown color model "+a)}}else if(c=/^\#([A-Fa-f\d]+)$/.exec(a)){let d=c[1],e=d.length;if(3===e)return this.setRGB(parseInt(d.charAt(0),16)/15,parseInt(d.charAt(1),16)/15,parseInt(d.charAt(2),16)/15,b);if(6===e)return this.setHex(parseInt(d,16),b);console.warn("THREE.Color: Invalid hex color "+a)}else if(a&&a.length>0)return this.setColorName(a,b);return this}setColorName(a,b=e){let c=a6[a.toLowerCase()];return void 0!==c?this.setHex(c,b):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copySRGBToLinear(a){return this.r=I(a.r),this.g=I(a.g),this.b=I(a.b),this}copyLinearToSRGB(a){return this.r=J(a.r),this.g=J(a.g),this.b=J(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(a=e){return H.fromWorkingColorSpace(bb.copy(this),a),65536*Math.round(r(255*bb.r,0,255))+256*Math.round(r(255*bb.g,0,255))+Math.round(r(255*bb.b,0,255))}getHexString(a=e){return("000000"+this.getHex(a).toString(16)).slice(-6)}getHSL(a,b=H.workingColorSpace){let c,d;H.fromWorkingColorSpace(bb.copy(this),b);let e=bb.r,f=bb.g,g=bb.b,h=Math.max(e,f,g),i=Math.min(e,f,g),j=(i+h)/2;if(i===h)c=0,d=0;else{let a=h-i;switch(d=j<=.5?a/(h+i):a/(2-h-i),h){case e:c=(f-g)/a+6*(f<g);break;case f:c=(g-e)/a+2;break;case g:c=(e-f)/a+4}c/=6}return a.h=c,a.s=d,a.l=j,a}getRGB(a,b=H.workingColorSpace){return H.fromWorkingColorSpace(bb.copy(this),b),a.r=bb.r,a.g=bb.g,a.b=bb.b,a}getStyle(a=e){H.fromWorkingColorSpace(bb.copy(this),a);let b=bb.r,c=bb.g,d=bb.b;return a!==e?`color(${a} ${b.toFixed(3)} ${c.toFixed(3)} ${d.toFixed(3)})`:`rgb(${Math.round(255*b)},${Math.round(255*c)},${Math.round(255*d)})`}offsetHSL(a,b,c){return this.getHSL(a7),this.setHSL(a7.h+a,a7.s+b,a7.l+c)}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpColors(a,b,c){return this.r=a.r+(b.r-a.r)*c,this.g=a.g+(b.g-a.g)*c,this.b=a.b+(b.b-a.b)*c,this}lerpHSL(a,b){var c,d,e;this.getHSL(a7),a.getHSL(a8);let f=(c=a7.h,(1-b)*c+b*a8.h),g=(d=a7.s,(1-b)*d+b*a8.s),h=(e=a7.l,(1-b)*e+b*a8.l);return this.setHSL(f,g,h),this}setFromVector3(a){return this.r=a.x,this.g=a.y,this.b=a.z,this}applyMatrix3(a){let b=this.r,c=this.g,d=this.b,e=a.elements;return this.r=e[0]*b+e[3]*c+e[6]*d,this.g=e[1]*b+e[4]*c+e[7]*d,this.b=e[2]*b+e[5]*c+e[8]*d,this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b=0){return this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a=[],b=0){return a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let bb=new ba;ba.NAMES=a6;let bc=0;class bd extends m{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:bc++}),this.uuid=q(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ba(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(a){this._alphaTest>0!=a>0&&this.version++,this._alphaTest=a}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(a){if(void 0!==a)for(let b in a){let c=a[b];if(void 0===c){console.warn(`THREE.Material: parameter '${b}' has value of undefined.`);continue}let d=this[b];if(void 0===d){console.warn(`THREE.Material: '${b}' is not a property of THREE.${this.type}.`);continue}d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}}toJSON(a){let b=void 0===a||"string"==typeof a;b&&(a={textures:{},images:{}});let c={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),void 0!==this.sheen&&(c.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(c.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(c.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(c.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(c.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(c.clearcoatMap=this.clearcoatMap.toJSON(a).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(c.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(a).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(c.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(c.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(c.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(c.iridescenceMap=this.iridescenceMap.toJSON(a).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(c.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(a).uuid),void 0!==this.anisotropy&&(c.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(c.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(c.anisotropyMap=this.anisotropyMap.toJSON(a).uuid),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid,c.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(c.specularIntensityMap=this.specularIntensityMap.toJSON(a).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(c.specularColorMap=this.specularColorMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,void 0!==this.combine&&(c.combine=this.combine)),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(c.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(c.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.transmission&&(c.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(c.transmissionMap=this.transmissionMap.toJSON(a).uuid),void 0!==this.thickness&&(c.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(c.thicknessMap=this.thicknessMap.toJSON(a).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(c.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(c.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(c.size=this.size),null!==this.shadowSide&&(c.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(c.blending=this.blending),0!==this.side&&(c.side=this.side),!0===this.vertexColors&&(c.vertexColors=!0),this.opacity<1&&(c.opacity=this.opacity),!0===this.transparent&&(c.transparent=!0),204!==this.blendSrc&&(c.blendSrc=this.blendSrc),205!==this.blendDst&&(c.blendDst=this.blendDst),100!==this.blendEquation&&(c.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(c.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(c.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(c.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(c.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(c.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(c.depthFunc=this.depthFunc),!1===this.depthTest&&(c.depthTest=this.depthTest),!1===this.depthWrite&&(c.depthWrite=this.depthWrite),!1===this.colorWrite&&(c.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(c.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(c.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(c.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(c.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(c.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(c.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(c.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(c.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.alphaHash&&(c.alphaHash=!0),!0===this.alphaToCoverage&&(c.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=!0),!0===this.forceSinglePass&&(c.forceSinglePass=!0),!0===this.wireframe&&(c.wireframe=!0),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(c.flatShading=!0),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),!1===this.fog&&(c.fog=!1),Object.keys(this.userData).length>0&&(c.userData=this.userData),b){let b=d(a.textures),e=d(a.images);b.length>0&&(c.textures=b),e.length>0&&(c.images=e)}return c}clone(){return new this.constructor().copy(this)}copy(a){this.name=a.name,this.blending=a.blending,this.side=a.side,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.blendColor.copy(a.blendColor),this.blendAlpha=a.blendAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let b=a.clippingPlanes,c=null;if(null!==b){let a=b.length;c=Array(a);for(let d=0;d!==a;++d)c[d]=b[d].clone()}return this.clippingPlanes=c,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.alphaHash=a.alphaHash,this.alphaToCoverage=a.alphaToCoverage,this.premultipliedAlpha=a.premultipliedAlpha,this.forceSinglePass=a.forceSinglePass,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(a){!0===a&&this.version++}}class be extends bd{constructor(a){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ba(0xffffff),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}let bf=new V,bg=new w;class bh{constructor(a,b,c=!1){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=c,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}get updateRange(){return C("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(a){return this.usage=a,this}addUpdateRange(a,b){this.updateRanges.push({start:a,count:b})}clearUpdateRanges(){this.updateRanges.length=0}copy(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this.gpuType=a.gpuType,this}copyAt(a,b,c){a*=this.itemSize,c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this}copyArray(a){return this.array.set(a),this}applyMatrix3(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)bg.fromBufferAttribute(this,b),bg.applyMatrix3(a),this.setXY(b,bg.x,bg.y);else if(3===this.itemSize)for(let b=0,c=this.count;b<c;b++)bf.fromBufferAttribute(this,b),bf.applyMatrix3(a),this.setXYZ(b,bf.x,bf.y,bf.z);return this}applyMatrix4(a){for(let b=0,c=this.count;b<c;b++)bf.fromBufferAttribute(this,b),bf.applyMatrix4(a),this.setXYZ(b,bf.x,bf.y,bf.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)bf.fromBufferAttribute(this,b),bf.applyNormalMatrix(a),this.setXYZ(b,bf.x,bf.y,bf.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)bf.fromBufferAttribute(this,b),bf.transformDirection(a),this.setXYZ(b,bf.x,bf.y,bf.z);return this}set(a,b=0){return this.array.set(a,b),this}getComponent(a,b){let c=this.array[a*this.itemSize+b];return this.normalized&&(c=u(c,this.array)),c}setComponent(a,b,c){return this.normalized&&(c=v(c,this.array)),this.array[a*this.itemSize+b]=c,this}getX(a){let b=this.array[a*this.itemSize];return this.normalized&&(b=u(b,this.array)),b}setX(a,b){return this.normalized&&(b=v(b,this.array)),this.array[a*this.itemSize]=b,this}getY(a){let b=this.array[a*this.itemSize+1];return this.normalized&&(b=u(b,this.array)),b}setY(a,b){return this.normalized&&(b=v(b,this.array)),this.array[a*this.itemSize+1]=b,this}getZ(a){let b=this.array[a*this.itemSize+2];return this.normalized&&(b=u(b,this.array)),b}setZ(a,b){return this.normalized&&(b=v(b,this.array)),this.array[a*this.itemSize+2]=b,this}getW(a){let b=this.array[a*this.itemSize+3];return this.normalized&&(b=u(b,this.array)),b}setW(a,b){return this.normalized&&(b=v(b,this.array)),this.array[a*this.itemSize+3]=b,this}setXY(a,b,c){return a*=this.itemSize,this.normalized&&(b=v(b,this.array),c=v(c,this.array)),this.array[a+0]=b,this.array[a+1]=c,this}setXYZ(a,b,c,d){return a*=this.itemSize,this.normalized&&(b=v(b,this.array),c=v(c,this.array),d=v(d,this.array)),this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a*=this.itemSize,this.normalized&&(b=v(b,this.array),c=v(c,this.array),d=v(d,this.array),e=v(e,this.array)),this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this}onUpload(a){return this.onUploadCallback=a,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let a={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(a.name=this.name),35044!==this.usage&&(a.usage=this.usage),a}}class bi extends bh{constructor(a,b,c){super(new Uint16Array(a),b,c)}}class bj extends bh{constructor(a,b,c){super(new Uint32Array(a),b,c)}}class bk extends bh{constructor(a,b,c){super(new Float32Array(a),b,c)}}let bl=0,bm=new ax,bn=new aW,bo=new V,bp=new Y,bq=new Y,br=new V;class bs extends m{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:bl++}),this.uuid=q(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(a){return Array.isArray(a)?this.index=new(z(a)?bj:bi)(a,1):this.index=a,this}getAttribute(a){return this.attributes[a]}setAttribute(a,b){return this.attributes[a]=b,this}deleteAttribute(a){return delete this.attributes[a],this}hasAttribute(a){return void 0!==this.attributes[a]}addGroup(a,b,c=0){this.groups.push({start:a,count:b,materialIndex:c})}clearGroups(){this.groups=[]}setDrawRange(a,b){this.drawRange.start=a,this.drawRange.count=b}applyMatrix4(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let b=new x().getNormalMatrix(a);c.applyNormalMatrix(b),c.needsUpdate=!0}let d=this.attributes.tangent;return void 0!==d&&(d.transformDirection(a),d.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(a){return bm.makeRotationFromQuaternion(a),this.applyMatrix4(bm),this}rotateX(a){return bm.makeRotationX(a),this.applyMatrix4(bm),this}rotateY(a){return bm.makeRotationY(a),this.applyMatrix4(bm),this}rotateZ(a){return bm.makeRotationZ(a),this.applyMatrix4(bm),this}translate(a,b,c){return bm.makeTranslation(a,b,c),this.applyMatrix4(bm),this}scale(a,b,c){return bm.makeScale(a,b,c),this.applyMatrix4(bm),this}lookAt(a){return bn.lookAt(a),bn.updateMatrix(),this.applyMatrix4(bn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(bo).negate(),this.translate(bo.x,bo.y,bo.z),this}setFromPoints(a){let b=[];for(let c=0,d=a.length;c<d;c++){let d=a[c];b.push(d.x,d.y,d.z||0)}return this.setAttribute("position",new bk(b,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Y);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(Infinity,Infinity,Infinity));return}if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let a=0,c=b.length;a<c;a++){let c=b[a];bp.setFromBufferAttribute(c),this.morphTargetsRelative?(br.addVectors(this.boundingBox.min,bp.min),this.boundingBox.expandByPoint(br),br.addVectors(this.boundingBox.max,bp.max),this.boundingBox.expandByPoint(br)):(this.boundingBox.expandByPoint(bp.min),this.boundingBox.expandByPoint(bp.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ao);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new V,1/0);return}if(a){let c=this.boundingSphere.center;if(bp.setFromBufferAttribute(a),b)for(let a=0,c=b.length;a<c;a++){let c=b[a];bq.setFromBufferAttribute(c),this.morphTargetsRelative?(br.addVectors(bp.min,bq.min),bp.expandByPoint(br),br.addVectors(bp.max,bq.max),bp.expandByPoint(br)):(bp.expandByPoint(bq.min),bp.expandByPoint(bq.max))}bp.getCenter(c);let d=0;for(let b=0,e=a.count;b<e;b++)br.fromBufferAttribute(a,b),d=Math.max(d,c.distanceToSquared(br));if(b)for(let e=0,f=b.length;e<f;e++){let f=b[e],g=this.morphTargetsRelative;for(let b=0,e=f.count;b<e;b++)br.fromBufferAttribute(f,b),g&&(bo.fromBufferAttribute(a,b),br.add(bo)),d=Math.max(d,c.distanceToSquared(br))}this.boundingSphere.radius=Math.sqrt(d),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let a=this.index,b=this.attributes;if(null===a||void 0===b.position||void 0===b.normal||void 0===b.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");let c=a.array,d=b.position.array,e=b.normal.array,f=b.uv.array,g=d.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new bh(new Float32Array(4*g),4));let h=this.getAttribute("tangent").array,i=[],j=[];for(let a=0;a<g;a++)i[a]=new V,j[a]=new V;let k=new V,l=new V,m=new V,n=new w,o=new w,p=new w,q=new V,r=new V,s=this.groups;0===s.length&&(s=[{start:0,count:c.length}]);for(let a=0,b=s.length;a<b;++a){let b=s[a],e=b.start,g=b.count;for(let a=e,b=e+g;a<b;a+=3)!function(a,b,c){k.fromArray(d,3*a),l.fromArray(d,3*b),m.fromArray(d,3*c),n.fromArray(f,2*a),o.fromArray(f,2*b),p.fromArray(f,2*c),l.sub(k),m.sub(k),o.sub(n),p.sub(n);let e=1/(o.x*p.y-p.x*o.y);isFinite(e)&&(q.copy(l).multiplyScalar(p.y).addScaledVector(m,-o.y).multiplyScalar(e),r.copy(m).multiplyScalar(o.x).addScaledVector(l,-p.x).multiplyScalar(e),i[a].add(q),i[b].add(q),i[c].add(q),j[a].add(r),j[b].add(r),j[c].add(r))}(c[a+0],c[a+1],c[a+2])}let t=new V,u=new V,v=new V,x=new V;function y(a){v.fromArray(e,3*a),x.copy(v);let b=i[a];t.copy(b),t.sub(v.multiplyScalar(v.dot(b))).normalize(),u.crossVectors(x,b);let c=u.dot(j[a]);h[4*a]=t.x,h[4*a+1]=t.y,h[4*a+2]=t.z,h[4*a+3]=c<0?-1:1}for(let a=0,b=s.length;a<b;++a){let b=s[a],d=b.start,e=b.count;for(let a=d,b=d+e;a<b;a+=3)y(c[a+0]),y(c[a+1]),y(c[a+2])}}computeVertexNormals(){let a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new bh(new Float32Array(3*b.count),3),this.setAttribute("normal",c);else for(let a=0,b=c.count;a<b;a++)c.setXYZ(a,0,0,0);let d=new V,e=new V,f=new V,g=new V,h=new V,i=new V,j=new V,k=new V;if(a)for(let l=0,m=a.count;l<m;l+=3){let m=a.getX(l+0),n=a.getX(l+1),o=a.getX(l+2);d.fromBufferAttribute(b,m),e.fromBufferAttribute(b,n),f.fromBufferAttribute(b,o),j.subVectors(f,e),k.subVectors(d,e),j.cross(k),g.fromBufferAttribute(c,m),h.fromBufferAttribute(c,n),i.fromBufferAttribute(c,o),g.add(j),h.add(j),i.add(j),c.setXYZ(m,g.x,g.y,g.z),c.setXYZ(n,h.x,h.y,h.z),c.setXYZ(o,i.x,i.y,i.z)}else for(let a=0,g=b.count;a<g;a+=3)d.fromBufferAttribute(b,a+0),e.fromBufferAttribute(b,a+1),f.fromBufferAttribute(b,a+2),j.subVectors(f,e),k.subVectors(d,e),j.cross(k),c.setXYZ(a+0,j.x,j.y,j.z),c.setXYZ(a+1,j.x,j.y,j.z),c.setXYZ(a+2,j.x,j.y,j.z);this.normalizeNormals(),c.needsUpdate=!0}}normalizeNormals(){let a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)br.fromBufferAttribute(a,b),br.normalize(),a.setXYZ(b,br.x,br.y,br.z)}toNonIndexed(){function a(a,b){let c=a.array,d=a.itemSize,e=a.normalized,f=new c.constructor(b.length*d),g=0,h=0;for(let e=0,i=b.length;e<i;e++){g=a.isInterleavedBufferAttribute?b[e]*a.data.stride+a.offset:b[e]*d;for(let a=0;a<d;a++)f[h++]=c[g++]}return new bh(f,d,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let b=new bs,c=this.index.array,d=this.attributes;for(let e in d){let f=a(d[e],c);b.setAttribute(e,f)}let e=this.morphAttributes;for(let d in e){let f=[],g=e[d];for(let b=0,d=g.length;b<d;b++){let d=a(g[b],c);f.push(d)}b.morphAttributes[d]=f}b.morphTargetsRelative=this.morphTargetsRelative;let f=this.groups;for(let a=0,c=f.length;a<c;a++){let c=f[a];b.addGroup(c.start,c.count,c.materialIndex)}return b}toJSON(){let a={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let b=this.index;null!==b&&(a.data.index={type:b.array.constructor.name,array:Array.prototype.slice.call(b.array)});let c=this.attributes;for(let b in c){let d=c[b];a.data.attributes[b]=d.toJSON(a.data)}let d={},e=!1;for(let b in this.morphAttributes){let c=this.morphAttributes[b],f=[];for(let b=0,d=c.length;b<d;b++){let d=c[b];f.push(d.toJSON(a.data))}f.length>0&&(d[b]=f,e=!0)}e&&(a.data.morphAttributes=d,a.data.morphTargetsRelative=this.morphTargetsRelative);let f=this.groups;f.length>0&&(a.data.groups=JSON.parse(JSON.stringify(f)));let g=this.boundingSphere;return null!==g&&(a.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),a}clone(){return new this.constructor().copy(this)}copy(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let c=a.index;null!==c&&this.setIndex(c.clone(b));let d=a.attributes;for(let a in d){let c=d[a];this.setAttribute(a,c.clone(b))}let e=a.morphAttributes;for(let a in e){let c=[],d=e[a];for(let a=0,e=d.length;a<e;a++)c.push(d[a].clone(b));this.morphAttributes[a]=c}this.morphTargetsRelative=a.morphTargetsRelative;let f=a.groups;for(let a=0,b=f.length;a<b;a++){let b=f[a];this.addGroup(b.start,b.count,b.materialIndex)}let g=a.boundingBox;null!==g&&(this.boundingBox=g.clone());let h=a.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}let bt=new ax,bu=new aw,bv=new ao,bw=new V,bx=new V,by=new V,bz=new V,bA=new V,bB=new V,bC=new w,bD=new w,bE=new w,bF=new V,bG=new V,bH=new V,bI=new V,bJ=new V;class bK extends aW{constructor(a=new bs,b=new be){super(),this.isMesh=!0,this.type="Mesh",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=Array.isArray(a.material)?a.material.slice():a.material,this.geometry=a.geometry,this}updateMorphTargets(){let a=this.geometry.morphAttributes,b=Object.keys(a);if(b.length>0){let c=a[b[0]];if(void 0!==c){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,b=c.length;a<b;a++){let b=c[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[b]=a}}}}getVertexPosition(a,b){let c=this.geometry,d=c.attributes.position,e=c.morphAttributes.position,f=c.morphTargetsRelative;b.fromBufferAttribute(d,a);let g=this.morphTargetInfluences;if(e&&g){bB.set(0,0,0);for(let c=0,d=e.length;c<d;c++){let d=g[c],h=e[c];0!==d&&(bA.fromBufferAttribute(h,a),f?bB.addScaledVector(bA,d):bB.addScaledVector(bA.sub(b),d))}b.add(bB)}return b}raycast(a,b){let c=this.geometry,d=this.material,e=this.matrixWorld;if(void 0!==d)null===c.boundingSphere&&c.computeBoundingSphere(),bv.copy(c.boundingSphere),bv.applyMatrix4(e),bu.copy(a.ray).recast(a.near),!1===bv.containsPoint(bu.origin)&&(null===bu.intersectSphere(bv,bw)||bu.origin.distanceToSquared(bw)>(a.far-a.near)**2)||(bt.copy(e).invert(),bu.copy(a.ray).applyMatrix4(bt),(null===c.boundingBox||!1!==bu.intersectsBox(c.boundingBox))&&this._computeIntersections(a,b,bu))}_computeIntersections(a,b,c){let d,e=this.geometry,f=this.material,g=e.index,h=e.attributes.position,i=e.attributes.uv,j=e.attributes.uv1,k=e.attributes.normal,l=e.groups,m=e.drawRange;if(null!==g)if(Array.isArray(f))for(let e=0,h=l.length;e<h;e++){let h=l[e],n=f[h.materialIndex],o=Math.max(h.start,m.start),p=Math.min(g.count,Math.min(h.start+h.count,m.start+m.count));for(let e=o;e<p;e+=3){let f=g.getX(e);(d=bL(this,n,a,c,i,j,k,f,g.getX(e+1),g.getX(e+2)))&&(d.faceIndex=Math.floor(e/3),d.face.materialIndex=h.materialIndex,b.push(d))}}else{let e=Math.max(0,m.start),h=Math.min(g.count,m.start+m.count);for(let l=e;l<h;l+=3){let e=g.getX(l);(d=bL(this,f,a,c,i,j,k,e,g.getX(l+1),g.getX(l+2)))&&(d.faceIndex=Math.floor(l/3),b.push(d))}}else if(void 0!==h)if(Array.isArray(f))for(let e=0,g=l.length;e<g;e++){let g=l[e],n=f[g.materialIndex],o=Math.max(g.start,m.start),p=Math.min(h.count,Math.min(g.start+g.count,m.start+m.count));for(let e=o;e<p;e+=3)(d=bL(this,n,a,c,i,j,k,e,e+1,e+2))&&(d.faceIndex=Math.floor(e/3),d.face.materialIndex=g.materialIndex,b.push(d))}else{let e=Math.max(0,m.start),g=Math.min(h.count,m.start+m.count);for(let h=e;h<g;h+=3)(d=bL(this,f,a,c,i,j,k,h,h+1,h+2))&&(d.faceIndex=Math.floor(h/3),b.push(d))}}}function bL(a,b,c,d,e,f,g,h,i,j){a.getVertexPosition(h,bx),a.getVertexPosition(i,by),a.getVertexPosition(j,bz);let k=function(a,b,c,d,e,f,g,h){if(null===(1===b.side?d.intersectTriangle(g,f,e,!0,h):d.intersectTriangle(e,f,g,0===b.side,h)))return null;bJ.copy(h),bJ.applyMatrix4(a.matrixWorld);let i=c.ray.origin.distanceTo(bJ);return i<c.near||i>c.far?null:{distance:i,point:bJ.clone(),object:a}}(a,b,c,d,bx,by,bz,bI);if(k){e&&(bC.fromBufferAttribute(e,h),bD.fromBufferAttribute(e,i),bE.fromBufferAttribute(e,j),k.uv=a5.getInterpolation(bI,bx,by,bz,bC,bD,bE,new w)),f&&(bC.fromBufferAttribute(f,h),bD.fromBufferAttribute(f,i),bE.fromBufferAttribute(f,j),k.uv1=a5.getInterpolation(bI,bx,by,bz,bC,bD,bE,new w),k.uv2=k.uv1),g&&(bF.fromBufferAttribute(g,h),bG.fromBufferAttribute(g,i),bH.fromBufferAttribute(g,j),k.normal=a5.getInterpolation(bI,bx,by,bz,bF,bG,bH,new V),k.normal.dot(d.direction)>0&&k.normal.multiplyScalar(-1));let a={a:h,b:i,c:j,normal:new V,materialIndex:0};a5.getNormal(bx,by,bz,a.normal),k.face=a}return k}class bM extends bs{constructor(a=1,b=1,c=1,d=1,e=1,f=1){super(),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};let g=this;d=Math.floor(d),e=Math.floor(e);let h=[],i=[],j=[],k=[],l=0,m=0;function n(a,b,c,d,e,f,n,o,p,q,r){let s=f/p,t=n/q,u=f/2,v=n/2,w=o/2,x=p+1,y=q+1,z=0,A=0,B=new V;for(let f=0;f<y;f++){let g=f*t-v;for(let h=0;h<x;h++){let l=h*s-u;B[a]=l*d,B[b]=g*e,B[c]=w,i.push(B.x,B.y,B.z),B[a]=0,B[b]=0,B[c]=o>0?1:-1,j.push(B.x,B.y,B.z),k.push(h/p),k.push(1-f/q),z+=1}}for(let a=0;a<q;a++)for(let b=0;b<p;b++){let c=l+b+x*a,d=l+b+x*(a+1),e=l+(b+1)+x*(a+1),f=l+(b+1)+x*a;h.push(c,d,f),h.push(d,e,f),A+=6}g.addGroup(m,A,r),m+=A,l+=z}n("z","y","x",-1,-1,c,b,a,f=Math.floor(f),e,0),n("z","y","x",1,-1,c,b,-a,f,e,1),n("x","z","y",1,1,a,c,b,d,f,2),n("x","z","y",1,-1,a,c,-b,d,f,3),n("x","y","z",1,-1,a,b,c,d,e,4),n("x","y","z",-1,-1,a,b,-c,d,e,5),this.setIndex(h),this.setAttribute("position",new bk(i,3)),this.setAttribute("normal",new bk(j,3)),this.setAttribute("uv",new bk(k,2))}copy(a){return super.copy(a),this.parameters=Object.assign({},a.parameters),this}static fromJSON(a){return new bM(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)}}function bN(a){let b={};for(let c in a)for(let d in b[c]={},a[c]){let e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture||e.isQuaternion)?e.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),b[c][d]=null):b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}return b}function bO(a){let b={};for(let c=0;c<a.length;c++){let d=bN(a[c]);for(let a in d)b[a]=d[a]}return b}function bP(a){return null===a.getRenderTarget()?a.outputColorSpace:H.workingColorSpace}let bQ={clone:bN};class bR extends bd{constructor(a){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&this.setValues(a)}copy(a){return super.copy(a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=bN(a.uniforms),this.uniformsGroups=function(a){let b=[];for(let c=0;c<a.length;c++)b.push(a[c].clone());return b}(a.uniformsGroups),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.fog=a.fog,this.lights=a.lights,this.clipping=a.clipping,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this}toJSON(a){let b=super.toJSON(a);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let d=this.uniforms[c].value;d&&d.isTexture?b.uniforms[c]={type:"t",value:d.toJSON(a).uuid}:d&&d.isColor?b.uniforms[c]={type:"c",value:d.getHex()}:d&&d.isVector2?b.uniforms[c]={type:"v2",value:d.toArray()}:d&&d.isVector3?b.uniforms[c]={type:"v3",value:d.toArray()}:d&&d.isVector4?b.uniforms[c]={type:"v4",value:d.toArray()}:d&&d.isMatrix3?b.uniforms[c]={type:"m3",value:d.toArray()}:d&&d.isMatrix4?b.uniforms[c]={type:"m4",value:d.toArray()}:b.uniforms[c]={value:d}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader,b.lights=this.lights,b.clipping=this.clipping;let c={};for(let a in this.extensions)!0===this.extensions[a]&&(c[a]=!0);return Object.keys(c).length>0&&(b.extensions=c),b}}class bS extends aW{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ax,this.projectionMatrix=new ax,this.projectionMatrixInverse=new ax,this.coordinateSystem=2e3}copy(a,b){return super.copy(a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this.coordinateSystem=a.coordinateSystem,this}getWorldDirection(a){return super.getWorldDirection(a).negate()}updateMatrixWorld(a){super.updateMatrixWorld(a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(a,b){super.updateWorldMatrix(a,b),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}let bT=new V,bU=new w,bV=new w;class bW extends bS{constructor(a=50,b=1,c=.1,d=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=a,this.zoom=1,this.near=c,this.far=d,this.focus=10,this.aspect=b,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this}setFocalLength(a){let b=.5*this.getFilmHeight()/a;this.fov=2*p*Math.atan(b),this.updateProjectionMatrix()}getFocalLength(){let a=Math.tan(.5*o*this.fov);return .5*this.getFilmHeight()/a}getEffectiveFOV(){return 2*p*Math.atan(Math.tan(.5*o*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(a,b,c){bT.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),b.set(bT.x,bT.y).multiplyScalar(-a/bT.z),bT.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),c.set(bT.x,bT.y).multiplyScalar(-a/bT.z)}getViewSize(a,b){return this.getViewBounds(a,bU,bV),b.subVectors(bV,bU)}setViewOffset(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=this.near,b=a*Math.tan(.5*o*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled){let a=f.fullWidth,g=f.fullHeight;e+=f.offsetX*d/a,b-=f.offsetY*c/g,d*=f.width/a,c*=f.height/g}let g=this.filmOffset;0!==g&&(e+=a*g/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.fov=this.fov,b.object.zoom=this.zoom,b.object.near=this.near,b.object.far=this.far,b.object.focus=this.focus,b.object.aspect=this.aspect,null!==this.view&&(b.object.view=Object.assign({},this.view)),b.object.filmGauge=this.filmGauge,b.object.filmOffset=this.filmOffset,b}}class bX extends aW{constructor(a,b,c){super(),this.type="CubeCamera",this.renderTarget=c,this.coordinateSystem=null,this.activeMipmapLevel=0;let d=new bW(-90,1,a,b);d.layers=this.layers,this.add(d);let e=new bW(-90,1,a,b);e.layers=this.layers,this.add(e);let f=new bW(-90,1,a,b);f.layers=this.layers,this.add(f);let g=new bW(-90,1,a,b);g.layers=this.layers,this.add(g);let h=new bW(-90,1,a,b);h.layers=this.layers,this.add(h);let i=new bW(-90,1,a,b);i.layers=this.layers,this.add(i)}updateCoordinateSystem(){let a=this.coordinateSystem,b=this.children.concat(),[c,d,e,f,g,h]=b;for(let a of b)this.remove(a);if(2e3===a)c.up.set(0,1,0),c.lookAt(1,0,0),d.up.set(0,1,0),d.lookAt(-1,0,0),e.up.set(0,0,-1),e.lookAt(0,1,0),f.up.set(0,0,1),f.lookAt(0,-1,0),g.up.set(0,1,0),g.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(2001===a)c.up.set(0,-1,0),c.lookAt(-1,0,0),d.up.set(0,-1,0),d.lookAt(1,0,0),e.up.set(0,0,1),e.lookAt(0,1,0),f.up.set(0,0,-1),f.lookAt(0,-1,0),g.up.set(0,-1,0),g.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+a);for(let a of b)this.add(a),a.updateMatrixWorld()}update(a,b){null===this.parent&&this.updateMatrixWorld();let{renderTarget:c,activeMipmapLevel:d}=this;this.coordinateSystem!==a.coordinateSystem&&(this.coordinateSystem=a.coordinateSystem,this.updateCoordinateSystem());let[e,f,g,h,i,j]=this.children,k=a.getRenderTarget(),l=a.getActiveCubeFace(),m=a.getActiveMipmapLevel(),n=a.xr.enabled;a.xr.enabled=!1;let o=c.texture.generateMipmaps;c.texture.generateMipmaps=!1,a.setRenderTarget(c,0,d),a.render(b,e),a.setRenderTarget(c,1,d),a.render(b,f),a.setRenderTarget(c,2,d),a.render(b,g),a.setRenderTarget(c,3,d),a.render(b,h),a.setRenderTarget(c,4,d),a.render(b,i),c.texture.generateMipmaps=o,a.setRenderTarget(c,5,d),a.render(b,j),a.setRenderTarget(k,l,m),a.xr.enabled=n,c.texture.needsPMREMUpdate=!0}}class bY extends P{constructor(a,b,c,d,e,f,g,h,i,j){super(a=void 0!==a?a:[],b=void 0!==b?b:301,c,d,e,f,g,h,i,j),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(a){this.image=a}}class bZ extends S{constructor(a=1,b={}){super(a,a,b),this.isWebGLCubeRenderTarget=!0;let c={width:a,height:a,depth:1};void 0!==b.encoding&&(C("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),b.colorSpace=3001===b.encoding?e:""),this.texture=new bY([c,c,c,c,c,c],b.mapping,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy,b.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==b.generateMipmaps&&b.generateMipmaps,this.texture.minFilter=void 0!==b.minFilter?b.minFilter:1006}fromEquirectangularTexture(a,b){this.texture.type=b.type,this.texture.colorSpace=b.colorSpace,this.texture.generateMipmaps=b.generateMipmaps,this.texture.minFilter=b.minFilter,this.texture.magFilter=b.magFilter;let c={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},d=new bM(5,5,5),e=new bR({name:"CubemapFromEquirect",uniforms:bN(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,side:1,blending:0});e.uniforms.tEquirect.value=b;let f=new bK(d,e),g=b.minFilter;return 1008===b.minFilter&&(b.minFilter=1006),new bX(1,10,this).update(a,f),b.minFilter=g,f.geometry.dispose(),f.material.dispose(),this}clear(a,b,c,d){let e=a.getRenderTarget();for(let e=0;e<6;e++)a.setRenderTarget(this,e),a.clear(b,c,d);a.setRenderTarget(e)}}let b$=new V,b_=new V,b0=new x;class b1{constructor(a=new V(1,0,0),b=0){this.isPlane=!0,this.normal=a,this.constant=b}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=b$.subVectors(c,b).cross(b_.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return b.copy(a).addScaledVector(this.normal,-this.distanceToPoint(a))}intersectLine(a,b){let c=a.delta(b$),d=this.normal.dot(c);if(0===d)return 0===this.distanceToPoint(a.start)?b.copy(a.start):null;let e=-(a.start.dot(this.normal)+this.constant)/d;return e<0||e>1?null:b.copy(a.start).addScaledVector(c,e)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||b0.getNormalMatrix(a),d=this.coplanarPoint(b$).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}clone(){return new this.constructor().copy(this)}}let b2=new ao,b3=new V;class b4{constructor(a=new b1,b=new b1,c=new b1,d=new b1,e=new b1,f=new b1){this.planes=[a,b,c,d,e,f]}set(a,b,c,d,e,f){let g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this}copy(a){let b=this.planes;for(let c=0;c<6;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a,b=2e3){let c=this.planes,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],i=d[4],j=d[5],k=d[6],l=d[7],m=d[8],n=d[9],o=d[10],p=d[11],q=d[12],r=d[13],s=d[14],t=d[15];if(c[0].setComponents(h-e,l-i,p-m,t-q).normalize(),c[1].setComponents(h+e,l+i,p+m,t+q).normalize(),c[2].setComponents(h+f,l+j,p+n,t+r).normalize(),c[3].setComponents(h-f,l-j,p-n,t-r).normalize(),c[4].setComponents(h-g,l-k,p-o,t-s).normalize(),2e3===b)c[5].setComponents(h+g,l+k,p+o,t+s).normalize();else if(2001===b)c[5].setComponents(g,k,o,s).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+b);return this}intersectsObject(a){if(void 0!==a.boundingSphere)null===a.boundingSphere&&a.computeBoundingSphere(),b2.copy(a.boundingSphere).applyMatrix4(a.matrixWorld);else{let b=a.geometry;null===b.boundingSphere&&b.computeBoundingSphere(),b2.copy(b.boundingSphere).applyMatrix4(a.matrixWorld)}return this.intersectsSphere(b2)}intersectsSprite(a){return b2.center.set(0,0,0),b2.radius=.7071067811865476,b2.applyMatrix4(a.matrixWorld),this.intersectsSphere(b2)}intersectsSphere(a){let b=this.planes,c=a.center,d=-a.radius;for(let a=0;a<6;a++)if(b[a].distanceToPoint(c)<d)return!1;return!0}intersectsBox(a){let b=this.planes;for(let c=0;c<6;c++){let d=b[c];if(b3.x=d.normal.x>0?a.max.x:a.min.x,b3.y=d.normal.y>0?a.max.y:a.min.y,b3.z=d.normal.z>0?a.max.z:a.min.z,0>d.distanceToPoint(b3))return!1}return!0}containsPoint(a){let b=this.planes;for(let c=0;c<6;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}clone(){return new this.constructor().copy(this)}}function b5(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function b6(a,b){let c=b.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(b){b.isInterleavedBufferAttribute&&(b=b.data);let c=d.get(b);c&&(a.deleteBuffer(c.buffer),d.delete(b))},update:function(b,e){if(b.isGLBufferAttribute){let a=d.get(b);(!a||a.version<b.version)&&d.set(b,{buffer:b.buffer,type:b.type,bytesPerElement:b.elementSize,version:b.version});return}b.isInterleavedBufferAttribute&&(b=b.data);let f=d.get(b);if(void 0===f)d.set(b,function(b,d){let e,f=b.array,g=b.usage,h=f.byteLength,i=a.createBuffer();if(a.bindBuffer(d,i),a.bufferData(d,f,g),b.onUploadCallback(),f instanceof Float32Array)e=a.FLOAT;else if(f instanceof Uint16Array)if(b.isFloat16BufferAttribute)if(c)e=a.HALF_FLOAT;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else e=a.UNSIGNED_SHORT;else if(f instanceof Int16Array)e=a.SHORT;else if(f instanceof Uint32Array)e=a.UNSIGNED_INT;else if(f instanceof Int32Array)e=a.INT;else if(f instanceof Int8Array)e=a.BYTE;else if(f instanceof Uint8Array)e=a.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)e=a.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:i,type:e,bytesPerElement:f.BYTES_PER_ELEMENT,version:b.version,size:h}}(b,e));else if(f.version<b.version){if(f.size!==b.array.byteLength)throw Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(b,d,e){let f=d.array,g=d._updateRange,h=d.updateRanges;if(a.bindBuffer(e,b),-1===g.count&&0===h.length&&a.bufferSubData(e,0,f),0!==h.length){for(let b=0,d=h.length;b<d;b++){let d=h[b];c?a.bufferSubData(e,d.start*f.BYTES_PER_ELEMENT,f,d.start,d.count):a.bufferSubData(e,d.start*f.BYTES_PER_ELEMENT,f.subarray(d.start,d.start+d.count))}d.clearUpdateRanges()}-1!==g.count&&(c?a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1),d.onUploadCallback()}(f.buffer,b,e),f.version=b.version}}}}class b7 extends bs{constructor(a=1,b=1,c=1,d=1){super(),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};let e=a/2,f=b/2,g=Math.floor(c),h=Math.floor(d),i=g+1,j=h+1,k=a/g,l=b/h,m=[],n=[],o=[],p=[];for(let a=0;a<j;a++){let b=a*l-f;for(let c=0;c<i;c++){let d=c*k-e;n.push(d,-b,0),o.push(0,0,1),p.push(c/g),p.push(1-a/h)}}for(let a=0;a<h;a++)for(let b=0;b<g;b++){let c=b+i*a,d=b+i*(a+1),e=b+1+i*(a+1),f=b+1+i*a;m.push(c,d,f),m.push(d,e,f)}this.setIndex(m),this.setAttribute("position",new bk(n,3)),this.setAttribute("normal",new bk(o,3)),this.setAttribute("uv",new bk(p,2))}copy(a){return super.copy(a),this.parameters=Object.assign({},a.parameters),this}static fromJSON(a){return new b7(a.width,a.height,a.widthSegments,a.heightSegments)}}let b8={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	#ifdef ALPHA_TO_COVERAGE\n	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n	if ( diffuseColor.a == 0.0 ) discard;\n	#else\n	if ( diffuseColor.a < alphaTest ) discard;\n	#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n	attribute float batchId;\n	uniform highp sampler2D batchingTexture;\n	mat4 getBatchingMatrix( const in float i ) {\n		int size = textureSize( batchingTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n	mat4 batchingMatrix = getBatchingMatrix( batchId );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#ifdef ALPHA_TO_COVERAGE\n		float distanceToPlane, distanceGradient;\n		float clipOpacity = 1.0;\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n			distanceGradient = fwidth( distanceToPlane ) / 2.0;\n			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			if ( clipOpacity == 0.0 ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			float unionClipOpacity = 1.0;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n				distanceGradient = fwidth( distanceToPlane ) / 2.0;\n				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			}\n			#pragma unroll_loop_end\n			clipOpacity *= 1.0 - unionClipOpacity;\n		#endif\n		diffuseColor.a *= clipOpacity;\n		if ( diffuseColor.a == 0.0 ) discard;\n	#else\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			bool clipped = true;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n			}\n			#pragma unroll_loop_end\n			if ( clipped ) discard;\n		#endif\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n	vec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n	mat3 bm = mat3( batchingMatrix );\n	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n	transformedNormal = bm * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = bm * transformedTangent;\n	#endif\n#endif\n#ifdef USE_INSTANCING\n	mat3 im = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n	transformedNormal = im * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = im * transformedTangent;\n	#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n	vec3( 0.8224621, 0.177538, 0.0 ),\n	vec3( 0.0331941, 0.9668058, 0.0 ),\n	vec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n	vec3( 1.2249401, - 0.2249404, 0.0 ),\n	vec3( - 0.0420569, 1.0420571, 0.0 ),\n	vec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	if( material.anisotropy == 0.0 ) {\n		anisotropyV = vec2( 1.0, 0.0 );\n	} else {\n		anisotropyV /= material.anisotropy;\n		material.anisotropy = saturate( material.anisotropy );\n	}\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n	mvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	mat4 getBoneMatrix( const in float i ) {\n		int size = textureSize( boneTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n	vec3( 1.6605, - 0.1246, - 0.0182 ),\n	vec3( - 0.5876, 1.1329, - 0.1006 ),\n	vec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n	vec3( 0.6274, 0.0691, 0.0164 ),\n	vec3( 0.3293, 0.9195, 0.0880 ),\n	vec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n	vec3 x2 = x * x;\n	vec3 x4 = x2 * x2;\n	return + 15.5 * x4 * x2\n		- 40.14 * x4 * x\n		+ 31.96 * x4\n		- 6.868 * x2 * x\n		+ 0.4298 * x2\n		+ 0.1191 * x\n		- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n	const mat3 AgXInsetMatrix = mat3(\n		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n	);\n	const mat3 AgXOutsetMatrix = mat3(\n		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n	);\n	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;\n	color *= toneMappingExposure;\n	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n	color = AgXInsetMatrix * color;\n	color = max( color, 1e-10 );	color = log2( color );\n	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n	color = clamp( color, 0.0, 1.0 );\n	color = agxDefaultContrastApprox( color );\n	color = AgXOutsetMatrix * color;\n	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n	color = clamp( color, 0.0, 1.0 );\n	return color;\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_BATCHING\n		worldPosition = batchingMatrix * worldPosition;\n	#endif\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},b9={common:{diffuse:{value:new ba(0xffffff)},opacity:{value:1},map:{value:null},mapTransform:{value:new x},alphaMap:{value:null},alphaMapTransform:{value:new x},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new x}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new x}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new x}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new x},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new x},normalScale:{value:new w(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new x},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new x}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new x}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new x}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ba(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ba(0xffffff)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new x},alphaTest:{value:0},uvTransform:{value:new x}},sprite:{diffuse:{value:new ba(0xffffff)},opacity:{value:1},center:{value:new w(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new x},alphaMap:{value:null},alphaMapTransform:{value:new x},alphaTest:{value:0}}},ca={basic:{uniforms:bO([b9.common,b9.specularmap,b9.envmap,b9.aomap,b9.lightmap,b9.fog]),vertexShader:b8.meshbasic_vert,fragmentShader:b8.meshbasic_frag},lambert:{uniforms:bO([b9.common,b9.specularmap,b9.envmap,b9.aomap,b9.lightmap,b9.emissivemap,b9.bumpmap,b9.normalmap,b9.displacementmap,b9.fog,b9.lights,{emissive:{value:new ba(0)}}]),vertexShader:b8.meshlambert_vert,fragmentShader:b8.meshlambert_frag},phong:{uniforms:bO([b9.common,b9.specularmap,b9.envmap,b9.aomap,b9.lightmap,b9.emissivemap,b9.bumpmap,b9.normalmap,b9.displacementmap,b9.fog,b9.lights,{emissive:{value:new ba(0)},specular:{value:new ba(1118481)},shininess:{value:30}}]),vertexShader:b8.meshphong_vert,fragmentShader:b8.meshphong_frag},standard:{uniforms:bO([b9.common,b9.envmap,b9.aomap,b9.lightmap,b9.emissivemap,b9.bumpmap,b9.normalmap,b9.displacementmap,b9.roughnessmap,b9.metalnessmap,b9.fog,b9.lights,{emissive:{value:new ba(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:b8.meshphysical_vert,fragmentShader:b8.meshphysical_frag},toon:{uniforms:bO([b9.common,b9.aomap,b9.lightmap,b9.emissivemap,b9.bumpmap,b9.normalmap,b9.displacementmap,b9.gradientmap,b9.fog,b9.lights,{emissive:{value:new ba(0)}}]),vertexShader:b8.meshtoon_vert,fragmentShader:b8.meshtoon_frag},matcap:{uniforms:bO([b9.common,b9.bumpmap,b9.normalmap,b9.displacementmap,b9.fog,{matcap:{value:null}}]),vertexShader:b8.meshmatcap_vert,fragmentShader:b8.meshmatcap_frag},points:{uniforms:bO([b9.points,b9.fog]),vertexShader:b8.points_vert,fragmentShader:b8.points_frag},dashed:{uniforms:bO([b9.common,b9.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:b8.linedashed_vert,fragmentShader:b8.linedashed_frag},depth:{uniforms:bO([b9.common,b9.displacementmap]),vertexShader:b8.depth_vert,fragmentShader:b8.depth_frag},normal:{uniforms:bO([b9.common,b9.bumpmap,b9.normalmap,b9.displacementmap,{opacity:{value:1}}]),vertexShader:b8.meshnormal_vert,fragmentShader:b8.meshnormal_frag},sprite:{uniforms:bO([b9.sprite,b9.fog]),vertexShader:b8.sprite_vert,fragmentShader:b8.sprite_frag},background:{uniforms:{uvTransform:{value:new x},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:b8.background_vert,fragmentShader:b8.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:b8.backgroundCube_vert,fragmentShader:b8.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:b8.cube_vert,fragmentShader:b8.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:b8.equirect_vert,fragmentShader:b8.equirect_frag},distanceRGBA:{uniforms:bO([b9.common,b9.displacementmap,{referencePosition:{value:new V},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:b8.distanceRGBA_vert,fragmentShader:b8.distanceRGBA_frag},shadow:{uniforms:bO([b9.lights,b9.fog,{color:{value:new ba(0)},opacity:{value:1}}]),vertexShader:b8.shadow_vert,fragmentShader:b8.shadow_frag}};ca.physical={uniforms:bO([ca.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new x},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new x},clearcoatNormalScale:{value:new w(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new x},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new x},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new x},sheen:{value:0},sheenColor:{value:new ba(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new x},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new x},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new x},transmissionSamplerSize:{value:new w},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new x},attenuationDistance:{value:0},attenuationColor:{value:new ba(0)},specularColor:{value:new ba(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new x},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new x},anisotropyVector:{value:new w},anisotropyMap:{value:null},anisotropyMapTransform:{value:new x}}]),vertexShader:b8.meshphysical_vert,fragmentShader:b8.meshphysical_frag};let cb={r:0,b:0,g:0};function cc(a,b,c,d,e,f,g){let h,i,k=new ba(0),l=+(!0!==f),m=null,n=0,o=null;function p(b,c){b.getRGB(cb,bP(a)),d.buffers.color.setClear(cb.r,cb.g,cb.b,c,g)}return{getClearColor:function(){return k},setClearColor:function(a,b=1){k.set(a),p(k,l=b)},getClearAlpha:function(){return l},setClearAlpha:function(a){p(k,l=a)},render:function(f,q){let r=!1,s=!0===q.isScene?q.background:null;s&&s.isTexture&&(s=(q.backgroundBlurriness>0?c:b).get(s)),null===s?p(k,l):s&&s.isColor&&(p(s,1),r=!0);let t=a.xr.getEnvironmentBlendMode();"additive"===t?d.buffers.color.setClear(0,0,0,1,g):"alpha-blend"===t&&d.buffers.color.setClear(0,0,0,0,g),(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),s&&(s.isCubeTexture||306===s.mapping)?(void 0===i&&((i=new bK(new bM(1,1,1),new bR({name:"BackgroundCubeMaterial",uniforms:bN(ca.backgroundCube.uniforms),vertexShader:ca.backgroundCube.vertexShader,fragmentShader:ca.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),i.geometry.deleteAttribute("uv"),i.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(i.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),e.update(i)),i.material.uniforms.envMap.value=s,i.material.uniforms.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,i.material.uniforms.backgroundBlurriness.value=q.backgroundBlurriness,i.material.uniforms.backgroundIntensity.value=q.backgroundIntensity,i.material.toneMapped=H.getTransfer(s.colorSpace)!==j,(m!==s||n!==s.version||o!==a.toneMapping)&&(i.material.needsUpdate=!0,m=s,n=s.version,o=a.toneMapping),i.layers.enableAll(),f.unshift(i,i.geometry,i.material,0,0,null)):s&&s.isTexture&&(void 0===h&&((h=new bK(new b7(2,2),new bR({name:"BackgroundMaterial",uniforms:bN(ca.background.uniforms),vertexShader:ca.background.vertexShader,fragmentShader:ca.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),e.update(h)),h.material.uniforms.t2D.value=s,h.material.uniforms.backgroundIntensity.value=q.backgroundIntensity,h.material.toneMapped=H.getTransfer(s.colorSpace)!==j,!0===s.matrixAutoUpdate&&s.updateMatrix(),h.material.uniforms.uvTransform.value.copy(s.matrix),(m!==s||n!==s.version||o!==a.toneMapping)&&(h.material.needsUpdate=!0,m=s,n=s.version,o=a.toneMapping),h.layers.enableAll(),f.unshift(h,h.geometry,h.material,0,0,null))}}}function cd(a,b,c,d){let e=a.getParameter(a.MAX_VERTEX_ATTRIBS),f=d.isWebGL2?null:b.get("OES_vertex_array_object"),g=d.isWebGL2||null!==f,h={},i=n(null),j=i,k=!1;function l(b){return d.isWebGL2?a.bindVertexArray(b):f.bindVertexArrayOES(b)}function m(b){return d.isWebGL2?a.deleteVertexArray(b):f.deleteVertexArrayOES(b)}function n(a){let b=[],c=[],d=[];for(let a=0;a<e;a++)b[a]=0,c[a]=0,d[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:a,attributes:{},index:null}}function o(){let a=j.newAttributes;for(let b=0,c=a.length;b<c;b++)a[b]=0}function p(a){q(a,0)}function q(c,e){let f=j.newAttributes,g=j.enabledAttributes,h=j.attributeDivisors;f[c]=1,0===g[c]&&(a.enableVertexAttribArray(c),g[c]=1),h[c]!==e&&((d.isWebGL2?a:b.get("ANGLE_instanced_arrays"))[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,e),h[c]=e)}function r(){let b=j.newAttributes,c=j.enabledAttributes;for(let d=0,e=c.length;d<e;d++)c[d]!==b[d]&&(a.disableVertexAttribArray(d),c[d]=0)}function s(b,c,d,e,f,g,h){!0===h?a.vertexAttribIPointer(b,c,d,f,g):a.vertexAttribPointer(b,c,d,e,f,g)}function t(){u(),k=!0,j!==i&&l((j=i).object)}function u(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(e,i,m,t,u){let v=!1;if(g){let b=function(b,c,e){let g=!0===e.wireframe,i=h[b.id];void 0===i&&(i={},h[b.id]=i);let j=i[c.id];void 0===j&&(j={},i[c.id]=j);let k=j[g];return void 0===k&&(k=n(d.isWebGL2?a.createVertexArray():f.createVertexArrayOES()),j[g]=k),k}(t,m,i);j!==b&&l((j=b).object),(v=function(a,b,c,d){let e=j.attributes,f=b.attributes,g=0,h=c.getAttributes();for(let b in h)if(h[b].location>=0){let c=e[b],d=f[b];if(void 0===d&&("instanceMatrix"===b&&a.instanceMatrix&&(d=a.instanceMatrix),"instanceColor"===b&&a.instanceColor&&(d=a.instanceColor)),void 0===c||c.attribute!==d||d&&c.data!==d.data)return!0;g++}return j.attributesNum!==g||j.index!==d}(e,t,m,u))&&function(a,b,c,d){let e={},f=b.attributes,g=0,h=c.getAttributes();for(let b in h)if(h[b].location>=0){let c=f[b];void 0===c&&("instanceMatrix"===b&&a.instanceMatrix&&(c=a.instanceMatrix),"instanceColor"===b&&a.instanceColor&&(c=a.instanceColor));let d={};d.attribute=c,c&&c.data&&(d.data=c.data),e[b]=d,g++}j.attributes=e,j.attributesNum=g,j.index=d}(e,t,m,u)}else{let a=!0===i.wireframe;(j.geometry!==t.id||j.program!==m.id||j.wireframe!==a)&&(j.geometry=t.id,j.program=m.id,j.wireframe=a,v=!0)}null!==u&&c.update(u,a.ELEMENT_ARRAY_BUFFER),(v||k)&&(k=!1,function(e,f,g,h){if(!1===d.isWebGL2&&(e.isInstancedMesh||h.isInstancedBufferGeometry)&&null===b.get("ANGLE_instanced_arrays"))return;o();let i=h.attributes,j=g.getAttributes(),k=f.defaultAttributeValues;for(let b in j){let f=j[b];if(f.location>=0){let g=i[b];if(void 0===g&&("instanceMatrix"===b&&e.instanceMatrix&&(g=e.instanceMatrix),"instanceColor"===b&&e.instanceColor&&(g=e.instanceColor)),void 0!==g){let b=g.normalized,i=g.itemSize,j=c.get(g);if(void 0===j)continue;let k=j.buffer,l=j.type,m=j.bytesPerElement,n=!0===d.isWebGL2&&(l===a.INT||l===a.UNSIGNED_INT||1013===g.gpuType);if(g.isInterleavedBufferAttribute){let c=g.data,d=c.stride,j=g.offset;if(c.isInstancedInterleavedBuffer){for(let a=0;a<f.locationSize;a++)q(f.location+a,c.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===h._maxInstanceCount&&(h._maxInstanceCount=c.meshPerAttribute*c.count)}else for(let a=0;a<f.locationSize;a++)p(f.location+a);a.bindBuffer(a.ARRAY_BUFFER,k);for(let a=0;a<f.locationSize;a++)s(f.location+a,i/f.locationSize,l,b,d*m,(j+i/f.locationSize*a)*m,n)}else{if(g.isInstancedBufferAttribute){for(let a=0;a<f.locationSize;a++)q(f.location+a,g.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===h._maxInstanceCount&&(h._maxInstanceCount=g.meshPerAttribute*g.count)}else for(let a=0;a<f.locationSize;a++)p(f.location+a);a.bindBuffer(a.ARRAY_BUFFER,k);for(let a=0;a<f.locationSize;a++)s(f.location+a,i/f.locationSize,l,b,i*m,i/f.locationSize*a*m,n)}}else if(void 0!==k){let c=k[b];if(void 0!==c)switch(c.length){case 2:a.vertexAttrib2fv(f.location,c);break;case 3:a.vertexAttrib3fv(f.location,c);break;case 4:a.vertexAttrib4fv(f.location,c);break;default:a.vertexAttrib1fv(f.location,c)}}}}r()}(e,i,m,t),null!==u&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,c.get(u).buffer))},reset:t,resetDefaultState:u,dispose:function(){for(let a in t(),h){let b=h[a];for(let a in b){let c=b[a];for(let a in c)m(c[a].object),delete c[a];delete b[a]}delete h[a]}},releaseStatesOfGeometry:function(a){if(void 0===h[a.id])return;let b=h[a.id];for(let a in b){let c=b[a];for(let a in c)m(c[a].object),delete c[a];delete b[a]}delete h[a.id]},releaseStatesOfProgram:function(a){for(let b in h){let c=h[b];if(void 0===c[a.id])continue;let d=c[a.id];for(let a in d)m(d[a].object),delete d[a];delete c[a.id]}},initAttributes:o,enableAttribute:p,disableUnusedAttributes:r}}function ce(a,b,c,d){let e,f=d.isWebGL2;this.setMode=function(a){e=a},this.render=function(b,d){a.drawArrays(e,b,d),c.update(d,e,1)},this.renderInstances=function(d,g,h){let i,j;if(0!==h){if(f)i=a,j="drawArraysInstanced";else if(i=b.get("ANGLE_instanced_arrays"),j="drawArraysInstancedANGLE",null===i)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");i[j](e,d,g,h),c.update(g,e,h)}},this.renderMultiDraw=function(a,d,f){if(0===f)return;let g=b.get("WEBGL_multi_draw");if(null===g)for(let b=0;b<f;b++)this.render(a[b],d[b]);else{g.multiDrawArraysWEBGL(e,a,0,d,0,f);let b=0;for(let a=0;a<f;a++)b+=d[a];c.update(b,e,1)}}}function cf(a,b,c){let d;function e(b){if("highp"===b){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===a.constructor.name,g=void 0!==c.precision?c.precision:"highp",h=e(g);h!==g&&(console.warn("THREE.WebGLRenderer:",g,"not supported, using",h,"instead."),g=h);let i=f||b.has("WEBGL_draw_buffers"),j=!0===c.logarithmicDepthBuffer,k=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),l=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=a.getParameter(a.MAX_TEXTURE_SIZE),n=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),o=a.getParameter(a.MAX_VERTEX_ATTRIBS),p=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),q=a.getParameter(a.MAX_VARYING_VECTORS),r=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),s=l>0,t=f||b.has("OES_texture_float"),u=f?a.getParameter(a.MAX_SAMPLES):0;return{isWebGL2:f,drawBuffers:i,getMaxAnisotropy:function(){if(void 0!==d)return d;if(!0===b.has("EXT_texture_filter_anisotropic")){let c=b.get("EXT_texture_filter_anisotropic");d=a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else d=0;return d},getMaxPrecision:e,precision:g,logarithmicDepthBuffer:j,maxTextures:k,maxVertexTextures:l,maxTextureSize:m,maxCubemapSize:n,maxAttributes:o,maxVertexUniforms:p,maxVaryings:q,maxFragmentUniforms:r,vertexTextures:s,floatFragmentTextures:t,floatVertexTextures:s&&t,maxSamples:u}}function cg(a){let b=this,c=null,d=0,e=!1,f=!1,g=new b1,h=new x,i={value:null,needsUpdate:!1};function j(a,c,d,e){let f=null!==a?a.length:0,j=null;if(0!==f){if(j=i.value,!0!==e||null===j){let b=d+4*f,e=c.matrixWorldInverse;h.getNormalMatrix(e),(null===j||j.length<b)&&(j=new Float32Array(b));for(let b=0,c=d;b!==f;++b,c+=4)g.copy(a[b]).applyMatrix4(e,h),g.normal.toArray(j,c),j[c+3]=g.constant}i.value=j,i.needsUpdate=!0}return b.numPlanes=f,b.numIntersection=0,j}this.uniform=i,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b){let c=0!==a.length||b||0!==d||e;return e=b,d=a.length,c},this.beginShadows=function(){f=!0,j(null)},this.endShadows=function(){f=!1},this.setGlobalState=function(a,b){c=j(a,b,0)},this.setState=function(g,h,k){let l=g.clippingPlanes,m=g.clipIntersection,n=g.clipShadows,o=a.get(g);if(e&&null!==l&&0!==l.length&&(!f||n)){let a=f?0:d,b=4*a,e=o.clippingState||null;i.value=e,e=j(l,h,b,k);for(let a=0;a!==b;++a)e[a]=c[a];o.clippingState=e,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=a}else f?j(null):(i.value!==c&&(i.value=c,i.needsUpdate=d>0),b.numPlanes=d,b.numIntersection=0)}}function ch(a){let b=new WeakMap;function c(a,b){return 303===b?a.mapping=301:304===b&&(a.mapping=302),a}function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture){let f=e.mapping;if(303===f||304===f)if(b.has(e))return c(b.get(e).texture,e.mapping);else{let f=e.image;if(!f||!(f.height>0))return null;{let g=new bZ(f.height);return g.fromEquirectangularTexture(a,e),b.set(e,g),e.addEventListener("dispose",d),c(g.texture,e.mapping)}}}return e},dispose:function(){b=new WeakMap}}}class ci extends bS{constructor(a=-1,b=1,c=1,d=-1,e=.1,f=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e,this.far=f,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this}setViewOffset(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,f=c+a,g=d+b,h=d-b;if(null!==this.view&&this.view.enabled){let a=(this.right-this.left)/this.view.fullWidth/this.zoom,b=(this.top-this.bottom)/this.view.fullHeight/this.zoom;e+=a*this.view.offsetX,f=e+a*this.view.width,g-=b*this.view.offsetY,h=g-b*this.view.height}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.zoom=this.zoom,b.object.left=this.left,b.object.right=this.right,b.object.top=this.top,b.object.bottom=this.bottom,b.object.near=this.near,b.object.far=this.far,null!==this.view&&(b.object.view=Object.assign({},this.view)),b}}let cj=[.125,.215,.35,.446,.526,.582],ck=new ci,cl=new ba,cm=null,cn=0,co=0,cp=(1+Math.sqrt(5))/2,cq=1/cp,cr=[new V(1,1,1),new V(-1,1,1),new V(1,1,-1),new V(-1,1,-1),new V(0,cp,cq),new V(0,cp,-cq),new V(cq,0,cp),new V(-cq,0,cp),new V(cp,cq,0),new V(-cp,cq,0)];class cs{constructor(a){this._renderer=a,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(a,b=0,c=.1,d=100){cm=this._renderer.getRenderTarget(),cn=this._renderer.getActiveCubeFace(),co=this._renderer.getActiveMipmapLevel(),this._setSize(256);let e=this._allocateTargets();return e.depthBuffer=!0,this._sceneToCubeUV(a,c,d,e),b>0&&this._blur(e,0,0,b),this._applyPMREM(e),this._cleanup(e),e}fromEquirectangular(a,b=null){return this._fromTexture(a,b)}fromCubemap(a,b=null){return this._fromTexture(a,b)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=cw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=cv(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(a){this._lodMax=Math.floor(Math.log2(a)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let a=0;a<this._lodPlanes.length;a++)this._lodPlanes[a].dispose()}_cleanup(a){this._renderer.setRenderTarget(cm,cn,co),a.scissorTest=!1,cu(a,0,0,a.width,a.height)}_fromTexture(a,b){301===a.mapping||302===a.mapping?this._setSize(0===a.image.length?16:a.image[0].width||a.image[0].image.width):this._setSize(a.image.width/4),cm=this._renderer.getRenderTarget(),cn=this._renderer.getActiveCubeFace(),co=this._renderer.getActiveMipmapLevel();let c=b||this._allocateTargets();return this._textureToCubeUV(a,c),this._applyPMREM(c),this._cleanup(c),c}_allocateTargets(){let a=3*Math.max(this._cubeSize,112),b=4*this._cubeSize,c={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:f,depthBuffer:!1},d=ct(a,b,c);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==a||this._pingPongRenderTarget.height!==b){var e;null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=ct(a,b,c);let{_lodMax:d}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(a){let b=[],c=[],d=[],e=a,f=a-4+1+cj.length;for(let g=0;g<f;g++){let f=Math.pow(2,e);c.push(f);let h=1/f;g>a-4?h=cj[g-a+4-1]:0===g&&(h=0),d.push(h);let i=1/(f-2),j=-i,k=1+i,l=[j,j,k,j,k,k,j,j,k,k,j,k],m=new Float32Array(108),n=new Float32Array(72),o=new Float32Array(36);for(let a=0;a<6;a++){let b=a%3*2/3-1,c=a>2?0:-1,d=[b,c,0,b+2/3,c,0,b+2/3,c+1,0,b,c,0,b+2/3,c+1,0,b,c+1,0];m.set(d,18*a),n.set(l,12*a);let e=[a,a,a,a,a,a];o.set(e,6*a)}let p=new bs;p.setAttribute("position",new bh(m,3)),p.setAttribute("uv",new bh(n,2)),p.setAttribute("faceIndex",new bh(o,1)),b.push(p),e>4&&e--}return{lodPlanes:b,sizeLods:c,sigmas:d}}(d)),this._blurMaterial=(e=d,new bR({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/a,CUBEUV_TEXEL_HEIGHT:1/b,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new V(0,1,0)}},vertexShader:cx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1}))}return d}_compileMaterial(a){let b=new bK(this._lodPlanes[0],a);this._renderer.compile(b,ck)}_sceneToCubeUV(a,b,c,d){let e=new bW(90,1,b,c),f=[1,-1,1,1,1,1],g=[1,1,1,-1,-1,-1],h=this._renderer,i=h.autoClear,j=h.toneMapping;h.getClearColor(cl),h.toneMapping=0,h.autoClear=!1;let k=new be({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),l=new bK(new bM,k),m=!1,n=a.background;n?n.isColor&&(k.color.copy(n),a.background=null,m=!0):(k.color.copy(cl),m=!0);for(let b=0;b<6;b++){let c=b%3;0===c?(e.up.set(0,f[b],0),e.lookAt(g[b],0,0)):1===c?(e.up.set(0,0,f[b]),e.lookAt(0,g[b],0)):(e.up.set(0,f[b],0),e.lookAt(0,0,g[b]));let i=this._cubeSize;cu(d,c*i,b>2?i:0,i,i),h.setRenderTarget(d),m&&h.render(l,e),h.render(a,e)}l.geometry.dispose(),l.material.dispose(),h.toneMapping=j,h.autoClear=i,a.background=n}_textureToCubeUV(a,b){let c=this._renderer,d=301===a.mapping||302===a.mapping;d?(null===this._cubemapMaterial&&(this._cubemapMaterial=cw()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===a.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=cv());let e=d?this._cubemapMaterial:this._equirectMaterial,f=new bK(this._lodPlanes[0],e);e.uniforms.envMap.value=a;let g=this._cubeSize;cu(b,0,0,3*g,2*g),c.setRenderTarget(b),c.render(f,ck)}_applyPMREM(a){let b=this._renderer,c=b.autoClear;b.autoClear=!1;for(let b=1;b<this._lodPlanes.length;b++){let c=Math.sqrt(this._sigmas[b]*this._sigmas[b]-this._sigmas[b-1]*this._sigmas[b-1]),d=cr[(b-1)%cr.length];this._blur(a,b-1,b,c,d)}b.autoClear=c}_blur(a,b,c,d,e){let f=this._pingPongRenderTarget;this._halfBlur(a,f,b,c,d,"latitudinal",e),this._halfBlur(f,a,c,c,d,"longitudinal",e)}_halfBlur(a,b,c,d,e,f,g){let h=this._renderer,i=this._blurMaterial;"latitudinal"!==f&&"longitudinal"!==f&&console.error("blur direction must be either latitudinal or longitudinal!");let j=new bK(this._lodPlanes[d],i),k=i.uniforms,l=this._sizeLods[c]-1,m=isFinite(e)?Math.PI/(2*l):2*Math.PI/39,n=e/m,o=isFinite(e)?1+Math.floor(3*n):20;o>20&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${o} samples when the maximum is set to 20`);let p=[],q=0;for(let a=0;a<20;++a){let b=a/n,c=Math.exp(-b*b/2);p.push(c),0===a?q+=c:a<o&&(q+=2*c)}for(let a=0;a<p.length;a++)p[a]=p[a]/q;k.envMap.value=a.texture,k.samples.value=o,k.weights.value=p,k.latitudinal.value="latitudinal"===f,g&&(k.poleAxis.value=g);let{_lodMax:r}=this;k.dTheta.value=m,k.mipInt.value=r-c;let s=this._sizeLods[d],t=4*(this._cubeSize-s);cu(b,3*s*(d>r-4?d-r+4:0),t,3*s,2*s),h.setRenderTarget(b),h.render(j,ck)}}function ct(a,b,c){let d=new S(a,b,c);return d.texture.mapping=306,d.texture.name="PMREM.cubeUv",d.scissorTest=!0,d}function cu(a,b,c,d,e){a.viewport.set(b,c,d,e),a.scissor.set(b,c,d,e)}function cv(){return new bR({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function cw(){return new bR({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function cx(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function cy(a){let b=new WeakMap,c=null;function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture){let f=e.mapping,g=303===f||304===f,h=301===f||302===f;if(g||h)if(e.isRenderTargetTexture&&!0===e.needsPMREMUpdate){e.needsPMREMUpdate=!1;let d=b.get(e);return null===c&&(c=new cs(a)),d=g?c.fromEquirectangular(e,d):c.fromCubemap(e,d),b.set(e,d),d.texture}else{if(b.has(e))return b.get(e).texture;let f=e.image;if(!(g&&f&&f.height>0||h&&f&&function(a){let b=0;for(let c=0;c<6;c++)void 0!==a[c]&&b++;return 6===b}(f)))return null;{null===c&&(c=new cs(a));let f=g?c.fromEquirectangular(e):c.fromCubemap(e);return b.set(e,f),e.addEventListener("dispose",d),f.texture}}}return e},dispose:function(){b=new WeakMap,null!==c&&(c.dispose(),c=null)}}}function cz(a){let b={};function c(c){let d;if(void 0!==b[c])return b[c];switch(c){case"WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return b[c]=d,d}return{has:function(a){return null!==c(a)},init:function(a){a.isWebGL2?(c("EXT_color_buffer_float"),c("WEBGL_clip_cull_distance")):(c("WEBGL_depth_texture"),c("OES_texture_float"),c("OES_texture_half_float"),c("OES_texture_half_float_linear"),c("OES_standard_derivatives"),c("OES_element_index_uint"),c("OES_vertex_array_object"),c("ANGLE_instanced_arrays")),c("OES_texture_float_linear"),c("EXT_color_buffer_half_float"),c("WEBGL_multisampled_render_to_texture")},get:function(a){let b=c(a);return null===b&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b}}}function cA(a,b,c,d){let e={},f=new WeakMap;function g(a){let h=a.target;for(let a in null!==h.index&&b.remove(h.index),h.attributes)b.remove(h.attributes[a]);for(let a in h.morphAttributes){let c=h.morphAttributes[a];for(let a=0,d=c.length;a<d;a++)b.remove(c[a])}h.removeEventListener("dispose",g),delete e[h.id];let i=f.get(h);i&&(b.remove(i),f.delete(h)),d.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,c.memory.geometries--}function h(a){let c=[],d=a.index,e=a.attributes.position,g=0;if(null!==d){let a=d.array;g=d.version;for(let b=0,d=a.length;b<d;b+=3){let d=a[b+0],e=a[b+1],f=a[b+2];c.push(d,e,e,f,f,d)}}else{if(void 0===e)return;let a=e.array;g=e.version;for(let b=0,d=a.length/3-1;b<d;b+=3){let a=b+0,d=b+1,e=b+2;c.push(a,d,d,e,e,a)}}let h=new(z(c)?bj:bi)(c,1);h.version=g;let i=f.get(a);i&&b.remove(i),f.set(a,h)}return{get:function(a,b){return!0===e[b.id]||(b.addEventListener("dispose",g),e[b.id]=!0,c.memory.geometries++),b},update:function(c){let d=c.attributes;for(let c in d)b.update(d[c],a.ARRAY_BUFFER);let e=c.morphAttributes;for(let c in e){let d=e[c];for(let c=0,e=d.length;c<e;c++)b.update(d[c],a.ARRAY_BUFFER)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function cB(a,b,c,d){let e,f,g,h=d.isWebGL2;this.setMode=function(a){e=a},this.setIndex=function(a){f=a.type,g=a.bytesPerElement},this.render=function(b,d){a.drawElements(e,d,f,b*g),c.update(d,e,1)},this.renderInstances=function(d,i,j){let k,l;if(0!==j){if(h)k=a,l="drawElementsInstanced";else if(k=b.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===k)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");k[l](e,i,f,d*g,j),c.update(i,e,j)}},this.renderMultiDraw=function(a,d,h){if(0===h)return;let i=b.get("WEBGL_multi_draw");if(null===i)for(let b=0;b<h;b++)this.render(a[b]/g,d[b]);else{i.multiDrawElementsWEBGL(e,d,0,f,a,0,h);let b=0;for(let a=0;a<h;a++)b+=d[a];c.update(b,e,1)}}}function cC(a){let b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.calls=0,b.triangles=0,b.points=0,b.lines=0},update:function(c,d,e){switch(b.calls++,d){case a.TRIANGLES:b.triangles+=c/3*e;break;case a.LINES:b.lines+=c/2*e;break;case a.LINE_STRIP:b.lines+=e*(c-1);break;case a.LINE_LOOP:b.lines+=e*c;break;case a.POINTS:b.points+=e*c;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",d)}}}}function cD(a,b){return a[0]-b[0]}function cE(a,b){return Math.abs(b[1])-Math.abs(a[1])}function cF(a,b,c){let d={},e=new Float32Array(8),f=new WeakMap,g=new Q,h=[];for(let a=0;a<8;a++)h[a]=[a,0];return{update:function(i,j,k){let l=i.morphTargetInfluences;if(!0===b.isWebGL2){let d=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,e=void 0!==d?d.length:0,h=f.get(j);if(void 0===h||h.count!==e){void 0!==h&&h.texture.dispose();let a=void 0!==j.morphAttributes.position,c=void 0!==j.morphAttributes.normal,d=void 0!==j.morphAttributes.color,i=j.morphAttributes.position||[],k=j.morphAttributes.normal||[],l=j.morphAttributes.color||[],m=0;!0===a&&(m=1),!0===c&&(m=2),!0===d&&(m=3);let n=j.attributes.position.count*m,o=1;n>b.maxTextureSize&&(o=Math.ceil(n/b.maxTextureSize),n=b.maxTextureSize);let p=new Float32Array(n*o*4*e),q=new T(p,n,o,e);q.type=1015,q.needsUpdate=!0;let r=4*m;for(let b=0;b<e;b++){let e=i[b],f=k[b],h=l[b],j=n*o*4*b;for(let b=0;b<e.count;b++){let i=b*r;!0===a&&(g.fromBufferAttribute(e,b),p[j+i+0]=g.x,p[j+i+1]=g.y,p[j+i+2]=g.z,p[j+i+3]=0),!0===c&&(g.fromBufferAttribute(f,b),p[j+i+4]=g.x,p[j+i+5]=g.y,p[j+i+6]=g.z,p[j+i+7]=0),!0===d&&(g.fromBufferAttribute(h,b),p[j+i+8]=g.x,p[j+i+9]=g.y,p[j+i+10]=g.z,p[j+i+11]=4===h.itemSize?g.w:1)}}h={count:e,texture:q,size:new w(n,o)},f.set(j,h),j.addEventListener("dispose",function a(){q.dispose(),f.delete(j),j.removeEventListener("dispose",a)})}let i=0;for(let a=0;a<l.length;a++)i+=l[a];let m=j.morphTargetsRelative?1:1-i;k.getUniforms().setValue(a,"morphTargetBaseInfluence",m),k.getUniforms().setValue(a,"morphTargetInfluences",l),k.getUniforms().setValue(a,"morphTargetsTexture",h.texture,c),k.getUniforms().setValue(a,"morphTargetsTextureSize",h.size)}else{let b=void 0===l?0:l.length,c=d[j.id];if(void 0===c||c.length!==b){c=[];for(let a=0;a<b;a++)c[a]=[a,0];d[j.id]=c}for(let a=0;a<b;a++){let b=c[a];b[0]=a,b[1]=l[a]}c.sort(cE);for(let a=0;a<8;a++)a<b&&c[a][1]?(h[a][0]=c[a][0],h[a][1]=c[a][1]):(h[a][0]=Number.MAX_SAFE_INTEGER,h[a][1]=0);h.sort(cD);let f=j.morphAttributes.position,g=j.morphAttributes.normal,i=0;for(let a=0;a<8;a++){let b=h[a],c=b[0],d=b[1];c!==Number.MAX_SAFE_INTEGER&&d?(f&&j.getAttribute("morphTarget"+a)!==f[c]&&j.setAttribute("morphTarget"+a,f[c]),g&&j.getAttribute("morphNormal"+a)!==g[c]&&j.setAttribute("morphNormal"+a,g[c]),e[a]=d,i+=d):(f&&!0===j.hasAttribute("morphTarget"+a)&&j.deleteAttribute("morphTarget"+a),g&&!0===j.hasAttribute("morphNormal"+a)&&j.deleteAttribute("morphNormal"+a),e[a]=0)}let m=j.morphTargetsRelative?1:1-i;k.getUniforms().setValue(a,"morphTargetBaseInfluence",m),k.getUniforms().setValue(a,"morphTargetInfluences",e)}}}}function cG(a,b,c,d){let e=new WeakMap;function f(a){let b=a.target;b.removeEventListener("dispose",f),c.remove(b.instanceMatrix),null!==b.instanceColor&&c.remove(b.instanceColor)}return{update:function(g){let h=d.render.frame,i=g.geometry,j=b.get(g,i);if(e.get(j)!==h&&(b.update(j),e.set(j,h)),g.isInstancedMesh&&(!1===g.hasEventListener("dispose",f)&&g.addEventListener("dispose",f),e.get(g)!==h&&(c.update(g.instanceMatrix,a.ARRAY_BUFFER),null!==g.instanceColor&&c.update(g.instanceColor,a.ARRAY_BUFFER),e.set(g,h))),g.isSkinnedMesh){let a=g.skeleton;e.get(a)!==h&&(a.update(),e.set(a,h))}return j},dispose:function(){e=new WeakMap}}}class cH extends P{constructor(a,b,c,d,e,f,g,h,i,j){if(1026!==(j=void 0!==j?j:1026)&&1027!==j)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===j&&(c=1014),void 0===c&&1027===j&&(c=1020),super(null,d,e,f,g,h,j,c,i),this.isDepthTexture=!0,this.image={width:a,height:b},this.magFilter=void 0!==g?g:1003,this.minFilter=void 0!==h?h:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(a){return super.copy(a),this.compareFunction=a.compareFunction,this}toJSON(a){let b=super.toJSON(a);return null!==this.compareFunction&&(b.compareFunction=this.compareFunction),b}}let cI=new P,cJ=new cH(1,1);cJ.compareFunction=515;let cK=new T,cL=new class extends P{constructor(a=null,b=1,c=1,d=1){super(null),this.isData3DTexture=!0,this.image={data:a,width:b,height:c,depth:d},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},cM=new bY,cN=[],cO=[],cP=new Float32Array(16),cQ=new Float32Array(9),cR=new Float32Array(4);function cS(a,b,c){let d=a[0];if(d<=0||d>0)return a;let e=b*c,f=cN[e];if(void 0===f&&(f=new Float32Array(e),cN[e]=f),0!==b){d.toArray(f,0);for(let d=1,e=0;d!==b;++d)e+=c,a[d].toArray(f,e)}return f}function cT(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function cU(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}function cV(a,b){let c=cO[b];void 0===c&&(c=new Int32Array(b),cO[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function cW(a,b){let c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}function cX(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(cT(c,b))return;a.uniform2fv(this.addr,b),cU(c,b)}}function cY(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else if(void 0!==b.r)(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)&&(a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b);else{if(cT(c,b))return;a.uniform3fv(this.addr,b),cU(c,b)}}function cZ(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(cT(c,b))return;a.uniform4fv(this.addr,b),cU(c,b)}}function c$(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(cT(c,b))return;a.uniformMatrix2fv(this.addr,!1,b),cU(c,b)}else{if(cT(c,d))return;cR.set(d),a.uniformMatrix2fv(this.addr,!1,cR),cU(c,d)}}function c_(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(cT(c,b))return;a.uniformMatrix3fv(this.addr,!1,b),cU(c,b)}else{if(cT(c,d))return;cQ.set(d),a.uniformMatrix3fv(this.addr,!1,cQ),cU(c,d)}}function c0(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(cT(c,b))return;a.uniformMatrix4fv(this.addr,!1,b),cU(c,b)}else{if(cT(c,d))return;cP.set(d),a.uniformMatrix4fv(this.addr,!1,cP),cU(c,d)}}function c1(a,b){let c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function c2(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2i(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(cT(c,b))return;a.uniform2iv(this.addr,b),cU(c,b)}}function c3(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3i(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else{if(cT(c,b))return;a.uniform3iv(this.addr,b),cU(c,b)}}function c4(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4i(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(cT(c,b))return;a.uniform4iv(this.addr,b),cU(c,b)}}function c5(a,b){let c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}function c6(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2ui(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(cT(c,b))return;a.uniform2uiv(this.addr,b),cU(c,b)}}function c7(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3ui(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else{if(cT(c,b))return;a.uniform3uiv(this.addr,b),cU(c,b)}}function c8(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4ui(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(cT(c,b))return;a.uniform4uiv(this.addr,b),cU(c,b)}}function c9(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e);let f=this.type===a.SAMPLER_2D_SHADOW?cJ:cI;c.setTexture2D(b||f,e)}function da(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture3D(b||cL,e)}function db(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTextureCube(b||cM,e)}function dc(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2DArray(b||cK,e)}function dd(a,b){a.uniform1fv(this.addr,b)}function de(a,b){let c=cS(b,this.size,2);a.uniform2fv(this.addr,c)}function df(a,b){let c=cS(b,this.size,3);a.uniform3fv(this.addr,c)}function dg(a,b){let c=cS(b,this.size,4);a.uniform4fv(this.addr,c)}function dh(a,b){let c=cS(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function di(a,b){let c=cS(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function dj(a,b){let c=cS(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function dk(a,b){a.uniform1iv(this.addr,b)}function dl(a,b){a.uniform2iv(this.addr,b)}function dm(a,b){a.uniform3iv(this.addr,b)}function dn(a,b){a.uniform4iv(this.addr,b)}function dp(a,b){a.uniform1uiv(this.addr,b)}function dq(a,b){a.uniform2uiv(this.addr,b)}function dr(a,b){a.uniform3uiv(this.addr,b)}function ds(a,b){a.uniform4uiv(this.addr,b)}function dt(a,b,c){let d=this.cache,e=b.length,f=cV(c,e);cT(d,f)||(a.uniform1iv(this.addr,f),cU(d,f));for(let a=0;a!==e;++a)c.setTexture2D(b[a]||cI,f[a])}function du(a,b,c){let d=this.cache,e=b.length,f=cV(c,e);cT(d,f)||(a.uniform1iv(this.addr,f),cU(d,f));for(let a=0;a!==e;++a)c.setTexture3D(b[a]||cL,f[a])}function dv(a,b,c){let d=this.cache,e=b.length,f=cV(c,e);cT(d,f)||(a.uniform1iv(this.addr,f),cU(d,f));for(let a=0;a!==e;++a)c.setTextureCube(b[a]||cM,f[a])}function dw(a,b,c){let d=this.cache,e=b.length,f=cV(c,e);cT(d,f)||(a.uniform1iv(this.addr,f),cU(d,f));for(let a=0;a!==e;++a)c.setTexture2DArray(b[a]||cK,f[a])}class dx{constructor(a,b,c){this.id=a,this.addr=c,this.cache=[],this.type=b.type,this.setValue=function(a){switch(a){case 5126:return cW;case 35664:return cX;case 35665:return cY;case 35666:return cZ;case 35674:return c$;case 35675:return c_;case 35676:return c0;case 5124:case 35670:return c1;case 35667:case 35671:return c2;case 35668:case 35672:return c3;case 35669:case 35673:return c4;case 5125:return c5;case 36294:return c6;case 36295:return c7;case 36296:return c8;case 35678:case 36198:case 36298:case 36306:case 35682:return c9;case 35679:case 36299:case 36307:return da;case 35680:case 36300:case 36308:case 36293:return db;case 36289:case 36303:case 36311:case 36292:return dc}}(b.type)}}class dy{constructor(a,b,c){this.id=a,this.addr=c,this.cache=[],this.type=b.type,this.size=b.size,this.setValue=function(a){switch(a){case 5126:return dd;case 35664:return de;case 35665:return df;case 35666:return dg;case 35674:return dh;case 35675:return di;case 35676:return dj;case 5124:case 35670:return dk;case 35667:case 35671:return dl;case 35668:case 35672:return dm;case 35669:case 35673:return dn;case 5125:return dp;case 36294:return dq;case 36295:return dr;case 36296:return ds;case 35678:case 36198:case 36298:case 36306:case 35682:return dt;case 35679:case 36299:case 36307:return du;case 35680:case 36300:case 36308:case 36293:return dv;case 36289:case 36303:case 36311:case 36292:return dw}}(b.type)}}class dz{constructor(a){this.id=a,this.seq=[],this.map={}}setValue(a,b,c){let d=this.seq;for(let e=0,f=d.length;e!==f;++e){let f=d[e];f.setValue(a,b[f.id],c)}}}let dA=/(\w+)(\])?(\[|\.)?/g;function dB(a,b){a.seq.push(b),a.map[b.id]=b}class dC{constructor(a,b){this.seq=[],this.map={};let c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(let d=0;d<c;++d){let c=a.getActiveUniform(b,d),e=a.getUniformLocation(b,c.name);!function(a,b,c){let d=a.name,e=d.length;for(dA.lastIndex=0;;){let f=dA.exec(d),g=dA.lastIndex,h=f[1],i="]"===f[2],j=f[3];if(i&&(h|=0),void 0===j||"["===j&&g+2===e){dB(c,void 0===j?new dx(h,a,b):new dy(h,a,b));break}{let a=c.map[h];void 0===a&&dB(c,a=new dz(h)),c=a}}}(c,e,this)}}setValue(a,b,c,d){let e=this.map[b];void 0!==e&&e.setValue(a,c,d)}setOptional(a,b,c){let d=b[c];void 0!==d&&this.setValue(a,c,d)}static upload(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){let f=b[e],g=c[f.id];!1!==g.needsUpdate&&f.setValue(a,g.value,d)}}static seqWithValue(a,b){let c=[];for(let d=0,e=a.length;d!==e;++d){let e=a[d];e.id in b&&c.push(e)}return c}}function dD(a,b,c){let d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}let dE=0;function dF(a,b,c){let d=a.getShaderParameter(b,a.COMPILE_STATUS),e=a.getShaderInfoLog(b).trim();if(d&&""===e)return"";let f=/ERROR: 0:(\d+)/.exec(e);if(!f)return e;{let d=parseInt(f[1]);return c.toUpperCase()+"\n\n"+e+"\n\n"+function(a,b){let c=a.split("\n"),d=[],e=Math.max(b-6,0),f=Math.min(b+6,c.length);for(let a=e;a<f;a++){let e=a+1;d.push(`${e===b?">":" "} ${e}: ${c[a]}`)}return d.join("\n")}(a.getShaderSource(b),d)}}function dG(a){return""!==a}function dH(a,b){let c=b.numSpotLightShadows+b.numSpotLightMaps-b.numSpotLightShadowsWithMaps;return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,b.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,c).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,b.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}function dI(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}let dJ=/^[ \t]*#include +<([\w\d./]+)>/gm;function dK(a){return a.replace(dJ,dM)}let dL=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function dM(a,b){let c=b8[b];if(void 0===c){let a=dL.get(b);if(void 0!==a)c=b8[a],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',b,a);else throw Error("Can not resolve #include <"+b+">")}return dK(c)}let dN=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function dO(a){return a.replace(dN,dP)}function dP(a,b,c,d){let e="";for(let a=parseInt(b);a<parseInt(c);a++)e+=d.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return e}function dQ(a){let b=`precision ${a.precision} float;
	precision ${a.precision} int;
	precision ${a.precision} sampler2D;
	precision ${a.precision} samplerCube;
	`;return a.isWebGL2&&(b+=`precision ${a.precision} sampler3D;
		precision ${a.precision} sampler2DArray;
		precision ${a.precision} sampler2DShadow;
		precision ${a.precision} samplerCubeShadow;
		precision ${a.precision} sampler2DArrayShadow;
		precision ${a.precision} isampler2D;
		precision ${a.precision} isampler3D;
		precision ${a.precision} isamplerCube;
		precision ${a.precision} isampler2DArray;
		precision ${a.precision} usampler2D;
		precision ${a.precision} usampler3D;
		precision ${a.precision} usamplerCube;
		precision ${a.precision} usampler2DArray;
		`),"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function dR(a,b,c,d){let i,j,m,n,o,p,q=a.getContext(),r=c.defines,s=c.vertexShader,t=c.fragmentShader,u=(o="SHADOWMAP_TYPE_BASIC",1===c.shadowMapType?o="SHADOWMAP_TYPE_PCF":2===c.shadowMapType?o="SHADOWMAP_TYPE_PCF_SOFT":3===c.shadowMapType&&(o="SHADOWMAP_TYPE_VSM"),o),v=function(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case 301:case 302:b="ENVMAP_TYPE_CUBE";break;case 306:b="ENVMAP_TYPE_CUBE_UV"}return b}(c),w=(p="ENVMAP_MODE_REFLECTION",c.envMap&&302===c.envMapMode&&(p="ENVMAP_MODE_REFRACTION"),p),x=function(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case 0:b="ENVMAP_BLENDING_MULTIPLY";break;case 1:b="ENVMAP_BLENDING_MIX";break;case 2:b="ENVMAP_BLENDING_ADD"}return b}(c),y=function(a){let b=a.envMapCubeUVHeight;if(null===b)return null;let c=Math.log2(b)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,c),112)),texelHeight:1/b,maxMip:c}}(c),z=c.isWebGL2?"":[c.extensionDerivatives||c.envMapCubeUVHeight||c.bumpMap||c.normalMapTangentSpace||c.clearcoatNormalMap||c.flatShading||c.alphaToCoverage||"physical"===c.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(c.extensionFragDepth||c.logarithmicDepthBuffer)&&c.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",c.extensionDrawBuffers&&c.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(c.extensionShaderTextureLOD||c.envMap||c.transmission)&&c.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(dG).join("\n"),A=[c.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",c.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(dG).join("\n"),B=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(r),C=q.createProgram(),D=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?((i=["#define SHADER_TYPE "+c.shaderType,"#define SHADER_NAME "+c.shaderName,B].filter(dG).join("\n")).length>0&&(i+="\n"),(j=[z,"#define SHADER_TYPE "+c.shaderType,"#define SHADER_NAME "+c.shaderName,B].filter(dG).join("\n")).length>0&&(j+="\n")):(i=[dQ(c),"#define SHADER_TYPE "+c.shaderType,"#define SHADER_NAME "+c.shaderName,B,c.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",c.batching?"#define USE_BATCHING":"",c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+w:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",c.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",c.displacementMap?"#define USE_DISPLACEMENTMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.anisotropy?"#define USE_ANISOTROPY":"",c.anisotropyMap?"#define USE_ANISOTROPYMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",c.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",c.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.alphaHash?"#define USE_ALPHAHASH":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",c.mapUv?"#define MAP_UV "+c.mapUv:"",c.alphaMapUv?"#define ALPHAMAP_UV "+c.alphaMapUv:"",c.lightMapUv?"#define LIGHTMAP_UV "+c.lightMapUv:"",c.aoMapUv?"#define AOMAP_UV "+c.aoMapUv:"",c.emissiveMapUv?"#define EMISSIVEMAP_UV "+c.emissiveMapUv:"",c.bumpMapUv?"#define BUMPMAP_UV "+c.bumpMapUv:"",c.normalMapUv?"#define NORMALMAP_UV "+c.normalMapUv:"",c.displacementMapUv?"#define DISPLACEMENTMAP_UV "+c.displacementMapUv:"",c.metalnessMapUv?"#define METALNESSMAP_UV "+c.metalnessMapUv:"",c.roughnessMapUv?"#define ROUGHNESSMAP_UV "+c.roughnessMapUv:"",c.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+c.anisotropyMapUv:"",c.clearcoatMapUv?"#define CLEARCOATMAP_UV "+c.clearcoatMapUv:"",c.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+c.clearcoatNormalMapUv:"",c.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+c.clearcoatRoughnessMapUv:"",c.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+c.iridescenceMapUv:"",c.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+c.iridescenceThicknessMapUv:"",c.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+c.sheenColorMapUv:"",c.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+c.sheenRoughnessMapUv:"",c.specularMapUv?"#define SPECULARMAP_UV "+c.specularMapUv:"",c.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+c.specularColorMapUv:"",c.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+c.specularIntensityMapUv:"",c.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+c.transmissionMapUv:"",c.thicknessMapUv?"#define THICKNESSMAP_UV "+c.thicknessMapUv:"",c.vertexTangents&&!1===c.flatShading?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUv1s?"#define USE_UV1":"",c.vertexUv2s?"#define USE_UV2":"",c.vertexUv3s?"#define USE_UV3":"",c.pointsUvs?"#define USE_POINTS_UV":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&&!1===c.flatShading?"#define USE_MORPHNORMALS":"",c.morphColors&&c.isWebGL2?"#define USE_MORPHCOLORS":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+c.morphTextureStride:"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_COUNT "+c.morphTargetsCount:"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+u:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.numLightProbes>0?"#define USE_LIGHT_PROBES":"",c.useLegacyLights?"#define LEGACY_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(dG).join("\n"),j=[z,dQ(c),"#define SHADER_TYPE "+c.shaderType,"#define SHADER_NAME "+c.shaderName,B,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+v:"",c.envMap?"#define "+w:"",c.envMap?"#define "+x:"",y?"#define CUBEUV_TEXEL_WIDTH "+y.texelWidth:"",y?"#define CUBEUV_TEXEL_HEIGHT "+y.texelHeight:"",y?"#define CUBEUV_MAX_MIP "+y.maxMip+".0":"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",c.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.anisotropy?"#define USE_ANISOTROPY":"",c.anisotropyMap?"#define USE_ANISOTROPYMAP":"",c.clearcoat?"#define USE_CLEARCOAT":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.iridescence?"#define USE_IRIDESCENCE":"",c.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",c.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",c.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.alphaTest?"#define USE_ALPHATEST":"",c.alphaHash?"#define USE_ALPHAHASH":"",c.sheen?"#define USE_SHEEN":"",c.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.vertexTangents&&!1===c.flatShading?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUv1s?"#define USE_UV1":"",c.vertexUv2s?"#define USE_UV2":"",c.vertexUv3s?"#define USE_UV3":"",c.pointsUvs?"#define USE_POINTS_UV":"",c.gradientMap?"#define USE_GRADIENTMAP":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+u:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.numLightProbes>0?"#define USE_LIGHT_PROBES":"",c.useLegacyLights?"#define LEGACY_LIGHTS":"",c.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==c.toneMapping?"#define TONE_MAPPING":"",0!==c.toneMapping?b8.tonemapping_pars_fragment:"",0!==c.toneMapping?function(a,b){let c;switch(b){case 1:c="Linear";break;case 2:c="Reinhard";break;case 3:c="OptimizedCineon";break;case 4:c="ACESFilmic";break;case 6:c="AgX";break;case 5:c="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),c="Linear"}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}("toneMapping",c.toneMapping):"",c.dithering?"#define DITHERING":"",c.opaque?"#define OPAQUE":"",b8.colorspace_pars_fragment,function(a,b){let c=function(a){let b,c=H.getPrimaries(H.workingColorSpace),d=H.getPrimaries(a);switch(c===d?b="":"p3"===c&&d===k?b="LinearDisplayP3ToLinearSRGB":c===k&&"p3"===d&&(b="LinearSRGBToLinearDisplayP3"),a){case f:case h:return[b,"LinearTransferOETF"];case e:case g:return[b,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",a),[b,"LinearTransferOETF"]}}(b);return`vec4 ${a}( vec4 value ) { return ${c[0]}( ${c[1]}( value ) ); }`}("linearToOutputTexel",c.outputColorSpace),c.useDepthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(dG).join("\n")),s=dI(s=dH(s=dK(s),c),c),t=dI(t=dH(t=dK(t),c),c),s=dO(s),t=dO(t),c.isWebGL2&&!0!==c.isRawShaderMaterial&&(D="#version 300 es\n",i=[A,"precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture"].join("\n")+"\n"+i,j=["precision mediump sampler2DArray;\n#define varying in",c.glslVersion===l?"":"layout(location = 0) out highp vec4 pc_fragColor;",c.glslVersion===l?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+j);let E=D+i+s,F=D+j+t,G=dD(q,q.VERTEX_SHADER,E),I=dD(q,q.FRAGMENT_SHADER,F);function J(b){if(a.debug.checkShaderErrors){let c=q.getProgramInfoLog(C).trim(),d=q.getShaderInfoLog(G).trim(),e=q.getShaderInfoLog(I).trim(),f=!0,g=!0;if(!1===q.getProgramParameter(C,q.LINK_STATUS))if(f=!1,"function"==typeof a.debug.onShaderError)a.debug.onShaderError(q,C,G,I);else{let a=dF(q,G,"vertex"),d=dF(q,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+q.getError()+" - VALIDATE_STATUS "+q.getProgramParameter(C,q.VALIDATE_STATUS)+"\n\nMaterial Name: "+b.name+"\nMaterial Type: "+b.type+"\n\nProgram Info Log: "+c+"\n"+a+"\n"+d)}else""!==c?console.warn("THREE.WebGLProgram: Program Info Log:",c):(""===d||""===e)&&(g=!1);g&&(b.diagnostics={runnable:f,programLog:c,vertexShader:{log:d,prefix:i},fragmentShader:{log:e,prefix:j}})}q.deleteShader(G),q.deleteShader(I),m=new dC(q,C),n=function(a,b){let c={},d=a.getProgramParameter(b,a.ACTIVE_ATTRIBUTES);for(let e=0;e<d;e++){let d=a.getActiveAttrib(b,e),f=d.name,g=1;d.type===a.FLOAT_MAT2&&(g=2),d.type===a.FLOAT_MAT3&&(g=3),d.type===a.FLOAT_MAT4&&(g=4),c[f]={type:d.type,location:a.getAttribLocation(b,f),locationSize:g}}return c}(q,C)}q.attachShader(C,G),q.attachShader(C,I),void 0!==c.index0AttributeName?q.bindAttribLocation(C,0,c.index0AttributeName):!0===c.morphTargets&&q.bindAttribLocation(C,0,"position"),q.linkProgram(C),this.getUniforms=function(){return void 0===m&&J(this),m},this.getAttributes=function(){return void 0===n&&J(this),n};let K=!1===c.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===K&&(K=q.getProgramParameter(C,37297)),K},this.destroy=function(){d.releaseStatesOfProgram(this),q.deleteProgram(C),this.program=void 0},this.type=c.shaderType,this.name=c.shaderName,this.id=dE++,this.cacheKey=b,this.usedTimes=1,this.program=C,this.vertexShader=G,this.fragmentShader=I,this}let dS=0;class dT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(a){let b=a.vertexShader,c=a.fragmentShader,d=this._getShaderStage(b),e=this._getShaderStage(c),f=this._getShaderCacheForMaterial(a);return!1===f.has(d)&&(f.add(d),d.usedTimes++),!1===f.has(e)&&(f.add(e),e.usedTimes++),this}remove(a){for(let b of this.materialCache.get(a))b.usedTimes--,0===b.usedTimes&&this.shaderCache.delete(b.code);return this.materialCache.delete(a),this}getVertexShaderID(a){return this._getShaderStage(a.vertexShader).id}getFragmentShaderID(a){return this._getShaderStage(a.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(a){let b=this.materialCache,c=b.get(a);return void 0===c&&(c=new Set,b.set(a,c)),c}_getShaderStage(a){let b=this.shaderCache,c=b.get(a);return void 0===c&&(c=new dU(a),b.set(a,c)),c}}class dU{constructor(a){this.id=dS++,this.code=a,this.usedTimes=0}}function dV(a,b,c,d,e,g,h){let i=new aI,k=new dT,l=new Set,m=[],n=e.isWebGL2,o=e.logarithmicDepthBuffer,p=e.vertexTextures,q=e.precision,r={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function s(a){return(l.add(a),0===a)?"uv":`uv${a}`}return{getParameters:function(g,i,m,t,u){let v,w,x,y,z=t.fog,A=u.geometry,B=g.isMeshStandardMaterial?t.environment:null,C=(g.isMeshStandardMaterial?c:b).get(g.envMap||B),D=C&&306===C.mapping?C.image.height:null,E=r[g.type];null!==g.precision&&(q=e.getMaxPrecision(g.precision))!==g.precision&&console.warn("THREE.WebGLProgram.getParameters:",g.precision,"not supported, using",q,"instead.");let F=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,G=void 0!==F?F.length:0,I=0;if(void 0!==A.morphAttributes.position&&(I=1),void 0!==A.morphAttributes.normal&&(I=2),void 0!==A.morphAttributes.color&&(I=3),E){let a=ca[E];v=a.vertexShader,w=a.fragmentShader}else v=g.vertexShader,w=g.fragmentShader,k.update(g),x=k.getVertexShaderID(g),y=k.getFragmentShaderID(g);let J=a.getRenderTarget(),K=!0===u.isInstancedMesh,L=!0===u.isBatchedMesh,M=!!g.map,N=!!g.matcap,O=!!C,P=!!g.aoMap,Q=!!g.lightMap,R=!!g.bumpMap,S=!!g.normalMap,T=!!g.displacementMap,U=!!g.emissiveMap,V=!!g.metalnessMap,W=!!g.roughnessMap,X=g.anisotropy>0,Y=g.clearcoat>0,Z=g.iridescence>0,$=g.sheen>0,_=g.transmission>0,aa=X&&!!g.anisotropyMap,ab=Y&&!!g.clearcoatMap,ac=Y&&!!g.clearcoatNormalMap,ad=Y&&!!g.clearcoatRoughnessMap,ae=Z&&!!g.iridescenceMap,af=Z&&!!g.iridescenceThicknessMap,ag=$&&!!g.sheenColorMap,ah=$&&!!g.sheenRoughnessMap,ai=!!g.specularMap,aj=!!g.specularColorMap,ak=!!g.specularIntensityMap,al=_&&!!g.transmissionMap,am=_&&!!g.thicknessMap,an=!!g.gradientMap,ao=!!g.alphaMap,ap=g.alphaTest>0,aq=!!g.alphaHash,ar=!!g.extensions,as=0;g.toneMapped&&(null===J||!0===J.isXRRenderTarget)&&(as=a.toneMapping);let at={isWebGL2:n,shaderID:E,shaderType:g.type,shaderName:g.name,vertexShader:v,fragmentShader:w,defines:g.defines,customVertexShaderID:x,customFragmentShaderID:y,isRawShaderMaterial:!0===g.isRawShaderMaterial,glslVersion:g.glslVersion,precision:q,batching:L,instancing:K,instancingColor:K&&null!==u.instanceColor,supportsVertexTextures:p,outputColorSpace:null===J?a.outputColorSpace:!0===J.isXRRenderTarget?J.texture.colorSpace:f,alphaToCoverage:!!g.alphaToCoverage,map:M,matcap:N,envMap:O,envMapMode:O&&C.mapping,envMapCubeUVHeight:D,aoMap:P,lightMap:Q,bumpMap:R,normalMap:S,displacementMap:p&&T,emissiveMap:U,normalMapObjectSpace:S&&1===g.normalMapType,normalMapTangentSpace:S&&0===g.normalMapType,metalnessMap:V,roughnessMap:W,anisotropy:X,anisotropyMap:aa,clearcoat:Y,clearcoatMap:ab,clearcoatNormalMap:ac,clearcoatRoughnessMap:ad,iridescence:Z,iridescenceMap:ae,iridescenceThicknessMap:af,sheen:$,sheenColorMap:ag,sheenRoughnessMap:ah,specularMap:ai,specularColorMap:aj,specularIntensityMap:ak,transmission:_,transmissionMap:al,thicknessMap:am,gradientMap:an,opaque:!1===g.transparent&&1===g.blending&&!1===g.alphaToCoverage,alphaMap:ao,alphaTest:ap,alphaHash:aq,combine:g.combine,mapUv:M&&s(g.map.channel),aoMapUv:P&&s(g.aoMap.channel),lightMapUv:Q&&s(g.lightMap.channel),bumpMapUv:R&&s(g.bumpMap.channel),normalMapUv:S&&s(g.normalMap.channel),displacementMapUv:T&&s(g.displacementMap.channel),emissiveMapUv:U&&s(g.emissiveMap.channel),metalnessMapUv:V&&s(g.metalnessMap.channel),roughnessMapUv:W&&s(g.roughnessMap.channel),anisotropyMapUv:aa&&s(g.anisotropyMap.channel),clearcoatMapUv:ab&&s(g.clearcoatMap.channel),clearcoatNormalMapUv:ac&&s(g.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ad&&s(g.clearcoatRoughnessMap.channel),iridescenceMapUv:ae&&s(g.iridescenceMap.channel),iridescenceThicknessMapUv:af&&s(g.iridescenceThicknessMap.channel),sheenColorMapUv:ag&&s(g.sheenColorMap.channel),sheenRoughnessMapUv:ah&&s(g.sheenRoughnessMap.channel),specularMapUv:ai&&s(g.specularMap.channel),specularColorMapUv:aj&&s(g.specularColorMap.channel),specularIntensityMapUv:ak&&s(g.specularIntensityMap.channel),transmissionMapUv:al&&s(g.transmissionMap.channel),thicknessMapUv:am&&s(g.thicknessMap.channel),alphaMapUv:ao&&s(g.alphaMap.channel),vertexTangents:!!A.attributes.tangent&&(S||X),vertexColors:g.vertexColors,vertexAlphas:!0===g.vertexColors&&!!A.attributes.color&&4===A.attributes.color.itemSize,pointsUvs:!0===u.isPoints&&!!A.attributes.uv&&(M||ao),fog:!!z,useFog:!0===g.fog,fogExp2:!!z&&z.isFogExp2,flatShading:!0===g.flatShading,sizeAttenuation:!0===g.sizeAttenuation,logarithmicDepthBuffer:o,skinning:!0===u.isSkinnedMesh,morphTargets:void 0!==A.morphAttributes.position,morphNormals:void 0!==A.morphAttributes.normal,morphColors:void 0!==A.morphAttributes.color,morphTargetsCount:G,morphTextureStride:I,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numSpotLightMaps:i.spotLightMap.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numDirLightShadows:i.directionalShadowMap.length,numPointLightShadows:i.pointShadowMap.length,numSpotLightShadows:i.spotShadowMap.length,numSpotLightShadowsWithMaps:i.numSpotLightShadowsWithMaps,numLightProbes:i.numLightProbes,numClippingPlanes:h.numPlanes,numClipIntersection:h.numIntersection,dithering:g.dithering,shadowMapEnabled:a.shadowMap.enabled&&m.length>0,shadowMapType:a.shadowMap.type,toneMapping:as,useLegacyLights:a._useLegacyLights,decodeVideoTexture:M&&!0===g.map.isVideoTexture&&H.getTransfer(g.map.colorSpace)===j,premultipliedAlpha:g.premultipliedAlpha,doubleSided:2===g.side,flipSided:1===g.side,useDepthPacking:g.depthPacking>=0,depthPacking:g.depthPacking||0,index0AttributeName:g.index0AttributeName,extensionDerivatives:ar&&!0===g.extensions.derivatives,extensionFragDepth:ar&&!0===g.extensions.fragDepth,extensionDrawBuffers:ar&&!0===g.extensions.drawBuffers,extensionShaderTextureLOD:ar&&!0===g.extensions.shaderTextureLOD,extensionClipCullDistance:ar&&!0===g.extensions.clipCullDistance&&d.has("WEBGL_clip_cull_distance"),extensionMultiDraw:ar&&!0===g.extensions.multiDraw&&d.has("WEBGL_multi_draw"),rendererExtensionFragDepth:n||d.has("EXT_frag_depth"),rendererExtensionDrawBuffers:n||d.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:n||d.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:d.has("KHR_parallel_shader_compile"),customProgramCacheKey:g.customProgramCacheKey()};return at.vertexUv1s=l.has(1),at.vertexUv2s=l.has(2),at.vertexUv3s=l.has(3),l.clear(),at},getProgramCacheKey:function(b){var c,d,e,f;let g=[];if(b.shaderID?g.push(b.shaderID):(g.push(b.customVertexShaderID),g.push(b.customFragmentShaderID)),void 0!==b.defines)for(let a in b.defines)g.push(a),g.push(b.defines[a]);return!1===b.isRawShaderMaterial&&(c=g,d=b,c.push(d.precision),c.push(d.outputColorSpace),c.push(d.envMapMode),c.push(d.envMapCubeUVHeight),c.push(d.mapUv),c.push(d.alphaMapUv),c.push(d.lightMapUv),c.push(d.aoMapUv),c.push(d.bumpMapUv),c.push(d.normalMapUv),c.push(d.displacementMapUv),c.push(d.emissiveMapUv),c.push(d.metalnessMapUv),c.push(d.roughnessMapUv),c.push(d.anisotropyMapUv),c.push(d.clearcoatMapUv),c.push(d.clearcoatNormalMapUv),c.push(d.clearcoatRoughnessMapUv),c.push(d.iridescenceMapUv),c.push(d.iridescenceThicknessMapUv),c.push(d.sheenColorMapUv),c.push(d.sheenRoughnessMapUv),c.push(d.specularMapUv),c.push(d.specularColorMapUv),c.push(d.specularIntensityMapUv),c.push(d.transmissionMapUv),c.push(d.thicknessMapUv),c.push(d.combine),c.push(d.fogExp2),c.push(d.sizeAttenuation),c.push(d.morphTargetsCount),c.push(d.morphAttributeCount),c.push(d.numDirLights),c.push(d.numPointLights),c.push(d.numSpotLights),c.push(d.numSpotLightMaps),c.push(d.numHemiLights),c.push(d.numRectAreaLights),c.push(d.numDirLightShadows),c.push(d.numPointLightShadows),c.push(d.numSpotLightShadows),c.push(d.numSpotLightShadowsWithMaps),c.push(d.numLightProbes),c.push(d.shadowMapType),c.push(d.toneMapping),c.push(d.numClippingPlanes),c.push(d.numClipIntersection),c.push(d.depthPacking),e=g,f=b,i.disableAll(),f.isWebGL2&&i.enable(0),f.supportsVertexTextures&&i.enable(1),f.instancing&&i.enable(2),f.instancingColor&&i.enable(3),f.matcap&&i.enable(4),f.envMap&&i.enable(5),f.normalMapObjectSpace&&i.enable(6),f.normalMapTangentSpace&&i.enable(7),f.clearcoat&&i.enable(8),f.iridescence&&i.enable(9),f.alphaTest&&i.enable(10),f.vertexColors&&i.enable(11),f.vertexAlphas&&i.enable(12),f.vertexUv1s&&i.enable(13),f.vertexUv2s&&i.enable(14),f.vertexUv3s&&i.enable(15),f.vertexTangents&&i.enable(16),f.anisotropy&&i.enable(17),f.alphaHash&&i.enable(18),f.batching&&i.enable(19),e.push(i.mask),i.disableAll(),f.fog&&i.enable(0),f.useFog&&i.enable(1),f.flatShading&&i.enable(2),f.logarithmicDepthBuffer&&i.enable(3),f.skinning&&i.enable(4),f.morphTargets&&i.enable(5),f.morphNormals&&i.enable(6),f.morphColors&&i.enable(7),f.premultipliedAlpha&&i.enable(8),f.shadowMapEnabled&&i.enable(9),f.useLegacyLights&&i.enable(10),f.doubleSided&&i.enable(11),f.flipSided&&i.enable(12),f.useDepthPacking&&i.enable(13),f.dithering&&i.enable(14),f.transmission&&i.enable(15),f.sheen&&i.enable(16),f.opaque&&i.enable(17),f.pointsUvs&&i.enable(18),f.decodeVideoTexture&&i.enable(19),f.alphaToCoverage&&i.enable(20),e.push(i.mask),g.push(a.outputColorSpace)),g.push(b.customProgramCacheKey),g.join()},getUniforms:function(a){let b,c=r[a.type];if(c){let a=ca[c];b=bQ.clone(a.uniforms)}else b=a.uniforms;return b},acquireProgram:function(b,c){let d;for(let a=0,b=m.length;a<b;a++){let b=m[a];if(b.cacheKey===c){d=b,++d.usedTimes;break}}return void 0===d&&(d=new dR(a,c,b,g),m.push(d)),d},releaseProgram:function(a){if(0==--a.usedTimes){let b=m.indexOf(a);m[b]=m[m.length-1],m.pop(),a.destroy()}},releaseShaderCache:function(a){k.remove(a)},programs:m,dispose:function(){k.dispose()}}}function dW(){let a=new WeakMap;return{get:function(b){let c=a.get(b);return void 0===c&&(c={},a.set(b,c)),c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function dX(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function dY(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function dZ(){let a=[],b=0,c=[],d=[],e=[];function f(c,d,e,f,g,h){let i=a[b];return void 0===i?(i={id:c.id,object:c,geometry:d,material:e,groupOrder:f,renderOrder:c.renderOrder,z:g,group:h},a[b]=i):(i.id=c.id,i.object=c,i.geometry=d,i.material=e,i.groupOrder=f,i.renderOrder=c.renderOrder,i.z=g,i.group=h),b++,i}return{opaque:c,transmissive:d,transparent:e,init:function(){b=0,c.length=0,d.length=0,e.length=0},push:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.push(k):!0===g.transparent?e.push(k):c.push(k)},unshift:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.unshift(k):!0===g.transparent?e.unshift(k):c.unshift(k)},finish:function(){for(let c=b,d=a.length;c<d;c++){let b=a[c];if(null===b.id)break;b.id=null,b.object=null,b.geometry=null,b.material=null,b.group=null}},sort:function(a,b){c.length>1&&c.sort(a||dX),d.length>1&&d.sort(b||dY),e.length>1&&e.sort(b||dY)}}}function d$(){let a=new WeakMap;return{get:function(b,c){let d,e=a.get(b);return void 0===e?(d=new dZ,a.set(b,[d])):c>=e.length?(d=new dZ,e.push(d)):d=e[c],d},dispose:function(){a=new WeakMap}}}function d_(){let a={};return{get:function(b){let c;if(void 0!==a[b.id])return a[b.id];switch(b.type){case"DirectionalLight":c={direction:new V,color:new ba};break;case"SpotLight":c={position:new V,direction:new V,color:new ba,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new V,color:new ba,distance:0,decay:0};break;case"HemisphereLight":c={direction:new V,skyColor:new ba,groundColor:new ba};break;case"RectAreaLight":c={color:new ba,position:new V,halfWidth:new V,halfHeight:new V}}return a[b.id]=c,c}}}let d0=0;function d1(a,b){return 2*!!b.castShadow-2*!!a.castShadow+ +!!b.map-!!a.map}function d2(a,b){let c=new d_,d=function(){let a={};return{get:function(b){let c;if(void 0!==a[b.id])return a[b.id];switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new w};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new w,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let a=0;a<9;a++)e.probe.push(new V);let f=new V,g=new ax,h=new ax;return{setup:function(f,g){let h=0,i=0,j=0;for(let a=0;a<9;a++)e.probe[a].set(0,0,0);let k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f.sort(d1);let v=!0===g?Math.PI:1;for(let a=0,b=f.length;a<b;a++){let b=f[a],g=b.color,w=b.intensity,x=b.distance,y=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)h+=g.r*w*v,i+=g.g*w*v,j+=g.b*w*v;else if(b.isLightProbe){for(let a=0;a<9;a++)e.probe[a].addScaledVector(b.sh.coefficients[a],w);u++}else if(b.isDirectionalLight){let a=c.get(b);if(a.color.copy(b.color).multiplyScalar(b.intensity*v),b.castShadow){let a=b.shadow,c=d.get(b);c.shadowBias=a.bias,c.shadowNormalBias=a.normalBias,c.shadowRadius=a.radius,c.shadowMapSize=a.mapSize,e.directionalShadow[k]=c,e.directionalShadowMap[k]=y,e.directionalShadowMatrix[k]=b.shadow.matrix,p++}e.directional[k]=a,k++}else if(b.isSpotLight){let a=c.get(b);a.position.setFromMatrixPosition(b.matrixWorld),a.color.copy(g).multiplyScalar(w*v),a.distance=x,a.coneCos=Math.cos(b.angle),a.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),a.decay=b.decay,e.spot[m]=a;let f=b.shadow;if(b.map&&(e.spotLightMap[s]=b.map,s++,f.updateMatrices(b),b.castShadow&&t++),e.spotLightMatrix[m]=f.matrix,b.castShadow){let a=d.get(b);a.shadowBias=f.bias,a.shadowNormalBias=f.normalBias,a.shadowRadius=f.radius,a.shadowMapSize=f.mapSize,e.spotShadow[m]=a,e.spotShadowMap[m]=y,r++}m++}else if(b.isRectAreaLight){let a=c.get(b);a.color.copy(g).multiplyScalar(w),a.halfWidth.set(.5*b.width,0,0),a.halfHeight.set(0,.5*b.height,0),e.rectArea[n]=a,n++}else if(b.isPointLight){let a=c.get(b);if(a.color.copy(b.color).multiplyScalar(b.intensity*v),a.distance=b.distance,a.decay=b.decay,b.castShadow){let a=b.shadow,c=d.get(b);c.shadowBias=a.bias,c.shadowNormalBias=a.normalBias,c.shadowRadius=a.radius,c.shadowMapSize=a.mapSize,c.shadowCameraNear=a.camera.near,c.shadowCameraFar=a.camera.far,e.pointShadow[l]=c,e.pointShadowMap[l]=y,e.pointShadowMatrix[l]=b.shadow.matrix,q++}e.point[l]=a,l++}else if(b.isHemisphereLight){let a=c.get(b);a.skyColor.copy(b.color).multiplyScalar(w*v),a.groundColor.copy(b.groundColor).multiplyScalar(w*v),e.hemi[o]=a,o++}}n>0&&(b.isWebGL2?!0===a.has("OES_texture_float_linear")?(e.rectAreaLTC1=b9.LTC_FLOAT_1,e.rectAreaLTC2=b9.LTC_FLOAT_2):(e.rectAreaLTC1=b9.LTC_HALF_1,e.rectAreaLTC2=b9.LTC_HALF_2):!0===a.has("OES_texture_float_linear")?(e.rectAreaLTC1=b9.LTC_FLOAT_1,e.rectAreaLTC2=b9.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(e.rectAreaLTC1=b9.LTC_HALF_1,e.rectAreaLTC2=b9.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),e.ambient[0]=h,e.ambient[1]=i,e.ambient[2]=j;let w=e.hash;(w.directionalLength!==k||w.pointLength!==l||w.spotLength!==m||w.rectAreaLength!==n||w.hemiLength!==o||w.numDirectionalShadows!==p||w.numPointShadows!==q||w.numSpotShadows!==r||w.numSpotMaps!==s||w.numLightProbes!==u)&&(e.directional.length=k,e.spot.length=m,e.rectArea.length=n,e.point.length=l,e.hemi.length=o,e.directionalShadow.length=p,e.directionalShadowMap.length=p,e.pointShadow.length=q,e.pointShadowMap.length=q,e.spotShadow.length=r,e.spotShadowMap.length=r,e.directionalShadowMatrix.length=p,e.pointShadowMatrix.length=q,e.spotLightMatrix.length=r+s-t,e.spotLightMap.length=s,e.numSpotLightShadowsWithMaps=t,e.numLightProbes=u,w.directionalLength=k,w.pointLength=l,w.spotLength=m,w.rectAreaLength=n,w.hemiLength=o,w.numDirectionalShadows=p,w.numPointShadows=q,w.numSpotShadows=r,w.numSpotMaps=s,w.numLightProbes=u,e.version=d0++)},setupView:function(a,b){let c=0,d=0,i=0,j=0,k=0,l=b.matrixWorldInverse;for(let b=0,m=a.length;b<m;b++){let m=a[b];if(m.isDirectionalLight){let a=e.directional[c];a.direction.setFromMatrixPosition(m.matrixWorld),f.setFromMatrixPosition(m.target.matrixWorld),a.direction.sub(f),a.direction.transformDirection(l),c++}else if(m.isSpotLight){let a=e.spot[i];a.position.setFromMatrixPosition(m.matrixWorld),a.position.applyMatrix4(l),a.direction.setFromMatrixPosition(m.matrixWorld),f.setFromMatrixPosition(m.target.matrixWorld),a.direction.sub(f),a.direction.transformDirection(l),i++}else if(m.isRectAreaLight){let a=e.rectArea[j];a.position.setFromMatrixPosition(m.matrixWorld),a.position.applyMatrix4(l),h.identity(),g.copy(m.matrixWorld),g.premultiply(l),h.extractRotation(g),a.halfWidth.set(.5*m.width,0,0),a.halfHeight.set(0,.5*m.height,0),a.halfWidth.applyMatrix4(h),a.halfHeight.applyMatrix4(h),j++}else if(m.isPointLight){let a=e.point[d];a.position.setFromMatrixPosition(m.matrixWorld),a.position.applyMatrix4(l),d++}else if(m.isHemisphereLight){let a=e.hemi[k];a.direction.setFromMatrixPosition(m.matrixWorld),a.direction.transformDirection(l),k++}}},state:e}}function d3(a,b){let c=new d2(a,b),d=[],e=[];return{init:function(){d.length=0,e.length=0},state:{lightsArray:d,shadowsArray:e,lights:c},setupLights:function(a){c.setup(d,a)},setupLightsView:function(a){c.setupView(d,a)},pushLight:function(a){d.push(a)},pushShadow:function(a){e.push(a)}}}function d4(a,b){let c=new WeakMap;return{get:function(d,e=0){let f,g=c.get(d);return void 0===g?(f=new d3(a,b),c.set(d,[f])):e>=g.length?(f=new d3(a,b),g.push(f)):f=g[e],f},dispose:function(){c=new WeakMap}}}class d5 extends bd{constructor(a){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)}copy(a){return super.copy(a),this.depthPacking=a.depthPacking,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this}}class d6 extends bd{constructor(a){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(a)}copy(a){return super.copy(a),this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this}}function d7(a,b,c){let d=new b4,e=new w,f=new w,g=new Q,h=new d5({depthPacking:3201}),i=new d6,j={},k=c.maxTextureSize,l={0:1,1:0,2:2},m=new bR({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new w},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),n=m.clone();n.defines.HORIZONTAL_PASS=1;let o=new bs;o.setAttribute("position",new bh(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let p=new bK(o,m),q=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let r=this.type;function s(b,c,d,e){let f=null,g=!0===d.isPointLight?b.customDistanceMaterial:b.customDepthMaterial;if(void 0!==g)f=g;else if(f=!0===d.isPointLight?i:h,a.localClippingEnabled&&!0===c.clipShadows&&Array.isArray(c.clippingPlanes)&&0!==c.clippingPlanes.length||c.displacementMap&&0!==c.displacementScale||c.alphaMap&&c.alphaTest>0||c.map&&c.alphaTest>0){let a=f.uuid,b=c.uuid,d=j[a];void 0===d&&(d={},j[a]=d);let e=d[b];void 0===e&&(e=f.clone(),d[b]=e,c.addEventListener("dispose",t)),f=e}return f.visible=c.visible,f.wireframe=c.wireframe,3===e?f.side=null!==c.shadowSide?c.shadowSide:c.side:f.side=null!==c.shadowSide?c.shadowSide:l[c.side],f.alphaMap=c.alphaMap,f.alphaTest=c.alphaTest,f.map=c.map,f.clipShadows=c.clipShadows,f.clippingPlanes=c.clippingPlanes,f.clipIntersection=c.clipIntersection,f.displacementMap=c.displacementMap,f.displacementScale=c.displacementScale,f.displacementBias=c.displacementBias,f.wireframeLinewidth=c.wireframeLinewidth,f.linewidth=c.linewidth,!0===d.isPointLight&&!0===f.isMeshDistanceMaterial&&(a.properties.get(f).light=d),f}function t(a){for(let b in a.target.removeEventListener("dispose",t),j){let c=j[b],d=a.target.uuid;d in c&&(c[d].dispose(),delete c[d])}}this.render=function(c,h,i){if(!1===q.enabled||!1===q.autoUpdate&&!1===q.needsUpdate||0===c.length)return;let j=a.getRenderTarget(),l=a.getActiveCubeFace(),o=a.getActiveMipmapLevel(),t=a.state;t.setBlending(0),t.buffers.color.setClear(1,1,1,1),t.buffers.depth.setTest(!0),t.setScissorTest(!1);let u=3!==r&&3===this.type,v=3===r&&3!==this.type;for(let j=0,l=c.length;j<l;j++){let l=c[j],o=l.shadow;if(void 0===o){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===o.autoUpdate&&!1===o.needsUpdate)continue;e.copy(o.mapSize);let q=o.getFrameExtents();if(e.multiply(q),f.copy(o.mapSize),(e.x>k||e.y>k)&&(e.x>k&&(f.x=Math.floor(k/q.x),e.x=f.x*q.x,o.mapSize.x=f.x),e.y>k&&(f.y=Math.floor(k/q.y),e.y=f.y*q.y,o.mapSize.y=f.y)),null===o.map||!0===u||!0===v){let a=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==o.map&&o.map.dispose(),o.map=new S(e.x,e.y,a),o.map.texture.name=l.name+".shadowMap",o.camera.updateProjectionMatrix()}a.setRenderTarget(o.map),a.clear();let r=o.getViewportCount();for(let c=0;c<r;c++){let e=o.getViewport(c);g.set(f.x*e.x,f.y*e.y,f.x*e.z,f.y*e.w),t.viewport(g),o.updateMatrices(l,c),d=o.getFrustum(),function c(e,f,g,h,i){if(!1===e.visible)return;if(e.layers.test(f.layers)&&(e.isMesh||e.isLine||e.isPoints)&&(e.castShadow||e.receiveShadow&&3===i)&&(!e.frustumCulled||d.intersectsObject(e))){e.modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,e.matrixWorld);let c=b.update(e),d=e.material;if(Array.isArray(d)){let b=c.groups;for(let j=0,k=b.length;j<k;j++){let k=b[j],l=d[k.materialIndex];if(l&&l.visible){let b=s(e,l,h,i);e.onBeforeShadow(a,e,f,g,c,b,k),a.renderBufferDirect(g,null,c,b,e,k),e.onAfterShadow(a,e,f,g,c,b,k)}}}else if(d.visible){let b=s(e,d,h,i);e.onBeforeShadow(a,e,f,g,c,b,null),a.renderBufferDirect(g,null,c,b,e,null),e.onAfterShadow(a,e,f,g,c,b,null)}}let j=e.children;for(let a=0,b=j.length;a<b;a++)c(j[a],f,g,h,i)}(h,i,o.camera,l,this.type)}!0!==o.isPointLightShadow&&3===this.type&&function(c,d){let f=b.update(p);m.defines.VSM_SAMPLES!==c.blurSamples&&(m.defines.VSM_SAMPLES=c.blurSamples,n.defines.VSM_SAMPLES=c.blurSamples,m.needsUpdate=!0,n.needsUpdate=!0),null===c.mapPass&&(c.mapPass=new S(e.x,e.y)),m.uniforms.shadow_pass.value=c.map.texture,m.uniforms.resolution.value=c.mapSize,m.uniforms.radius.value=c.radius,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(d,null,f,m,p,null),n.uniforms.shadow_pass.value=c.mapPass.texture,n.uniforms.resolution.value=c.mapSize,n.uniforms.radius.value=c.radius,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(d,null,f,n,p,null)}(o,i),o.needsUpdate=!1}r=this.type,q.needsUpdate=!1,a.setRenderTarget(j,l,o)}}function d8(a,b,c){let d=c.isWebGL2,e=new function(){let b=!1,c=new Q,d=null,e=new Q(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g),c.set(b,d,f,g),!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},f=new function(){let b=!1,c=null,d=null,e=null;return{setTest:function(b){b?P(a.DEPTH_TEST):R(a.DEPTH_TEST)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){switch(b){case 0:a.depthFunc(a.NEVER);break;case 1:a.depthFunc(a.ALWAYS);break;case 2:a.depthFunc(a.LESS);break;case 3:default:a.depthFunc(a.LEQUAL);break;case 4:a.depthFunc(a.EQUAL);break;case 5:a.depthFunc(a.GEQUAL);break;case 6:a.depthFunc(a.GREATER);break;case 7:a.depthFunc(a.NOTEQUAL)}d=b}},setLocked:function(a){b=a},setClear:function(b){e!==b&&(a.clearDepth(b),e=b)},reset:function(){b=!1,c=null,d=null,e=null}}},g=new function(){let b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null;return{setTest:function(c){b||(c?P(a.STENCIL_TEST):R(a.STENCIL_TEST))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,g){(d!==b||e!==c||f!==g)&&(a.stencilFunc(b,c,g),d=b,e=c,f=g)},setOp:function(b,c,d){(g!==b||h!==c||i!==d)&&(a.stencilOp(b,c,d),g=b,h=c,i=d)},setLocked:function(a){b=a},setClear:function(b){j!==b&&(a.clearStencil(b),j=b)},reset:function(){b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null}}},h=new WeakMap,i=new WeakMap,j={},k={},l=new WeakMap,m=[],n=null,o=!1,p=null,q=null,r=null,s=null,t=null,u=null,v=null,w=new ba(0,0,0),x=0,y=!1,z=null,A=null,B=null,C=null,D=null,E=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),F=!1,G=a.getParameter(a.VERSION);-1!==G.indexOf("WebGL")?F=parseFloat(/^WebGL (\d)/.exec(G)[1])>=1:-1!==G.indexOf("OpenGL ES")&&(F=parseFloat(/^OpenGL ES (\d)/.exec(G)[1])>=2);let H=null,I={},J=a.getParameter(a.SCISSOR_BOX),K=a.getParameter(a.VIEWPORT),L=new Q().fromArray(J),M=new Q().fromArray(K);function N(b,c,e,f){let g=new Uint8Array(4),h=a.createTexture();a.bindTexture(b,h),a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(let h=0;h<e;h++)d&&(b===a.TEXTURE_3D||b===a.TEXTURE_2D_ARRAY)?a.texImage3D(c,0,a.RGBA,1,1,f,0,a.RGBA,a.UNSIGNED_BYTE,g):a.texImage2D(c+h,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,g);return h}let O={};function P(b){!0!==j[b]&&(a.enable(b),j[b]=!0)}function R(b){!1!==j[b]&&(a.disable(b),j[b]=!1)}O[a.TEXTURE_2D]=N(a.TEXTURE_2D,a.TEXTURE_2D,1),O[a.TEXTURE_CUBE_MAP]=N(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6),d&&(O[a.TEXTURE_2D_ARRAY]=N(a.TEXTURE_2D_ARRAY,a.TEXTURE_2D_ARRAY,1,1),O[a.TEXTURE_3D]=N(a.TEXTURE_3D,a.TEXTURE_3D,1,1)),e.setClear(0,0,0,1),f.setClear(1),g.setClear(0),P(a.DEPTH_TEST),f.setFunc(3),V(!1),W(1),P(a.CULL_FACE),U(0);let S={100:a.FUNC_ADD,101:a.FUNC_SUBTRACT,102:a.FUNC_REVERSE_SUBTRACT};if(d)S[103]=a.MIN,S[104]=a.MAX;else{let a=b.get("EXT_blend_minmax");null!==a&&(S[103]=a.MIN_EXT,S[104]=a.MAX_EXT)}let T={200:a.ZERO,201:a.ONE,202:a.SRC_COLOR,204:a.SRC_ALPHA,210:a.SRC_ALPHA_SATURATE,208:a.DST_COLOR,206:a.DST_ALPHA,203:a.ONE_MINUS_SRC_COLOR,205:a.ONE_MINUS_SRC_ALPHA,209:a.ONE_MINUS_DST_COLOR,207:a.ONE_MINUS_DST_ALPHA,211:a.CONSTANT_COLOR,212:a.ONE_MINUS_CONSTANT_COLOR,213:a.CONSTANT_ALPHA,214:a.ONE_MINUS_CONSTANT_ALPHA};function U(b,c,d,e,f,g,h,i,j,k){if(0===b){!0===o&&(R(a.BLEND),o=!1);return}if(!1===o&&(P(a.BLEND),o=!0),5!==b){if(b!==p||k!==y){if((100!==q||100!==t)&&(a.blendEquation(a.FUNC_ADD),q=100,t=100),k)switch(b){case 1:a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case 2:a.blendFunc(a.ONE,a.ONE);break;case 3:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case 4:a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case 1:a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case 2:a.blendFunc(a.SRC_ALPHA,a.ONE);break;case 3:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case 4:a.blendFunc(a.ZERO,a.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}r=null,s=null,u=null,v=null,w.set(0,0,0),x=0,p=b,y=k}return}f=f||c,g=g||d,h=h||e,(c!==q||f!==t)&&(a.blendEquationSeparate(S[c],S[f]),q=c,t=f),(d!==r||e!==s||g!==u||h!==v)&&(a.blendFuncSeparate(T[d],T[e],T[g],T[h]),r=d,s=e,u=g,v=h),(!1===i.equals(w)||j!==x)&&(a.blendColor(i.r,i.g,i.b,j),w.copy(i),x=j),p=b,y=!1}function V(b){z!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),z=b)}function W(b){0!==b?(P(a.CULL_FACE),b!==A&&(1===b?a.cullFace(a.BACK):2===b?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):R(a.CULL_FACE),A=b}function X(b,c,d){b?(P(a.POLYGON_OFFSET_FILL),(C!==c||D!==d)&&(a.polygonOffset(c,d),C=c,D=d)):R(a.POLYGON_OFFSET_FILL)}return{buffers:{color:e,depth:f,stencil:g},enable:P,disable:R,bindFramebuffer:function(b,c){return k[b]!==c&&(a.bindFramebuffer(b,c),k[b]=c,d&&(b===a.DRAW_FRAMEBUFFER&&(k[a.FRAMEBUFFER]=c),b===a.FRAMEBUFFER&&(k[a.DRAW_FRAMEBUFFER]=c)),!0)},drawBuffers:function(d,e){let f=m,g=!1;if(d)if(void 0===(f=l.get(e))&&(f=[],l.set(e,f)),d.isWebGLMultipleRenderTargets){let b=d.texture;if(f.length!==b.length||f[0]!==a.COLOR_ATTACHMENT0){for(let c=0,d=b.length;c<d;c++)f[c]=a.COLOR_ATTACHMENT0+c;f.length=b.length,g=!0}}else f[0]!==a.COLOR_ATTACHMENT0&&(f[0]=a.COLOR_ATTACHMENT0,g=!0);else f[0]!==a.BACK&&(f[0]=a.BACK,g=!0);g&&(c.isWebGL2?a.drawBuffers(f):b.get("WEBGL_draw_buffers").drawBuffersWEBGL(f))},useProgram:function(b){return n!==b&&(a.useProgram(b),n=b,!0)},setBlending:U,setMaterial:function(b,c){2===b.side?R(a.CULL_FACE):P(a.CULL_FACE);let d=1===b.side;c&&(d=!d),V(d),1===b.blending&&!1===b.transparent?U(0):U(b.blending,b.blendEquation,b.blendSrc,b.blendDst,b.blendEquationAlpha,b.blendSrcAlpha,b.blendDstAlpha,b.blendColor,b.blendAlpha,b.premultipliedAlpha),f.setFunc(b.depthFunc),f.setTest(b.depthTest),f.setMask(b.depthWrite),e.setMask(b.colorWrite);let h=b.stencilWrite;g.setTest(h),h&&(g.setMask(b.stencilWriteMask),g.setFunc(b.stencilFunc,b.stencilRef,b.stencilFuncMask),g.setOp(b.stencilFail,b.stencilZFail,b.stencilZPass)),X(b.polygonOffset,b.polygonOffsetFactor,b.polygonOffsetUnits),!0===b.alphaToCoverage?P(a.SAMPLE_ALPHA_TO_COVERAGE):R(a.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:V,setCullFace:W,setLineWidth:function(b){b!==B&&(F&&a.lineWidth(b),B=b)},setPolygonOffset:X,setScissorTest:function(b){b?P(a.SCISSOR_TEST):R(a.SCISSOR_TEST)},activeTexture:function(b){void 0===b&&(b=a.TEXTURE0+E-1),H!==b&&(a.activeTexture(b),H=b)},bindTexture:function(b,c,d){void 0===d&&(d=null===H?a.TEXTURE0+E-1:H);let e=I[d];void 0===e&&(e={type:void 0,texture:void 0},I[d]=e),(e.type!==b||e.texture!==c)&&(H!==d&&(a.activeTexture(d),H=d),a.bindTexture(b,c||O[b]),e.type=b,e.texture=c)},unbindTexture:function(){let b=I[H];void 0!==b&&void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},compressedTexImage3D:function(){try{a.compressedTexImage3D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},updateUBOMapping:function(b,c){let d=i.get(c);void 0===d&&(d=new WeakMap,i.set(c,d));let e=d.get(b);void 0===e&&(e=a.getUniformBlockIndex(c,b.name),d.set(b,e))},uniformBlockBinding:function(b,c){let d=i.get(c).get(b);h.get(c)!==d&&(a.uniformBlockBinding(c,d,b.__bindingPointIndex),h.set(c,d))},texStorage2D:function(){try{a.texStorage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texStorage3D:function(){try{a.texStorage3D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texSubImage2D:function(){try{a.texSubImage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texSubImage3D:function(){try{a.texSubImage3D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},compressedTexSubImage2D:function(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},compressedTexSubImage3D:function(){try{a.compressedTexSubImage3D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},scissor:function(b){!1===L.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),L.copy(b))},viewport:function(b){!1===M.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),M.copy(b))},reset:function(){a.disable(a.BLEND),a.disable(a.CULL_FACE),a.disable(a.DEPTH_TEST),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SCISSOR_TEST),a.disable(a.STENCIL_TEST),a.disable(a.SAMPLE_ALPHA_TO_COVERAGE),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ZERO),a.blendFuncSeparate(a.ONE,a.ZERO,a.ONE,a.ZERO),a.blendColor(0,0,0,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(a.LESS),a.clearDepth(1),a.stencilMask(0xffffffff),a.stencilFunc(a.ALWAYS,0,0xffffffff),a.stencilOp(a.KEEP,a.KEEP,a.KEEP),a.clearStencil(0),a.cullFace(a.BACK),a.frontFace(a.CCW),a.polygonOffset(0,0),a.activeTexture(a.TEXTURE0),a.bindFramebuffer(a.FRAMEBUFFER,null),!0===d&&(a.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),a.bindFramebuffer(a.READ_FRAMEBUFFER,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),j={},H=null,I={},k={},l=new WeakMap,m=[],n=null,o=!1,p=null,q=null,r=null,s=null,t=null,u=null,v=null,w=new ba(0,0,0),x=0,y=!1,z=null,A=null,B=null,C=null,D=null,L.set(0,0,a.canvas.width,a.canvas.height),M.set(0,0,a.canvas.width,a.canvas.height),e.reset(),f.reset(),g.reset()}}}function d9(a,b,c,d,e,g,h){let k,l=e.isWebGL2,m=b.has("WEBGL_multisampled_render_to_texture")?b.get("WEBGL_multisampled_render_to_texture"):null,n="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),o=new WeakMap,p=new WeakMap,q=!1;try{q="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(a){}function r(a,b){return q?new OffscreenCanvas(a,b):A("canvas")}function u(a,b,c,d){let e=1;if((a.width>d||a.height>d)&&(e=d/Math.max(a.width,a.height)),e<1||!0===b)if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let d=b?t:Math.floor,f=d(e*a.width),g=d(e*a.height);void 0===k&&(k=r(f,g));let h=c?r(f,g):k;return h.width=f,h.height=g,h.getContext("2d").drawImage(a,0,0,f,g),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+f+"x"+g+")."),h}else"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").");return a}function v(a){return s(a.width)&&s(a.height)}function w(a,b){return a.generateMipmaps&&b&&1003!==a.minFilter&&1006!==a.minFilter}function x(b){a.generateMipmap(b)}function y(c,d,e,f,g=!1){if(!1===l)return d;if(null!==c){if(void 0!==a[c])return a[c];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+c+"'")}let h=d;if(d===a.RED&&(e===a.FLOAT&&(h=a.R32F),e===a.HALF_FLOAT&&(h=a.R16F),e===a.UNSIGNED_BYTE&&(h=a.R8)),d===a.RED_INTEGER&&(e===a.UNSIGNED_BYTE&&(h=a.R8UI),e===a.UNSIGNED_SHORT&&(h=a.R16UI),e===a.UNSIGNED_INT&&(h=a.R32UI),e===a.BYTE&&(h=a.R8I),e===a.SHORT&&(h=a.R16I),e===a.INT&&(h=a.R32I)),d===a.RG&&(e===a.FLOAT&&(h=a.RG32F),e===a.HALF_FLOAT&&(h=a.RG16F),e===a.UNSIGNED_BYTE&&(h=a.RG8)),d===a.RGBA){let b=g?i:H.getTransfer(f);e===a.FLOAT&&(h=a.RGBA32F),e===a.HALF_FLOAT&&(h=a.RGBA16F),e===a.UNSIGNED_BYTE&&(h=b===j?a.SRGB8_ALPHA8:a.RGBA8),e===a.UNSIGNED_SHORT_4_4_4_4&&(h=a.RGBA4),e===a.UNSIGNED_SHORT_5_5_5_1&&(h=a.RGB5_A1)}return(h===a.R16F||h===a.R32F||h===a.RG16F||h===a.RG32F||h===a.RGBA16F||h===a.RGBA32F)&&b.get("EXT_color_buffer_float"),h}function z(a,b,c){return!0===w(a,c)||a.isFramebufferTexture&&1003!==a.minFilter&&1006!==a.minFilter?Math.log2(Math.max(b.width,b.height))+1:void 0!==a.mipmaps&&a.mipmaps.length>0?a.mipmaps.length:a.isCompressedTexture&&Array.isArray(a.image)?b.mipmaps.length:1}function B(b){return 1003===b||1004===b||1005===b?a.NEAREST:a.LINEAR}function C(a){let b=a.target;b.removeEventListener("dispose",C),function(a){let b=d.get(a);if(void 0===b.__webglInit)return;let c=a.source,e=p.get(c);if(e){let d=e[b.__cacheKey];d.usedTimes--,0===d.usedTimes&&E(a),0===Object.keys(e).length&&p.delete(c)}d.remove(a)}(b),b.isVideoTexture&&o.delete(b)}function D(b){let c=b.target;c.removeEventListener("dispose",D),function(b){let c=b.texture,e=d.get(b),f=d.get(c);if(void 0!==f.__webglTexture&&(a.deleteTexture(f.__webglTexture),h.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let b=0;b<6;b++){if(Array.isArray(e.__webglFramebuffer[b]))for(let c=0;c<e.__webglFramebuffer[b].length;c++)a.deleteFramebuffer(e.__webglFramebuffer[b][c]);else a.deleteFramebuffer(e.__webglFramebuffer[b]);e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer[b])}else{if(Array.isArray(e.__webglFramebuffer))for(let b=0;b<e.__webglFramebuffer.length;b++)a.deleteFramebuffer(e.__webglFramebuffer[b]);else a.deleteFramebuffer(e.__webglFramebuffer);if(e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer),e.__webglMultisampledFramebuffer&&a.deleteFramebuffer(e.__webglMultisampledFramebuffer),e.__webglColorRenderbuffer)for(let b=0;b<e.__webglColorRenderbuffer.length;b++)e.__webglColorRenderbuffer[b]&&a.deleteRenderbuffer(e.__webglColorRenderbuffer[b]);e.__webglDepthRenderbuffer&&a.deleteRenderbuffer(e.__webglDepthRenderbuffer)}if(b.isWebGLMultipleRenderTargets)for(let b=0,e=c.length;b<e;b++){let e=d.get(c[b]);e.__webglTexture&&(a.deleteTexture(e.__webglTexture),h.memory.textures--),d.remove(c[b])}d.remove(c),d.remove(b)}(c)}function E(b){let c=d.get(b);a.deleteTexture(c.__webglTexture);let e=b.source,f=p.get(e);delete f[c.__cacheKey],h.memory.textures--}let F=0;function G(b,e){let f=d.get(b);if(b.isVideoTexture&&function(a){let b=h.render.frame;o.get(a)!==b&&(o.set(a,b),a.update())}(b),!1===b.isRenderTargetTexture&&b.version>0&&f.__version!==b.version){let a=b.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==a.complete)return void O(f,b,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}c.bindTexture(a.TEXTURE_2D,f.__webglTexture,a.TEXTURE0+e)}let I={1e3:a.REPEAT,1001:a.CLAMP_TO_EDGE,1002:a.MIRRORED_REPEAT},J={1003:a.NEAREST,1004:a.NEAREST_MIPMAP_NEAREST,1005:a.NEAREST_MIPMAP_LINEAR,1006:a.LINEAR,1007:a.LINEAR_MIPMAP_NEAREST,1008:a.LINEAR_MIPMAP_LINEAR},L={512:a.NEVER,519:a.ALWAYS,513:a.LESS,515:a.LEQUAL,514:a.EQUAL,518:a.GEQUAL,516:a.GREATER,517:a.NOTEQUAL};function M(c,f,g){if(1015===f.type&&!1===b.has("OES_texture_float_linear")&&(1006===f.magFilter||1007===f.magFilter||1005===f.magFilter||1008===f.magFilter||1006===f.minFilter||1007===f.minFilter||1005===f.minFilter||1008===f.minFilter)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),g?(a.texParameteri(c,a.TEXTURE_WRAP_S,I[f.wrapS]),a.texParameteri(c,a.TEXTURE_WRAP_T,I[f.wrapT]),(c===a.TEXTURE_3D||c===a.TEXTURE_2D_ARRAY)&&a.texParameteri(c,a.TEXTURE_WRAP_R,I[f.wrapR]),a.texParameteri(c,a.TEXTURE_MAG_FILTER,J[f.magFilter]),a.texParameteri(c,a.TEXTURE_MIN_FILTER,J[f.minFilter])):(a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(c,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),(c===a.TEXTURE_3D||c===a.TEXTURE_2D_ARRAY)&&a.texParameteri(c,a.TEXTURE_WRAP_R,a.CLAMP_TO_EDGE),(1001!==f.wrapS||1001!==f.wrapT)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,a.TEXTURE_MAG_FILTER,B(f.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,B(f.minFilter)),1003!==f.minFilter&&1006!==f.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),f.compareFunction&&(a.texParameteri(c,a.TEXTURE_COMPARE_MODE,a.COMPARE_REF_TO_TEXTURE),a.texParameteri(c,a.TEXTURE_COMPARE_FUNC,L[f.compareFunction])),!0===b.has("EXT_texture_filter_anisotropic")){let g=b.get("EXT_texture_filter_anisotropic");1003!==f.magFilter&&(1005===f.minFilter||1008===f.minFilter)&&(1015!==f.type||!1!==b.has("OES_texture_float_linear"))&&(!1!==l||1016!==f.type||!1!==b.has("OES_texture_half_float_linear"))&&(f.anisotropy>1||d.get(f).__currentAnisotropy)&&(a.texParameterf(c,g.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,e.getMaxAnisotropy())),d.get(f).__currentAnisotropy=f.anisotropy)}}function N(b,c){let d=!1;void 0===b.__webglInit&&(b.__webglInit=!0,c.addEventListener("dispose",C));let e=c.source,f=p.get(e);void 0===f&&(f={},p.set(e,f));let g=function(a){let b=[];return b.push(a.wrapS),b.push(a.wrapT),b.push(a.wrapR||0),b.push(a.magFilter),b.push(a.minFilter),b.push(a.anisotropy),b.push(a.internalFormat),b.push(a.format),b.push(a.type),b.push(a.generateMipmaps),b.push(a.premultiplyAlpha),b.push(a.flipY),b.push(a.unpackAlignment),b.push(a.colorSpace),b.join()}(c);if(g!==b.__cacheKey){void 0===f[g]&&(f[g]={texture:a.createTexture(),usedTimes:0},h.memory.textures++,d=!0),f[g].usedTimes++;let e=f[b.__cacheKey];void 0!==e&&(f[b.__cacheKey].usedTimes--,0===e.usedTimes&&E(c)),b.__cacheKey=g,b.__webglTexture=f[g].texture}return d}function O(b,f,h){let i=a.TEXTURE_2D;(f.isDataArrayTexture||f.isCompressedArrayTexture)&&(i=a.TEXTURE_2D_ARRAY),f.isData3DTexture&&(i=a.TEXTURE_3D);let j=N(b,f),k=f.source;c.bindTexture(i,b.__webglTexture,a.TEXTURE0+h);let m=d.get(k);if(k.version!==m.__version||!0===j){let b;c.activeTexture(a.TEXTURE0+h);let d=H.getPrimaries(H.workingColorSpace),n=""===f.colorSpace?null:H.getPrimaries(f.colorSpace),o=""===f.colorSpace||d===n?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,f.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,f.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,f.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,o);let p=!l&&(1001!==f.wrapS||1001!==f.wrapT||1003!==f.minFilter&&1006!==f.minFilter)&&!1===v(f.image),q=u(f.image,p,!1,e.maxTextureSize),r=v(q=U(f,q))||l,s=g.convert(f.format,f.colorSpace),t=g.convert(f.type),A=y(f.internalFormat,s,t,f.colorSpace,f.isVideoTexture);M(i,f,r);let B=f.mipmaps,C=l&&!0!==f.isVideoTexture&&36196!==A,D=void 0===m.__version||!0===j,E=k.dataReady,F=z(f,q,r);if(f.isDepthTexture)A=a.DEPTH_COMPONENT,l?A=1015===f.type?a.DEPTH_COMPONENT32F:1014===f.type?a.DEPTH_COMPONENT24:1020===f.type?a.DEPTH24_STENCIL8:a.DEPTH_COMPONENT16:1015===f.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===f.format&&A===a.DEPTH_COMPONENT&&1012!==f.type&&1014!==f.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),f.type=1014,t=g.convert(f.type)),1027===f.format&&A===a.DEPTH_COMPONENT&&(A=a.DEPTH_STENCIL,1020!==f.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),f.type=1020,t=g.convert(f.type))),D&&(C?c.texStorage2D(a.TEXTURE_2D,1,A,q.width,q.height):c.texImage2D(a.TEXTURE_2D,0,A,q.width,q.height,0,s,t,null));else if(f.isDataTexture)if(B.length>0&&r){C&&D&&c.texStorage2D(a.TEXTURE_2D,F,A,B[0].width,B[0].height);for(let d=0,e=B.length;d<e;d++)b=B[d],C?E&&c.texSubImage2D(a.TEXTURE_2D,d,0,0,b.width,b.height,s,t,b.data):c.texImage2D(a.TEXTURE_2D,d,A,b.width,b.height,0,s,t,b.data);f.generateMipmaps=!1}else C?(D&&c.texStorage2D(a.TEXTURE_2D,F,A,q.width,q.height),E&&c.texSubImage2D(a.TEXTURE_2D,0,0,0,q.width,q.height,s,t,q.data)):c.texImage2D(a.TEXTURE_2D,0,A,q.width,q.height,0,s,t,q.data);else if(f.isCompressedTexture)if(f.isCompressedArrayTexture){C&&D&&c.texStorage3D(a.TEXTURE_2D_ARRAY,F,A,B[0].width,B[0].height,q.depth);for(let d=0,e=B.length;d<e;d++)b=B[d],1023!==f.format?null!==s?C?E&&c.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,d,0,0,0,b.width,b.height,q.depth,s,b.data,0,0):c.compressedTexImage3D(a.TEXTURE_2D_ARRAY,d,A,b.width,b.height,q.depth,0,b.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?E&&c.texSubImage3D(a.TEXTURE_2D_ARRAY,d,0,0,0,b.width,b.height,q.depth,s,t,b.data):c.texImage3D(a.TEXTURE_2D_ARRAY,d,A,b.width,b.height,q.depth,0,s,t,b.data)}else{C&&D&&c.texStorage2D(a.TEXTURE_2D,F,A,B[0].width,B[0].height);for(let d=0,e=B.length;d<e;d++)b=B[d],1023!==f.format?null!==s?C?E&&c.compressedTexSubImage2D(a.TEXTURE_2D,d,0,0,b.width,b.height,s,b.data):c.compressedTexImage2D(a.TEXTURE_2D,d,A,b.width,b.height,0,b.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?E&&c.texSubImage2D(a.TEXTURE_2D,d,0,0,b.width,b.height,s,t,b.data):c.texImage2D(a.TEXTURE_2D,d,A,b.width,b.height,0,s,t,b.data)}else if(f.isDataArrayTexture)C?(D&&c.texStorage3D(a.TEXTURE_2D_ARRAY,F,A,q.width,q.height,q.depth),E&&c.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,0,q.width,q.height,q.depth,s,t,q.data)):c.texImage3D(a.TEXTURE_2D_ARRAY,0,A,q.width,q.height,q.depth,0,s,t,q.data);else if(f.isData3DTexture)C?(D&&c.texStorage3D(a.TEXTURE_3D,F,A,q.width,q.height,q.depth),E&&c.texSubImage3D(a.TEXTURE_3D,0,0,0,0,q.width,q.height,q.depth,s,t,q.data)):c.texImage3D(a.TEXTURE_3D,0,A,q.width,q.height,q.depth,0,s,t,q.data);else if(f.isFramebufferTexture){if(D)if(C)c.texStorage2D(a.TEXTURE_2D,F,A,q.width,q.height);else{let b=q.width,d=q.height;for(let e=0;e<F;e++)c.texImage2D(a.TEXTURE_2D,e,A,b,d,0,s,t,null),b>>=1,d>>=1}}else if(B.length>0&&r){C&&D&&c.texStorage2D(a.TEXTURE_2D,F,A,B[0].width,B[0].height);for(let d=0,e=B.length;d<e;d++)b=B[d],C?E&&c.texSubImage2D(a.TEXTURE_2D,d,0,0,s,t,b):c.texImage2D(a.TEXTURE_2D,d,A,s,t,b);f.generateMipmaps=!1}else C?(D&&c.texStorage2D(a.TEXTURE_2D,F,A,q.width,q.height),E&&c.texSubImage2D(a.TEXTURE_2D,0,0,0,s,t,q)):c.texImage2D(a.TEXTURE_2D,0,A,s,t,q);w(f,r)&&x(i),m.__version=k.version,f.onUpdate&&f.onUpdate(f)}b.__version=f.version}function P(b,e,f,h,i,j){let k=g.convert(f.format,f.colorSpace),l=g.convert(f.type),n=y(f.internalFormat,k,l,f.colorSpace);if(!d.get(e).__hasExternalTextures){let b=Math.max(1,e.width>>j),d=Math.max(1,e.height>>j);i===a.TEXTURE_3D||i===a.TEXTURE_2D_ARRAY?c.texImage3D(i,j,n,b,d,e.depth,0,k,l,null):c.texImage2D(i,j,n,b,d,0,k,l,null)}c.bindFramebuffer(a.FRAMEBUFFER,b),T(e)?m.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,h,i,d.get(f).__webglTexture,0,S(e)):(i===a.TEXTURE_2D||i>=a.TEXTURE_CUBE_MAP_POSITIVE_X&&i<=a.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&a.framebufferTexture2D(a.FRAMEBUFFER,h,i,d.get(f).__webglTexture,j),c.bindFramebuffer(a.FRAMEBUFFER,null)}function Q(b,c,d){if(a.bindRenderbuffer(a.RENDERBUFFER,b),c.depthBuffer&&!c.stencilBuffer){let e=!0===l?a.DEPTH_COMPONENT24:a.DEPTH_COMPONENT16;if(d||T(c)){let b=c.depthTexture;b&&b.isDepthTexture&&(1015===b.type?e=a.DEPTH_COMPONENT32F:1014===b.type&&(e=a.DEPTH_COMPONENT24));let d=S(c);T(c)?m.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,d,e,c.width,c.height):a.renderbufferStorageMultisample(a.RENDERBUFFER,d,e,c.width,c.height)}else a.renderbufferStorage(a.RENDERBUFFER,e,c.width,c.height);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)}else if(c.depthBuffer&&c.stencilBuffer){let e=S(c);d&&!1===T(c)?a.renderbufferStorageMultisample(a.RENDERBUFFER,e,a.DEPTH24_STENCIL8,c.width,c.height):T(c)?m.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,e,a.DEPTH24_STENCIL8,c.width,c.height):a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b)}else{let b=!0===c.isWebGLMultipleRenderTargets?c.texture:[c.texture];for(let e=0;e<b.length;e++){let f=b[e],h=g.convert(f.format,f.colorSpace),i=g.convert(f.type),j=y(f.internalFormat,h,i,f.colorSpace),k=S(c);d&&!1===T(c)?a.renderbufferStorageMultisample(a.RENDERBUFFER,k,j,c.width,c.height):T(c)?m.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,k,j,c.width,c.height):a.renderbufferStorage(a.RENDERBUFFER,j,c.width,c.height)}}a.bindRenderbuffer(a.RENDERBUFFER,null)}function R(b){let e=d.get(b),f=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture&&!e.__autoAllocateDepthBuffer){if(f)throw Error("target.depthTexture not supported in Cube render targets");var g=e.__webglFramebuffer;if(b&&b.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(c.bindFramebuffer(a.FRAMEBUFFER,g),!(b.depthTexture&&b.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(b.depthTexture).__webglTexture&&b.depthTexture.image.width===b.width&&b.depthTexture.image.height===b.height||(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=!0),G(b.depthTexture,0);let h=d.get(b.depthTexture).__webglTexture,i=S(b);if(1026===b.depthTexture.format)T(b)?m.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,h,0,i):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,h,0);else if(1027===b.depthTexture.format)T(b)?m.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,h,0,i):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,h,0);else throw Error("Unknown depthTexture format")}else if(f){e.__webglDepthbuffer=[];for(let d=0;d<6;d++)c.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer[d]),e.__webglDepthbuffer[d]=a.createRenderbuffer(),Q(e.__webglDepthbuffer[d],b,!1)}else c.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),Q(e.__webglDepthbuffer,b,!1);c.bindFramebuffer(a.FRAMEBUFFER,null)}function S(a){return Math.min(e.maxSamples,a.samples)}function T(a){let c=d.get(a);return l&&a.samples>0&&!0===b.has("WEBGL_multisampled_render_to_texture")&&!1!==c.__useRenderToTexture}function U(a,c){let d=a.colorSpace,e=a.format,g=a.type;return!0===a.isCompressedTexture||!0===a.isVideoTexture||1035===a.format||d!==f&&""!==d&&(H.getTransfer(d)===j?!1===l?!0===b.has("EXT_sRGB")&&1023===e?(a.format=1035,a.minFilter=1006,a.generateMipmaps=!1):c=K.sRGBToLinear(c):(1023!==e||1009!==g)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",d)),c}this.allocateTextureUnit=function(){let a=F;return a>=e.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+e.maxTextures),F+=1,a},this.resetTextureUnits=function(){F=0},this.setTexture2D=G,this.setTexture2DArray=function(b,e){let f=d.get(b);if(b.version>0&&f.__version!==b.version)return void O(f,b,e);c.bindTexture(a.TEXTURE_2D_ARRAY,f.__webglTexture,a.TEXTURE0+e)},this.setTexture3D=function(b,e){let f=d.get(b);if(b.version>0&&f.__version!==b.version)return void O(f,b,e);c.bindTexture(a.TEXTURE_3D,f.__webglTexture,a.TEXTURE0+e)},this.setTextureCube=function(b,f){let h=d.get(b);if(b.version>0&&h.__version!==b.version)return void function(b,f,h){if(6!==f.image.length)return;let i=N(b,f),j=f.source;c.bindTexture(a.TEXTURE_CUBE_MAP,b.__webglTexture,a.TEXTURE0+h);let k=d.get(j);if(j.version!==k.__version||!0===i){let b;c.activeTexture(a.TEXTURE0+h);let d=H.getPrimaries(H.workingColorSpace),m=""===f.colorSpace?null:H.getPrimaries(f.colorSpace),n=""===f.colorSpace||d===m?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,f.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,f.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,f.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,n);let o=f.isCompressedTexture||f.image[0].isCompressedTexture,p=f.image[0]&&f.image[0].isDataTexture,q=[];for(let a=0;a<6;a++)o||p?q[a]=p?f.image[a].image:f.image[a]:q[a]=u(f.image[a],!1,!0,e.maxCubemapSize),q[a]=U(f,q[a]);let r=q[0],s=v(r)||l,t=g.convert(f.format,f.colorSpace),A=g.convert(f.type),B=y(f.internalFormat,t,A,f.colorSpace),C=l&&!0!==f.isVideoTexture,D=void 0===k.__version||!0===i,E=j.dataReady,F=z(f,r,s);if(M(a.TEXTURE_CUBE_MAP,f,s),o){C&&D&&c.texStorage2D(a.TEXTURE_CUBE_MAP,F,B,r.width,r.height);for(let d=0;d<6;d++){b=q[d].mipmaps;for(let e=0;e<b.length;e++){let g=b[e];1023!==f.format?null!==t?C?E&&c.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e,0,0,g.width,g.height,t,g.data):c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e,B,g.width,g.height,0,g.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):C?E&&c.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e,0,0,g.width,g.height,t,A,g.data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e,B,g.width,g.height,0,t,A,g.data)}}}else{b=f.mipmaps,C&&D&&(b.length>0&&F++,c.texStorage2D(a.TEXTURE_CUBE_MAP,F,B,q[0].width,q[0].height));for(let d=0;d<6;d++)if(p){C?E&&c.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,0,0,q[d].width,q[d].height,t,A,q[d].data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,B,q[d].width,q[d].height,0,t,A,q[d].data);for(let e=0;e<b.length;e++){let f=b[e].image[d].image;C?E&&c.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e+1,0,0,f.width,f.height,t,A,f.data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e+1,B,f.width,f.height,0,t,A,f.data)}}else{C?E&&c.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,0,0,t,A,q[d]):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,B,t,A,q[d]);for(let e=0;e<b.length;e++){let f=b[e];C?E&&c.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e+1,0,0,t,A,f.image[d]):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+d,e+1,B,t,A,f.image[d])}}}w(f,s)&&x(a.TEXTURE_CUBE_MAP),k.__version=j.version,f.onUpdate&&f.onUpdate(f)}b.__version=f.version}(h,b,f);c.bindTexture(a.TEXTURE_CUBE_MAP,h.__webglTexture,a.TEXTURE0+f)},this.rebindTextures=function(b,c,e){let f=d.get(b);void 0!==c&&P(f.__webglFramebuffer,b,b.texture,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,0),void 0!==e&&R(b)},this.setupRenderTarget=function(b){let f=b.texture,i=d.get(b),j=d.get(f);b.addEventListener("dispose",D),!0!==b.isWebGLMultipleRenderTargets&&(void 0===j.__webglTexture&&(j.__webglTexture=a.createTexture()),j.__version=f.version,h.memory.textures++);let k=!0===b.isWebGLCubeRenderTarget,m=!0===b.isWebGLMultipleRenderTargets,n=v(b)||l;if(k){i.__webglFramebuffer=[];for(let b=0;b<6;b++)if(l&&f.mipmaps&&f.mipmaps.length>0){i.__webglFramebuffer[b]=[];for(let c=0;c<f.mipmaps.length;c++)i.__webglFramebuffer[b][c]=a.createFramebuffer()}else i.__webglFramebuffer[b]=a.createFramebuffer()}else{if(l&&f.mipmaps&&f.mipmaps.length>0){i.__webglFramebuffer=[];for(let b=0;b<f.mipmaps.length;b++)i.__webglFramebuffer[b]=a.createFramebuffer()}else i.__webglFramebuffer=a.createFramebuffer();if(m)if(e.drawBuffers){let c=b.texture;for(let b=0,e=c.length;b<e;b++){let e=d.get(c[b]);void 0===e.__webglTexture&&(e.__webglTexture=a.createTexture(),h.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(l&&b.samples>0&&!1===T(b)){let d=m?f:[f];i.__webglMultisampledFramebuffer=a.createFramebuffer(),i.__webglColorRenderbuffer=[],c.bindFramebuffer(a.FRAMEBUFFER,i.__webglMultisampledFramebuffer);for(let c=0;c<d.length;c++){let e=d[c];i.__webglColorRenderbuffer[c]=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,i.__webglColorRenderbuffer[c]);let f=g.convert(e.format,e.colorSpace),h=g.convert(e.type),j=y(e.internalFormat,f,h,e.colorSpace,!0===b.isXRRenderTarget),k=S(b);a.renderbufferStorageMultisample(a.RENDERBUFFER,k,j,b.width,b.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+c,a.RENDERBUFFER,i.__webglColorRenderbuffer[c])}a.bindRenderbuffer(a.RENDERBUFFER,null),b.depthBuffer&&(i.__webglDepthRenderbuffer=a.createRenderbuffer(),Q(i.__webglDepthRenderbuffer,b,!0)),c.bindFramebuffer(a.FRAMEBUFFER,null)}}if(k){c.bindTexture(a.TEXTURE_CUBE_MAP,j.__webglTexture),M(a.TEXTURE_CUBE_MAP,f,n);for(let c=0;c<6;c++)if(l&&f.mipmaps&&f.mipmaps.length>0)for(let d=0;d<f.mipmaps.length;d++)P(i.__webglFramebuffer[c][d],b,f,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+c,d);else P(i.__webglFramebuffer[c],b,f,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+c,0);w(f,n)&&x(a.TEXTURE_CUBE_MAP),c.unbindTexture()}else if(m){let e=b.texture;for(let f=0,g=e.length;f<g;f++){let g=e[f],h=d.get(g);c.bindTexture(a.TEXTURE_2D,h.__webglTexture),M(a.TEXTURE_2D,g,n),P(i.__webglFramebuffer,b,g,a.COLOR_ATTACHMENT0+f,a.TEXTURE_2D,0),w(g,n)&&x(a.TEXTURE_2D)}c.unbindTexture()}else{let d=a.TEXTURE_2D;if((b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(l?d=b.isWebGL3DRenderTarget?a.TEXTURE_3D:a.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),c.bindTexture(d,j.__webglTexture),M(d,f,n),l&&f.mipmaps&&f.mipmaps.length>0)for(let c=0;c<f.mipmaps.length;c++)P(i.__webglFramebuffer[c],b,f,a.COLOR_ATTACHMENT0,d,c);else P(i.__webglFramebuffer,b,f,a.COLOR_ATTACHMENT0,d,0);w(f,n)&&x(d),c.unbindTexture()}b.depthBuffer&&R(b)},this.updateRenderTargetMipmap=function(b){let e=v(b)||l,f=!0===b.isWebGLMultipleRenderTargets?b.texture:[b.texture];for(let g=0,h=f.length;g<h;g++){let h=f[g];if(w(h,e)){let e=b.isWebGLCubeRenderTarget?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,f=d.get(h).__webglTexture;c.bindTexture(e,f),x(e),c.unbindTexture()}}},this.updateMultisampleRenderTarget=function(b){if(l&&b.samples>0&&!1===T(b)){let e=b.isWebGLMultipleRenderTargets?b.texture:[b.texture],f=b.width,g=b.height,h=a.COLOR_BUFFER_BIT,i=[],j=b.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,k=d.get(b),l=!0===b.isWebGLMultipleRenderTargets;if(l)for(let b=0;b<e.length;b++)c.bindFramebuffer(a.FRAMEBUFFER,k.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+b,a.RENDERBUFFER,null),c.bindFramebuffer(a.FRAMEBUFFER,k.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+b,a.TEXTURE_2D,null,0);c.bindFramebuffer(a.READ_FRAMEBUFFER,k.__webglMultisampledFramebuffer),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,k.__webglFramebuffer);for(let c=0;c<e.length;c++){i.push(a.COLOR_ATTACHMENT0+c),b.depthBuffer&&i.push(j);let m=void 0!==k.__ignoreDepthValues&&k.__ignoreDepthValues;if(!1===m&&(b.depthBuffer&&(h|=a.DEPTH_BUFFER_BIT),b.stencilBuffer&&(h|=a.STENCIL_BUFFER_BIT)),l&&a.framebufferRenderbuffer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,k.__webglColorRenderbuffer[c]),!0===m&&(a.invalidateFramebuffer(a.READ_FRAMEBUFFER,[j]),a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,[j])),l){let b=d.get(e[c]).__webglTexture;a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,b,0)}a.blitFramebuffer(0,0,f,g,0,0,f,g,h,a.NEAREST),n&&a.invalidateFramebuffer(a.READ_FRAMEBUFFER,i)}if(c.bindFramebuffer(a.READ_FRAMEBUFFER,null),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),l)for(let b=0;b<e.length;b++){c.bindFramebuffer(a.FRAMEBUFFER,k.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+b,a.RENDERBUFFER,k.__webglColorRenderbuffer[b]);let f=d.get(e[b]).__webglTexture;c.bindFramebuffer(a.FRAMEBUFFER,k.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+b,a.TEXTURE_2D,f,0)}c.bindFramebuffer(a.DRAW_FRAMEBUFFER,k.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=R,this.setupFrameBufferTexture=P,this.useMultisampledRTT=T}function ea(a,b,c){let d=c.isWebGL2;return{convert:function(c,e=""){let f,g=H.getTransfer(e);if(1009===c)return a.UNSIGNED_BYTE;if(1017===c)return a.UNSIGNED_SHORT_4_4_4_4;if(1018===c)return a.UNSIGNED_SHORT_5_5_5_1;if(1010===c)return a.BYTE;if(1011===c)return a.SHORT;if(1012===c)return a.UNSIGNED_SHORT;if(1013===c)return a.INT;if(1014===c)return a.UNSIGNED_INT;if(1015===c)return a.FLOAT;if(1016===c)return d?a.HALF_FLOAT:null!==(f=b.get("OES_texture_half_float"))?f.HALF_FLOAT_OES:null;if(1021===c)return a.ALPHA;if(1023===c)return a.RGBA;if(1024===c)return a.LUMINANCE;if(1025===c)return a.LUMINANCE_ALPHA;if(1026===c)return a.DEPTH_COMPONENT;if(1027===c)return a.DEPTH_STENCIL;if(1035===c)return null!==(f=b.get("EXT_sRGB"))?f.SRGB_ALPHA_EXT:null;if(1028===c)return a.RED;if(1029===c)return a.RED_INTEGER;if(1030===c)return a.RG;if(1031===c)return a.RG_INTEGER;if(1033===c)return a.RGBA_INTEGER;if(33776===c||33777===c||33778===c||33779===c)if(g===j){if(null===(f=b.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===c)return f.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===c)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===c)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===c)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(f=b.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===c)return f.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===c)return f.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===c)return f.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===c)return f.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===c||35841===c||35842===c||35843===c){if(null===(f=b.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===c)return f.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===c)return f.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===c)return f.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===c)return f.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===c)return null!==(f=b.get("WEBGL_compressed_texture_etc1"))?f.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===c||37496===c){if(null===(f=b.get("WEBGL_compressed_texture_etc")))return null;if(37492===c)return g===j?f.COMPRESSED_SRGB8_ETC2:f.COMPRESSED_RGB8_ETC2;if(37496===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:f.COMPRESSED_RGBA8_ETC2_EAC}if(37808===c||37809===c||37810===c||37811===c||37812===c||37813===c||37814===c||37815===c||37816===c||37817===c||37818===c||37819===c||37820===c||37821===c){if(null===(f=b.get("WEBGL_compressed_texture_astc")))return null;if(37808===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:f.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:f.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:f.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:f.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:f.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:f.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:f.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:f.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:f.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:f.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:f.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:f.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:f.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===c)return g===j?f.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:f.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===c||36494===c||36495===c){if(null===(f=b.get("EXT_texture_compression_bptc")))return null;if(36492===c)return g===j?f.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:f.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===c)return f.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===c)return f.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===c||36284===c||36285===c||36286===c){if(null===(f=b.get("EXT_texture_compression_rgtc")))return null;if(36492===c)return f.COMPRESSED_RED_RGTC1_EXT;if(36284===c)return f.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===c)return f.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===c)return f.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return 1020===c?d?a.UNSIGNED_INT_24_8:null!==(f=b.get("WEBGL_depth_texture"))?f.UNSIGNED_INT_24_8_WEBGL:null:void 0!==a[c]?a[c]:null}}}class eb extends bW{constructor(a=[]){super(),this.isArrayCamera=!0,this.cameras=a}}class ec extends aW{constructor(){super(),this.isGroup=!0,this.type="Group"}}let ed={type:"move"};class ee{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ec,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ec,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new V,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new V),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ec,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new V,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new V),this._grip}dispatchEvent(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this}connect(a){if(a&&a.hand){let b=this._hand;if(b)for(let c of a.hand.values())this._getHandJoint(b,c)}return this.dispatchEvent({type:"connected",data:a}),this}disconnect(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(a,b,c){let d=null,e=null,f=null,g=this._targetRay,h=this._grip,i=this._hand;if(a&&"visible-blurred"!==b.session.visibilityState){if(i&&a.hand){for(let d of(f=!0,a.hand.values())){let a=b.getJointPose(d,c),e=this._getHandJoint(i,d);null!==a&&(e.matrix.fromArray(a.transform.matrix),e.matrix.decompose(e.position,e.rotation,e.scale),e.matrixWorldNeedsUpdate=!0,e.jointRadius=a.radius),e.visible=null!==a}let d=i.joints["index-finger-tip"],e=i.joints["thumb-tip"],g=d.position.distanceTo(e.position);i.inputState.pinching&&g>.025?(i.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):!i.inputState.pinching&&g<=.015&&(i.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}else null!==h&&a.gripSpace&&null!==(e=b.getPose(a.gripSpace,c))&&(h.matrix.fromArray(e.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,e.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(e.linearVelocity)):h.hasLinearVelocity=!1,e.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(e.angularVelocity)):h.hasAngularVelocity=!1);null!==g&&(null===(d=b.getPose(a.targetRaySpace,c))&&null!==e&&(d=e),null!==d&&(g.matrix.fromArray(d.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,d.linearVelocity?(g.hasLinearVelocity=!0,g.linearVelocity.copy(d.linearVelocity)):g.hasLinearVelocity=!1,d.angularVelocity?(g.hasAngularVelocity=!0,g.angularVelocity.copy(d.angularVelocity)):g.hasAngularVelocity=!1,this.dispatchEvent(ed)))}return null!==g&&(g.visible=null!==d),null!==h&&(h.visible=null!==e),null!==i&&(i.visible=null!==f),this}_getHandJoint(a,b){if(void 0===a.joints[b.jointName]){let c=new ec;c.matrixAutoUpdate=!1,c.visible=!1,a.joints[b.jointName]=c,a.add(c)}return a.joints[b.jointName]}}let ef=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,eg=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class eh{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(a,b,c){if(null===this.texture){let d=new P;a.properties.get(d).__webglTexture=b.texture,(b.depthNear!=c.depthNear||b.depthFar!=c.depthFar)&&(this.depthNear=b.depthNear,this.depthFar=b.depthFar),this.texture=d}}render(a,b){if(null!==this.texture){if(null===this.mesh){let a=b.cameras[0].viewport,c=new bR({extensions:{fragDepth:!0},vertexShader:ef,fragmentShader:eg,uniforms:{depthColor:{value:this.texture},depthWidth:{value:a.z},depthHeight:{value:a.w}}});this.mesh=new bK(new b7(20,20),c)}a.render(this.mesh,b)}}reset(){this.texture=null,this.mesh=null}}class ei extends m{constructor(a,b){super();let c=this,d=null,e=1,f=null,g="local-floor",h=1,i=null,j=null,k=null,l=null,m=null,n=null,o=new eh,q=b.getContextAttributes(),r=null,s=null,t=[],u=[],v=new w,x=null,y=new bW;y.layers.enable(1),y.viewport=new Q;let z=new bW;z.layers.enable(2),z.viewport=new Q;let A=[y,z],B=new eb;B.layers.enable(1),B.layers.enable(2);let C=null,D=null;function E(a){let b=u.indexOf(a.inputSource);if(-1===b)return;let c=t[b];void 0!==c&&(c.update(a.inputSource,a.frame,i||f),c.dispatchEvent({type:a.type,data:a.inputSource}))}function F(){d.removeEventListener("select",E),d.removeEventListener("selectstart",E),d.removeEventListener("selectend",E),d.removeEventListener("squeeze",E),d.removeEventListener("squeezestart",E),d.removeEventListener("squeezeend",E),d.removeEventListener("end",F),d.removeEventListener("inputsourceschange",G);for(let a=0;a<t.length;a++){let b=u[a];null!==b&&(u[a]=null,t[a].disconnect(b))}C=null,D=null,o.reset(),a.setRenderTarget(r),m=null,l=null,k=null,d=null,s=null,L.stop(),c.isPresenting=!1,a.setPixelRatio(x),a.setSize(v.width,v.height,!1),c.dispatchEvent({type:"sessionend"})}function G(a){for(let b=0;b<a.removed.length;b++){let c=a.removed[b],d=u.indexOf(c);d>=0&&(u[d]=null,t[d].disconnect(c))}for(let b=0;b<a.added.length;b++){let c=a.added[b],d=u.indexOf(c);if(-1===d){for(let a=0;a<t.length;a++)if(a>=u.length){u.push(c),d=a;break}else if(null===u[a]){u[a]=c,d=a;break}if(-1===d)break}let e=t[d];e&&e.connect(c)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(a){let b=t[a];return void 0===b&&(b=new ee,t[a]=b),b.getTargetRaySpace()},this.getControllerGrip=function(a){let b=t[a];return void 0===b&&(b=new ee,t[a]=b),b.getGripSpace()},this.getHand=function(a){let b=t[a];return void 0===b&&(b=new ee,t[a]=b),b.getHandSpace()},this.setFramebufferScaleFactor=function(a){e=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){g=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return i||f},this.setReferenceSpace=function(a){i=a},this.getBaseLayer=function(){return null!==l?l:m},this.getBinding=function(){return k},this.getFrame=function(){return n},this.getSession=function(){return d},this.setSession=async function(j){if(null!==(d=j)){if(r=a.getRenderTarget(),d.addEventListener("select",E),d.addEventListener("selectstart",E),d.addEventListener("selectend",E),d.addEventListener("squeeze",E),d.addEventListener("squeezestart",E),d.addEventListener("squeezeend",E),d.addEventListener("end",F),d.addEventListener("inputsourceschange",G),!0!==q.xrCompatible&&await b.makeXRCompatible(),x=a.getPixelRatio(),a.getSize(v),void 0===d.renderState.layers||!1===a.capabilities.isWebGL2){let c={antialias:void 0!==d.renderState.layers||q.antialias,alpha:!0,depth:q.depth,stencil:q.stencil,framebufferScaleFactor:e};m=new XRWebGLLayer(d,b,c),d.updateRenderState({baseLayer:m}),a.setPixelRatio(1),a.setSize(m.framebufferWidth,m.framebufferHeight,!1),s=new S(m.framebufferWidth,m.framebufferHeight,{format:1023,type:1009,colorSpace:a.outputColorSpace,stencilBuffer:q.stencil})}else{let c=null,f=null,g=null;q.depth&&(g=q.stencil?b.DEPTH24_STENCIL8:b.DEPTH_COMPONENT24,c=q.stencil?1027:1026,f=q.stencil?1020:1014);let h={colorFormat:b.RGBA8,depthFormat:g,scaleFactor:e};l=(k=new XRWebGLBinding(d,b)).createProjectionLayer(h),d.updateRenderState({layers:[l]}),a.setPixelRatio(1),a.setSize(l.textureWidth,l.textureHeight,!1),s=new S(l.textureWidth,l.textureHeight,{format:1023,type:1009,depthTexture:new cH(l.textureWidth,l.textureHeight,f,void 0,void 0,void 0,void 0,void 0,void 0,c),stencilBuffer:q.stencil,colorSpace:a.outputColorSpace,samples:4*!!q.antialias}),a.properties.get(s).__ignoreDepthValues=l.ignoreDepthValues}s.isXRRenderTarget=!0,this.setFoveation(h),i=null,f=await d.requestReferenceSpace(g),L.setContext(d),L.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==d)return d.environmentBlendMode};let H=new V,I=new V;function J(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.copy(a.matrixWorld).invert()}this.updateCamera=function(a){var b,c,e;if(null===d)return;null!==o.texture&&(a.near=o.depthNear,a.far=o.depthFar),B.near=z.near=y.near=a.near,B.far=z.far=y.far=a.far,(C!==B.near||D!==B.far)&&(d.updateRenderState({depthNear:B.near,depthFar:B.far}),C=B.near,D=B.far,y.near=C,y.far=D,z.near=C,z.far=D,y.updateProjectionMatrix(),z.updateProjectionMatrix(),a.updateProjectionMatrix());let f=a.parent,g=B.cameras;J(B,f);for(let a=0;a<g.length;a++)J(g[a],f);2===g.length?function(a,b,c){H.setFromMatrixPosition(b.matrixWorld),I.setFromMatrixPosition(c.matrixWorld);let d=H.distanceTo(I),e=b.projectionMatrix.elements,f=c.projectionMatrix.elements,g=e[14]/(e[10]-1),h=e[14]/(e[10]+1),i=(e[9]+1)/e[5],j=(e[9]-1)/e[5],k=(e[8]-1)/e[0],l=(f[8]+1)/f[0],m=d/(-k+l),n=-(m*k);b.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(n),a.translateZ(m),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.copy(a.matrixWorld).invert();let o=g+m,p=h+m;a.projectionMatrix.makePerspective(g*k-n,g*l+(d-n),i*h/p*o,j*h/p*o,o,p),a.projectionMatrixInverse.copy(a.projectionMatrix).invert()}(B,y,z):B.projectionMatrix.copy(y.projectionMatrix),b=a,c=B,null===(e=f)?b.matrix.copy(c.matrixWorld):(b.matrix.copy(e.matrixWorld),b.matrix.invert(),b.matrix.multiply(c.matrixWorld)),b.matrix.decompose(b.position,b.quaternion,b.scale),b.updateMatrixWorld(!0),b.projectionMatrix.copy(c.projectionMatrix),b.projectionMatrixInverse.copy(c.projectionMatrixInverse),b.isPerspectiveCamera&&(b.fov=2*p*Math.atan(1/b.projectionMatrix.elements[5]),b.zoom=1)},this.getCamera=function(){return B},this.getFoveation=function(){if(null!==l||null!==m)return h},this.setFoveation=function(a){h=a,null!==l&&(l.fixedFoveation=a),null!==m&&void 0!==m.fixedFoveation&&(m.fixedFoveation=a)},this.hasDepthSensing=function(){return null!==o.texture};let K=null,L=new b5;L.setAnimationLoop(function(b,e){if(j=e.getViewerPose(i||f),n=e,null!==j){let b=j.views;null!==m&&(a.setRenderTargetFramebuffer(s,m.framebuffer),a.setRenderTarget(s));let c=!1;b.length!==B.cameras.length&&(B.cameras.length=0,c=!0);for(let d=0;d<b.length;d++){let e=b[d],f=null;if(null!==m)f=m.getViewport(e);else{let b=k.getViewSubImage(l,e);f=b.viewport,0===d&&(a.setRenderTargetTextures(s,b.colorTexture,l.ignoreDepthValues?void 0:b.depthStencilTexture),a.setRenderTarget(s))}let g=A[d];void 0===g&&((g=new bW).layers.enable(d),g.viewport=new Q,A[d]=g),g.matrix.fromArray(e.transform.matrix),g.matrix.decompose(g.position,g.quaternion,g.scale),g.projectionMatrix.fromArray(e.projectionMatrix),g.projectionMatrixInverse.copy(g.projectionMatrix).invert(),g.viewport.set(f.x,f.y,f.width,f.height),0===d&&(B.matrix.copy(g.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale)),!0===c&&B.cameras.push(g)}let e=d.enabledFeatures;if(e&&e.includes("depth-sensing")){let c=k.getDepthInformation(b[0]);c&&c.isValid&&c.texture&&o.init(a,c,d.renderState)}}for(let a=0;a<t.length;a++){let b=u[a],c=t[a];null!==b&&void 0!==c&&c.update(b,e,i||f)}o.render(a,B),K&&K(b,e),e.detectedPlanes&&c.dispatchEvent({type:"planesdetected",data:e}),n=null}),this.setAnimationLoop=function(a){K=a},this.dispose=function(){}}}function ej(a,b){function c(a,b){!0===a.matrixAutoUpdate&&a.updateMatrix(),b.value.copy(a.matrix)}function d(d,e){d.opacity.value=e.opacity,e.color&&d.diffuse.value.copy(e.color),e.emissive&&d.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(d.map.value=e.map,c(e.map,d.mapTransform)),e.alphaMap&&(d.alphaMap.value=e.alphaMap,c(e.alphaMap,d.alphaMapTransform)),e.bumpMap&&(d.bumpMap.value=e.bumpMap,c(e.bumpMap,d.bumpMapTransform),d.bumpScale.value=e.bumpScale,1===e.side&&(d.bumpScale.value*=-1)),e.normalMap&&(d.normalMap.value=e.normalMap,c(e.normalMap,d.normalMapTransform),d.normalScale.value.copy(e.normalScale),1===e.side&&d.normalScale.value.negate()),e.displacementMap&&(d.displacementMap.value=e.displacementMap,c(e.displacementMap,d.displacementMapTransform),d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias),e.emissiveMap&&(d.emissiveMap.value=e.emissiveMap,c(e.emissiveMap,d.emissiveMapTransform)),e.specularMap&&(d.specularMap.value=e.specularMap,c(e.specularMap,d.specularMapTransform)),e.alphaTest>0&&(d.alphaTest.value=e.alphaTest);let f=b.get(e).envMap;if(f&&(d.envMap.value=f,d.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,d.reflectivity.value=e.reflectivity,d.ior.value=e.ior,d.refractionRatio.value=e.refractionRatio),e.lightMap){d.lightMap.value=e.lightMap;let b=!0===a._useLegacyLights?Math.PI:1;d.lightMapIntensity.value=e.lightMapIntensity*b,c(e.lightMap,d.lightMapTransform)}e.aoMap&&(d.aoMap.value=e.aoMap,d.aoMapIntensity.value=e.aoMapIntensity,c(e.aoMap,d.aoMapTransform))}return{refreshFogUniforms:function(b,c){c.color.getRGB(b.fogColor.value,bP(a)),c.isFog?(b.fogNear.value=c.near,b.fogFar.value=c.far):c.isFogExp2&&(b.fogDensity.value=c.density)},refreshMaterialUniforms:function(a,e,f,g,h){var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;e.isMeshBasicMaterial||e.isMeshLambertMaterial?d(a,e):e.isMeshToonMaterial?(d(a,e),i=a,(j=e).gradientMap&&(i.gradientMap.value=j.gradientMap)):e.isMeshPhongMaterial?(d(a,e),k=a,l=e,k.specular.value.copy(l.specular),k.shininess.value=Math.max(l.shininess,1e-4)):e.isMeshStandardMaterial?(d(a,e),m=a,n=e,m.metalness.value=n.metalness,n.metalnessMap&&(m.metalnessMap.value=n.metalnessMap,c(n.metalnessMap,m.metalnessMapTransform)),m.roughness.value=n.roughness,n.roughnessMap&&(m.roughnessMap.value=n.roughnessMap,c(n.roughnessMap,m.roughnessMapTransform)),b.get(n).envMap&&(m.envMapIntensity.value=n.envMapIntensity),e.isMeshPhysicalMaterial&&(o=a,p=e,q=h,o.ior.value=p.ior,p.sheen>0&&(o.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),o.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(o.sheenColorMap.value=p.sheenColorMap,c(p.sheenColorMap,o.sheenColorMapTransform)),p.sheenRoughnessMap&&(o.sheenRoughnessMap.value=p.sheenRoughnessMap,c(p.sheenRoughnessMap,o.sheenRoughnessMapTransform))),p.clearcoat>0&&(o.clearcoat.value=p.clearcoat,o.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(o.clearcoatMap.value=p.clearcoatMap,c(p.clearcoatMap,o.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(o.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,c(p.clearcoatRoughnessMap,o.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(o.clearcoatNormalMap.value=p.clearcoatNormalMap,c(p.clearcoatNormalMap,o.clearcoatNormalMapTransform),o.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),1===p.side&&o.clearcoatNormalScale.value.negate())),p.iridescence>0&&(o.iridescence.value=p.iridescence,o.iridescenceIOR.value=p.iridescenceIOR,o.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],o.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(o.iridescenceMap.value=p.iridescenceMap,c(p.iridescenceMap,o.iridescenceMapTransform)),p.iridescenceThicknessMap&&(o.iridescenceThicknessMap.value=p.iridescenceThicknessMap,c(p.iridescenceThicknessMap,o.iridescenceThicknessMapTransform))),p.transmission>0&&(o.transmission.value=p.transmission,o.transmissionSamplerMap.value=q.texture,o.transmissionSamplerSize.value.set(q.width,q.height),p.transmissionMap&&(o.transmissionMap.value=p.transmissionMap,c(p.transmissionMap,o.transmissionMapTransform)),o.thickness.value=p.thickness,p.thicknessMap&&(o.thicknessMap.value=p.thicknessMap,c(p.thicknessMap,o.thicknessMapTransform)),o.attenuationDistance.value=p.attenuationDistance,o.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(o.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(o.anisotropyMap.value=p.anisotropyMap,c(p.anisotropyMap,o.anisotropyMapTransform))),o.specularIntensity.value=p.specularIntensity,o.specularColor.value.copy(p.specularColor),p.specularColorMap&&(o.specularColorMap.value=p.specularColorMap,c(p.specularColorMap,o.specularColorMapTransform)),p.specularIntensityMap&&(o.specularIntensityMap.value=p.specularIntensityMap,c(p.specularIntensityMap,o.specularIntensityMapTransform)))):e.isMeshMatcapMaterial?(d(a,e),r=a,(s=e).matcap&&(r.matcap.value=s.matcap)):e.isMeshDepthMaterial?d(a,e):e.isMeshDistanceMaterial?(d(a,e),function(a,c){let d=b.get(c).light;a.referencePosition.value.setFromMatrixPosition(d.matrixWorld),a.nearDistance.value=d.shadow.camera.near,a.farDistance.value=d.shadow.camera.far}(a,e)):e.isMeshNormalMaterial?d(a,e):e.isLineBasicMaterial?(t=a,u=e,t.diffuse.value.copy(u.color),t.opacity.value=u.opacity,u.map&&(t.map.value=u.map,c(u.map,t.mapTransform)),e.isLineDashedMaterial&&(v=a,w=e,v.dashSize.value=w.dashSize,v.totalSize.value=w.dashSize+w.gapSize,v.scale.value=w.scale)):e.isPointsMaterial?(x=a,y=e,z=f,A=g,x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,x.size.value=y.size*z,x.scale.value=.5*A,y.map&&(x.map.value=y.map,c(y.map,x.uvTransform)),y.alphaMap&&(x.alphaMap.value=y.alphaMap,c(y.alphaMap,x.alphaMapTransform)),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest)):e.isSpriteMaterial?(B=a,C=e,B.diffuse.value.copy(C.color),B.opacity.value=C.opacity,B.rotation.value=C.rotation,C.map&&(B.map.value=C.map,c(C.map,B.mapTransform)),C.alphaMap&&(B.alphaMap.value=C.alphaMap,c(C.alphaMap,B.alphaMapTransform)),C.alphaTest>0&&(B.alphaTest.value=C.alphaTest)):e.isShadowMaterial?(a.color.value.copy(e.color),a.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}}}function ek(a,b,c,d){let e={},f={},g=[],h=c.isWebGL2?a.getParameter(a.MAX_UNIFORM_BUFFER_BINDINGS):0;function i(a){let b={boundary:0,storage:0};return"number"==typeof a||"boolean"==typeof a?(b.boundary=4,b.storage=4):a.isVector2?(b.boundary=8,b.storage=8):a.isVector3||a.isColor?(b.boundary=16,b.storage=12):a.isVector4?(b.boundary=16,b.storage=16):a.isMatrix3?(b.boundary=48,b.storage=48):a.isMatrix4?(b.boundary=64,b.storage=64):a.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",a),b}function j(b){let c=b.target;c.removeEventListener("dispose",j);let d=g.indexOf(c.__bindingPointIndex);g.splice(d,1),a.deleteBuffer(e[c.id]),delete e[c.id],delete f[c.id]}return{bind:function(a,b){let c=b.program;d.uniformBlockBinding(a,c)},update:function(c,k){let l=e[c.id];void 0===l&&(function(a){let b=a.uniforms,c=0;for(let a=0,d=b.length;a<d;a++){let d=Array.isArray(b[a])?b[a]:[b[a]];for(let a=0,b=d.length;a<b;a++){let b=d[a],e=Array.isArray(b.value)?b.value:[b.value];for(let a=0,d=e.length;a<d;a++){let d=i(e[a]),f=c%16;0!==f&&16-f<d.boundary&&(c+=16-f),b.__data=new Float32Array(d.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=c,c+=d.storage}}}let d=c%16;d>0&&(c+=16-d),a.__size=c,a.__cache={}}(c),l=function(b){let c=function(){for(let a=0;a<h;a++)if(-1===g.indexOf(a))return g.push(a),a;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();b.__bindingPointIndex=c;let d=a.createBuffer(),e=b.__size,f=b.usage;return a.bindBuffer(a.UNIFORM_BUFFER,d),a.bufferData(a.UNIFORM_BUFFER,e,f),a.bindBuffer(a.UNIFORM_BUFFER,null),a.bindBufferBase(a.UNIFORM_BUFFER,c,d),d}(c),e[c.id]=l,c.addEventListener("dispose",j));let m=k.program;d.updateUBOMapping(c,m);let n=b.render.frame;f[c.id]!==n&&(function(b){let c=e[b.id],d=b.uniforms,f=b.__cache;a.bindBuffer(a.UNIFORM_BUFFER,c);for(let b=0,c=d.length;b<c;b++){let c=Array.isArray(d[b])?d[b]:[d[b]];for(let d=0,e=c.length;d<e;d++){let e=c[d];if(!0===function(a,b,c,d){let e=a.value,f=b+"_"+c;if(void 0===d[f])return"number"==typeof e||"boolean"==typeof e?d[f]=e:d[f]=e.clone(),!0;{let a=d[f];if("number"==typeof e||"boolean"==typeof e){if(a!==e)return d[f]=e,!0}else if(!1===a.equals(e))return a.copy(e),!0}return!1}(e,b,d,f)){let b=e.__offset,c=Array.isArray(e.value)?e.value:[e.value],d=0;for(let f=0;f<c.length;f++){let g=c[f],h=i(g);"number"==typeof g||"boolean"==typeof g?(e.__data[0]=g,a.bufferSubData(a.UNIFORM_BUFFER,b+d,e.__data)):g.isMatrix3?(e.__data[0]=g.elements[0],e.__data[1]=g.elements[1],e.__data[2]=g.elements[2],e.__data[3]=0,e.__data[4]=g.elements[3],e.__data[5]=g.elements[4],e.__data[6]=g.elements[5],e.__data[7]=0,e.__data[8]=g.elements[6],e.__data[9]=g.elements[7],e.__data[10]=g.elements[8],e.__data[11]=0):(g.toArray(e.__data,d),d+=h.storage/Float32Array.BYTES_PER_ELEMENT)}a.bufferSubData(a.UNIFORM_BUFFER,b,e.__data)}}}a.bindBuffer(a.UNIFORM_BUFFER,null)}(c),f[c.id]=n)},dispose:function(){for(let b in e)a.deleteBuffer(e[b]);g=[],e={},f={}}}}class el{constructor(a={}){let b,c,d,g,h,i,j,k,l,m,n,o,p,q,r,s,u,v,x,y,z,B,C,D,E,{canvas:F=function(){let a=A("canvas");return a.style.display="block",a}(),context:G=null,depth:H=!0,stencil:I=!0,alpha:J=!1,antialias:K=!1,premultipliedAlpha:L=!0,preserveDrawingBuffer:M=!1,powerPreference:N="default",failIfMajorPerformanceCaveat:O=!1}=a;this.isWebGLRenderer=!0,b=null!==G?G.getContextAttributes().alpha:J;let P=new Uint32Array(4),R=new Int32Array(4),T=null,U=null,W=[],X=[];this.domElement=F,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=e,this._useLegacyLights=!1,this.toneMapping=0,this.toneMappingExposure=1;let Y=this,Z=!1,$=0,_=0,aa=null,ab=-1,ac=null,ad=new Q,ae=new Q,af=null,ag=new ba(0),ah=0,ai=F.width,aj=F.height,ak=1,al=null,am=null,an=new Q(0,0,ai,aj),ao=new Q(0,0,ai,aj),ap=!1,aq=new b4,ar=!1,as=!1,at=null,au=new ax,av=new w,aw=new V,ay={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function az(){return null===aa?ak:1}let aA=G;function aB(a,b){for(let c=0;c<a.length;c++){let d=a[c],e=F.getContext(d,b);if(null!==e)return e}return null}try{if("setAttribute"in F&&F.setAttribute("data-engine","three.js r161"),F.addEventListener("webglcontextlost",aE,!1),F.addEventListener("webglcontextrestored",aF,!1),F.addEventListener("webglcontextcreationerror",aG,!1),null===aA){let a=["webgl2","webgl","experimental-webgl"];if(!0===Y.isWebGL1Renderer&&a.shift(),aA=aB(a,{alpha:!0,depth:H,stencil:I,antialias:K,premultipliedAlpha:L,preserveDrawingBuffer:M,powerPreference:N,failIfMajorPerformanceCaveat:O}),null===aA)if(aB(a))throw Error("Error creating WebGL context with your selected attributes.");else throw Error("Error creating WebGL context.")}"undefined"!=typeof WebGLRenderingContext&&aA instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===aA.getShaderPrecisionFormat&&(aA.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(a){throw console.error("THREE.WebGLRenderer: "+a.message),a}function aC(){c=new cz(aA),d=new cf(aA,c,a),c.init(d),C=new ea(aA,c,d),g=new d8(aA,c,d),h=new cC(aA),i=new dW,j=new d9(aA,c,g,i,d,C,h),k=new ch(Y),l=new cy(Y),m=new b6(aA,d),D=new cd(aA,c,m,d),n=new cA(aA,m,h,D),o=new cG(aA,n,m,h),y=new cF(aA,d,j),u=new cg(i),p=new dV(Y,k,l,c,d,D,u),q=new ej(Y,i),r=new d$,s=new d4(c,d),x=new cc(Y,k,l,g,o,b,L),v=new d7(Y,o,d),E=new ek(aA,h,d,g),z=new ce(aA,c,h,d),B=new cB(aA,c,h,d),h.programs=p.programs,Y.capabilities=d,Y.extensions=c,Y.properties=i,Y.renderLists=r,Y.shadowMap=v,Y.state=g,Y.info=h}aC();let aD=new ei(Y,aA);function aE(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),Z=!0}function aF(){console.log("THREE.WebGLRenderer: Context Restored."),Z=!1;let a=h.autoReset,b=v.enabled,c=v.autoUpdate,d=v.needsUpdate,e=v.type;aC(),h.autoReset=a,v.enabled=b,v.autoUpdate=c,v.needsUpdate=d,v.type=e}function aG(a){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",a.statusMessage)}function aH(a){var b;let c=a.target;c.removeEventListener("dispose",aH),function(a){let b=i.get(a).programs;void 0!==b&&(b.forEach(function(a){p.releaseProgram(a)}),a.isShaderMaterial&&p.releaseShaderCache(a))}(b=c),i.remove(b)}function aI(a,b,c){!0===a.transparent&&2===a.side&&!1===a.forceSinglePass?(a.side=1,a.needsUpdate=!0,aQ(a,b,c),a.side=0,a.needsUpdate=!0,aQ(a,b,c),a.side=2):aQ(a,b,c)}this.xr=aD,this.getContext=function(){return aA},this.getContextAttributes=function(){return aA.getContextAttributes()},this.forceContextLoss=function(){let a=c.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=c.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return ak},this.setPixelRatio=function(a){void 0!==a&&(ak=a,this.setSize(ai,aj,!1))},this.getSize=function(a){return a.set(ai,aj)},this.setSize=function(a,b,c=!0){if(aD.isPresenting)return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");ai=a,aj=b,F.width=Math.floor(a*ak),F.height=Math.floor(b*ak),!0===c&&(F.style.width=a+"px",F.style.height=b+"px"),this.setViewport(0,0,a,b)},this.getDrawingBufferSize=function(a){return a.set(ai*ak,aj*ak).floor()},this.setDrawingBufferSize=function(a,b,c){ai=a,aj=b,ak=c,F.width=Math.floor(a*c),F.height=Math.floor(b*c),this.setViewport(0,0,a,b)},this.getCurrentViewport=function(a){return a.copy(ad)},this.getViewport=function(a){return a.copy(an)},this.setViewport=function(a,b,c,d){a.isVector4?an.set(a.x,a.y,a.z,a.w):an.set(a,b,c,d),g.viewport(ad.copy(an).multiplyScalar(ak).floor())},this.getScissor=function(a){return a.copy(ao)},this.setScissor=function(a,b,c,d){a.isVector4?ao.set(a.x,a.y,a.z,a.w):ao.set(a,b,c,d),g.scissor(ae.copy(ao).multiplyScalar(ak).floor())},this.getScissorTest=function(){return ap},this.setScissorTest=function(a){g.setScissorTest(ap=a)},this.setOpaqueSort=function(a){al=a},this.setTransparentSort=function(a){am=a},this.getClearColor=function(a){return a.copy(x.getClearColor())},this.setClearColor=function(){x.setClearColor.apply(x,arguments)},this.getClearAlpha=function(){return x.getClearAlpha()},this.setClearAlpha=function(){x.setClearAlpha.apply(x,arguments)},this.clear=function(a=!0,b=!0,c=!0){let d=0;if(a){let a=!1;if(null!==aa){let b=aa.texture.format;a=1033===b||1031===b||1029===b}if(a){let a=aa.texture.type,b=1009===a||1014===a||1012===a||1020===a||1017===a||1018===a,c=x.getClearColor(),d=x.getClearAlpha(),e=c.r,f=c.g,g=c.b;b?(P[0]=e,P[1]=f,P[2]=g,P[3]=d,aA.clearBufferuiv(aA.COLOR,0,P)):(R[0]=e,R[1]=f,R[2]=g,R[3]=d,aA.clearBufferiv(aA.COLOR,0,R))}else d|=aA.COLOR_BUFFER_BIT}b&&(d|=aA.DEPTH_BUFFER_BIT),c&&(d|=aA.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(0xffffffff)),aA.clear(d)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){F.removeEventListener("webglcontextlost",aE,!1),F.removeEventListener("webglcontextrestored",aF,!1),F.removeEventListener("webglcontextcreationerror",aG,!1),r.dispose(),s.dispose(),i.dispose(),k.dispose(),l.dispose(),o.dispose(),D.dispose(),E.dispose(),p.dispose(),aD.dispose(),aD.removeEventListener("sessionstart",aK),aD.removeEventListener("sessionend",aL),at&&(at.dispose(),at=null),aM.stop()},this.renderBufferDirect=function(a,b,c,e,h,o){let p;null===b&&(b=ay);let r=h.isMesh&&0>h.matrixWorld.determinant(),s=function(a,b,c,e,h){var m,n;!0!==b.isScene&&(b=ay),j.resetTextureUnits();let o=b.fog,p=e.isMeshStandardMaterial?b.environment:null,r=null===aa?Y.outputColorSpace:!0===aa.isXRRenderTarget?aa.texture.colorSpace:f,s=(e.isMeshStandardMaterial?l:k).get(e.envMap||p),t=!0===e.vertexColors&&!!c.attributes.color&&4===c.attributes.color.itemSize,v=!!c.attributes.tangent&&(!!e.normalMap||e.anisotropy>0),w=!!c.morphAttributes.position,x=!!c.morphAttributes.normal,z=!!c.morphAttributes.color,A=0;e.toneMapped&&(null===aa||!0===aa.isXRRenderTarget)&&(A=Y.toneMapping);let B=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,C=void 0!==B?B.length:0,D=i.get(e),F=U.state.lights;if(!0===ar&&(!0===as||a!==ac)){let b=a===ac&&e.id===ab;u.setState(e,a,b)}let G=!1;e.version===D.__version?D.needsLights&&D.lightsStateVersion!==F.state.version||D.outputColorSpace!==r||h.isBatchedMesh&&!1===D.batching?G=!0:h.isBatchedMesh||!0!==D.batching?h.isInstancedMesh&&!1===D.instancing?G=!0:h.isInstancedMesh||!0!==D.instancing?h.isSkinnedMesh&&!1===D.skinning?G=!0:h.isSkinnedMesh||!0!==D.skinning?h.isInstancedMesh&&!0===D.instancingColor&&null===h.instanceColor||h.isInstancedMesh&&!1===D.instancingColor&&null!==h.instanceColor||D.envMap!==s||!0===e.fog&&D.fog!==o||void 0!==D.numClippingPlanes&&(D.numClippingPlanes!==u.numPlanes||D.numIntersection!==u.numIntersection)||D.vertexAlphas!==t||D.vertexTangents!==v||D.morphTargets!==w||D.morphNormals!==x||D.morphColors!==z||D.toneMapping!==A?G=!0:!0===d.isWebGL2&&D.morphTargetsCount!==C&&(G=!0):G=!0:G=!0:G=!0:(G=!0,D.__version=e.version);let H=D.currentProgram;!0===G&&(H=aQ(e,b,h));let I=!1,J=!1,K=!1,L=H.getUniforms(),M=D.uniforms;if(g.useProgram(H.program)&&(I=!0,J=!0,K=!0),e.id!==ab&&(ab=e.id,J=!0),I||ac!==a){L.setValue(aA,"projectionMatrix",a.projectionMatrix),L.setValue(aA,"viewMatrix",a.matrixWorldInverse);let b=L.map.cameraPosition;void 0!==b&&b.setValue(aA,aw.setFromMatrixPosition(a.matrixWorld)),d.logarithmicDepthBuffer&&L.setValue(aA,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),(e.isMeshPhongMaterial||e.isMeshToonMaterial||e.isMeshLambertMaterial||e.isMeshBasicMaterial||e.isMeshStandardMaterial||e.isShaderMaterial)&&L.setValue(aA,"isOrthographic",!0===a.isOrthographicCamera),ac!==a&&(ac=a,J=!0,K=!0)}if(h.isSkinnedMesh){L.setOptional(aA,h,"bindMatrix"),L.setOptional(aA,h,"bindMatrixInverse");let a=h.skeleton;a&&(d.floatVertexTextures?(null===a.boneTexture&&a.computeBoneTexture(),L.setValue(aA,"boneTexture",a.boneTexture,j)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}h.isBatchedMesh&&(L.setOptional(aA,h,"batchingTexture"),L.setValue(aA,"batchingTexture",h._matricesTexture,j));let N=c.morphAttributes;if((void 0!==N.position||void 0!==N.normal||void 0!==N.color&&!0===d.isWebGL2)&&y.update(h,c,H),(J||D.receiveShadow!==h.receiveShadow)&&(D.receiveShadow=h.receiveShadow,L.setValue(aA,"receiveShadow",h.receiveShadow)),e.isMeshGouraudMaterial&&null!==e.envMap&&(M.envMap.value=s,M.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1),J&&(L.setValue(aA,"toneMappingExposure",Y.toneMappingExposure),D.needsLights&&(m=M,n=K,m.ambientLightColor.needsUpdate=n,m.lightProbe.needsUpdate=n,m.directionalLights.needsUpdate=n,m.directionalLightShadows.needsUpdate=n,m.pointLights.needsUpdate=n,m.pointLightShadows.needsUpdate=n,m.spotLights.needsUpdate=n,m.spotLightShadows.needsUpdate=n,m.rectAreaLights.needsUpdate=n,m.hemisphereLights.needsUpdate=n),o&&!0===e.fog&&q.refreshFogUniforms(M,o),q.refreshMaterialUniforms(M,e,ak,aj,at),dC.upload(aA,aR(D),M,j)),e.isShaderMaterial&&!0===e.uniformsNeedUpdate&&(dC.upload(aA,aR(D),M,j),e.uniformsNeedUpdate=!1),e.isSpriteMaterial&&L.setValue(aA,"center",h.center),L.setValue(aA,"modelViewMatrix",h.modelViewMatrix),L.setValue(aA,"normalMatrix",h.normalMatrix),L.setValue(aA,"modelMatrix",h.matrixWorld),e.isShaderMaterial||e.isRawShaderMaterial){let a=e.uniformsGroups;for(let b=0,c=a.length;b<c;b++)if(d.isWebGL2){let c=a[b];E.update(c,H),E.bind(c,H)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return H}(a,b,c,e,h);g.setMaterial(e,r);let t=c.index,v=1;if(!0===e.wireframe){if(void 0===(t=n.getWireframeAttribute(c)))return;v=2}let w=c.drawRange,x=c.attributes.position,A=w.start*v,C=(w.start+w.count)*v;null!==o&&(A=Math.max(A,o.start*v),C=Math.min(C,(o.start+o.count)*v)),null!==t?(A=Math.max(A,0),C=Math.min(C,t.count)):null!=x&&(A=Math.max(A,0),C=Math.min(C,x.count));let F=C-A;if(F<0||F===1/0)return;D.setup(h,e,s,c,t);let G=z;if(null!==t&&(p=m.get(t),(G=B).setIndex(p)),h.isMesh)!0===e.wireframe?(g.setLineWidth(e.wireframeLinewidth*az()),G.setMode(aA.LINES)):G.setMode(aA.TRIANGLES);else if(h.isLine){let a=e.linewidth;void 0===a&&(a=1),g.setLineWidth(a*az()),h.isLineSegments?G.setMode(aA.LINES):h.isLineLoop?G.setMode(aA.LINE_LOOP):G.setMode(aA.LINE_STRIP)}else h.isPoints?G.setMode(aA.POINTS):h.isSprite&&G.setMode(aA.TRIANGLES);if(h.isBatchedMesh)G.renderMultiDraw(h._multiDrawStarts,h._multiDrawCounts,h._multiDrawCount);else if(h.isInstancedMesh)G.renderInstances(A,F,h.count);else if(c.isInstancedBufferGeometry){let a=void 0!==c._maxInstanceCount?c._maxInstanceCount:1/0,b=Math.min(c.instanceCount,a);G.renderInstances(A,F,b)}else G.render(A,F)},this.compile=function(a,b,c=null){null===c&&(c=a),(U=s.get(c)).init(),X.push(U),c.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(U.pushLight(a),a.castShadow&&U.pushShadow(a))}),a!==c&&a.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(U.pushLight(a),a.castShadow&&U.pushShadow(a))}),U.setupLights(Y._useLegacyLights);let d=new Set;return a.traverse(function(a){let b=a.material;if(b)if(Array.isArray(b))for(let e=0;e<b.length;e++){let f=b[e];aI(f,c,a),d.add(f)}else aI(b,c,a),d.add(b)}),X.pop(),U=null,d},this.compileAsync=function(a,b,d=null){let e=this.compile(a,b,d);return new Promise(b=>{function d(){if(e.forEach(function(a){i.get(a).currentProgram.isReady()&&e.delete(a)}),0===e.size)return void b(a);setTimeout(d,10)}null!==c.get("KHR_parallel_shader_compile")?d():setTimeout(d,10)})};let aJ=null;function aK(){aM.stop()}function aL(){aM.start()}let aM=new b5;function aN(a,b,e,f){let h=a.opaque,i=a.transmissive,k=a.transparent;U.setupLightsView(e),!0===ar&&u.setGlobalState(Y.clippingPlanes,e),i.length>0&&function(a,b,e,f){if(null!==(!0===e.isScene?e.overrideMaterial:null))return;let g=d.isWebGL2;null===at&&(at=new S(1,1,{generateMipmaps:!0,type:c.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:4*!!g})),Y.getDrawingBufferSize(av),g?at.setSize(av.x,av.y):at.setSize(t(av.x),t(av.y));let h=Y.getRenderTarget();Y.setRenderTarget(at),Y.getClearColor(ag),(ah=Y.getClearAlpha())<1&&Y.setClearColor(0xffffff,.5),Y.clear();let i=Y.toneMapping;Y.toneMapping=0,aO(a,e,f),j.updateMultisampleRenderTarget(at),j.updateRenderTargetMipmap(at);let k=!1;for(let a=0,c=b.length;a<c;a++){let c=b[a],d=c.object,g=c.geometry,h=c.material,i=c.group;if(2===h.side&&d.layers.test(f.layers)){let a=h.side;h.side=1,h.needsUpdate=!0,aP(d,e,f,g,h,i),h.side=a,h.needsUpdate=!0,k=!0}}!0===k&&(j.updateMultisampleRenderTarget(at),j.updateRenderTargetMipmap(at)),Y.setRenderTarget(h),Y.setClearColor(ag,ah),Y.toneMapping=i}(h,i,b,e),f&&g.viewport(ad.copy(f)),h.length>0&&aO(h,b,e),i.length>0&&aO(i,b,e),k.length>0&&aO(k,b,e),g.buffers.depth.setTest(!0),g.buffers.depth.setMask(!0),g.buffers.color.setMask(!0),g.setPolygonOffset(!1)}function aO(a,b,c){let d=!0===b.isScene?b.overrideMaterial:null;for(let e=0,f=a.length;e<f;e++){let f=a[e],g=f.object,h=f.geometry,i=null===d?f.material:d,j=f.group;g.layers.test(c.layers)&&aP(g,b,c,h,i,j)}}function aP(a,b,c,d,e,f){a.onBeforeRender(Y,b,c,d,e,f),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),e.onBeforeRender(Y,b,c,d,a,f),!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Y.renderBufferDirect(c,b,d,e,a,f),e.side=0,e.needsUpdate=!0,Y.renderBufferDirect(c,b,d,e,a,f),e.side=2):Y.renderBufferDirect(c,b,d,e,a,f),a.onAfterRender(Y,b,c,d,e,f)}function aQ(a,b,c){var d;!0!==b.isScene&&(b=ay);let e=i.get(a),f=U.state.lights,g=U.state.shadowsArray,h=f.state.version,j=p.getParameters(a,f.state,g,b,c),m=p.getProgramCacheKey(j),n=e.programs;e.environment=a.isMeshStandardMaterial?b.environment:null,e.fog=b.fog,e.envMap=(a.isMeshStandardMaterial?l:k).get(a.envMap||e.environment),void 0===n&&(a.addEventListener("dispose",aH),e.programs=n=new Map);let o=n.get(m);if(void 0!==o){if(e.currentProgram===o&&e.lightsStateVersion===h)return aS(a,j),o}else j.uniforms=p.getUniforms(a),a.onBuild(c,j,Y),a.onBeforeCompile(j,Y),o=p.acquireProgram(j,m),n.set(m,o),e.uniforms=j.uniforms;let q=e.uniforms;return(a.isShaderMaterial||a.isRawShaderMaterial)&&!0!==a.clipping||(q.clippingPlanes=u.uniform),aS(a,j),e.needsLights=(d=a).isMeshLambertMaterial||d.isMeshToonMaterial||d.isMeshPhongMaterial||d.isMeshStandardMaterial||d.isShadowMaterial||d.isShaderMaterial&&!0===d.lights,e.lightsStateVersion=h,e.needsLights&&(q.ambientLightColor.value=f.state.ambient,q.lightProbe.value=f.state.probe,q.directionalLights.value=f.state.directional,q.directionalLightShadows.value=f.state.directionalShadow,q.spotLights.value=f.state.spot,q.spotLightShadows.value=f.state.spotShadow,q.rectAreaLights.value=f.state.rectArea,q.ltc_1.value=f.state.rectAreaLTC1,q.ltc_2.value=f.state.rectAreaLTC2,q.pointLights.value=f.state.point,q.pointLightShadows.value=f.state.pointShadow,q.hemisphereLights.value=f.state.hemi,q.directionalShadowMap.value=f.state.directionalShadowMap,q.directionalShadowMatrix.value=f.state.directionalShadowMatrix,q.spotShadowMap.value=f.state.spotShadowMap,q.spotLightMatrix.value=f.state.spotLightMatrix,q.spotLightMap.value=f.state.spotLightMap,q.pointShadowMap.value=f.state.pointShadowMap,q.pointShadowMatrix.value=f.state.pointShadowMatrix),e.currentProgram=o,e.uniformsList=null,o}function aR(a){if(null===a.uniformsList){let b=a.currentProgram.getUniforms();a.uniformsList=dC.seqWithValue(b.seq,a.uniforms)}return a.uniformsList}function aS(a,b){let c=i.get(a);c.outputColorSpace=b.outputColorSpace,c.batching=b.batching,c.instancing=b.instancing,c.instancingColor=b.instancingColor,c.skinning=b.skinning,c.morphTargets=b.morphTargets,c.morphNormals=b.morphNormals,c.morphColors=b.morphColors,c.morphTargetsCount=b.morphTargetsCount,c.numClippingPlanes=b.numClippingPlanes,c.numIntersection=b.numClipIntersection,c.vertexAlphas=b.vertexAlphas,c.vertexTangents=b.vertexTangents,c.toneMapping=b.toneMapping}aM.setAnimationLoop(function(a){aJ&&aJ(a)}),"undefined"!=typeof self&&aM.setContext(self),this.setAnimationLoop=function(a){aJ=a,aD.setAnimationLoop(a),null===a?aM.stop():aM.start()},aD.addEventListener("sessionstart",aK),aD.addEventListener("sessionend",aL),this.render=function(a,b){if(void 0!==b&&!0!==b.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===Z)return;!0===a.matrixWorldAutoUpdate&&a.updateMatrixWorld(),null===b.parent&&!0===b.matrixWorldAutoUpdate&&b.updateMatrixWorld(),!0===aD.enabled&&!0===aD.isPresenting&&(!0===aD.cameraAutoUpdate&&aD.updateCamera(b),b=aD.getCamera()),!0===a.isScene&&a.onBeforeRender(Y,a,b,aa),(U=s.get(a,X.length)).init(),X.push(U),au.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),aq.setFromProjectionMatrix(au),as=this.localClippingEnabled,ar=u.init(this.clippingPlanes,as),(T=r.get(a,W.length)).init(),W.push(T),function a(b,c,d,e){if(!1===b.visible)return;if(b.layers.test(c.layers)){if(b.isGroup)d=b.renderOrder;else if(b.isLOD)!0===b.autoUpdate&&b.update(c);else if(b.isLight)U.pushLight(b),b.castShadow&&U.pushShadow(b);else if(b.isSprite){if(!b.frustumCulled||aq.intersectsSprite(b)){e&&aw.setFromMatrixPosition(b.matrixWorld).applyMatrix4(au);let a=o.update(b),c=b.material;c.visible&&T.push(b,a,c,d,aw.z,null)}}else if((b.isMesh||b.isLine||b.isPoints)&&(!b.frustumCulled||aq.intersectsObject(b))){let a=o.update(b),c=b.material;if(e&&(void 0!==b.boundingSphere?(null===b.boundingSphere&&b.computeBoundingSphere(),aw.copy(b.boundingSphere.center)):(null===a.boundingSphere&&a.computeBoundingSphere(),aw.copy(a.boundingSphere.center)),aw.applyMatrix4(b.matrixWorld).applyMatrix4(au)),Array.isArray(c)){let e=a.groups;for(let f=0,g=e.length;f<g;f++){let g=e[f],h=c[g.materialIndex];h&&h.visible&&T.push(b,a,h,d,aw.z,g)}}else c.visible&&T.push(b,a,c,d,aw.z,null)}}let f=b.children;for(let b=0,g=f.length;b<g;b++)a(f[b],c,d,e)}(a,b,0,Y.sortObjects),T.finish(),!0===Y.sortObjects&&T.sort(al,am),this.info.render.frame++,!0===ar&&u.beginShadows();let c=U.state.shadowsArray;if(v.render(c,a,b),!0===ar&&u.endShadows(),!0===this.info.autoReset&&this.info.reset(),(!1===aD.enabled||!1===aD.isPresenting||!1===aD.hasDepthSensing())&&x.render(T,a),U.setupLights(Y._useLegacyLights),b.isArrayCamera){let c=b.cameras;for(let b=0,d=c.length;b<d;b++){let d=c[b];aN(T,a,d,d.viewport)}}else aN(T,a,b);null!==aa&&(j.updateMultisampleRenderTarget(aa),j.updateRenderTargetMipmap(aa)),!0===a.isScene&&a.onAfterRender(Y,a,b),D.resetDefaultState(),ab=-1,ac=null,X.pop(),U=X.length>0?X[X.length-1]:null,W.pop(),T=W.length>0?W[W.length-1]:null},this.getActiveCubeFace=function(){return $},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return aa},this.setRenderTargetTextures=function(a,b,d){i.get(a.texture).__webglTexture=b,i.get(a.depthTexture).__webglTexture=d;let e=i.get(a);e.__hasExternalTextures=!0,e.__hasExternalTextures&&(e.__autoAllocateDepthBuffer=void 0===d,e.__autoAllocateDepthBuffer||!0!==c.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),e.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(a,b){let c=i.get(a);c.__webglFramebuffer=b,c.__useDefaultFramebuffer=void 0===b},this.setRenderTarget=function(a,b=0,c=0){aa=a,$=b,_=c;let e=!0,f=null,h=!1,k=!1;if(a){let l=i.get(a);void 0!==l.__useDefaultFramebuffer?(g.bindFramebuffer(aA.FRAMEBUFFER,null),e=!1):void 0===l.__webglFramebuffer?j.setupRenderTarget(a):l.__hasExternalTextures&&j.rebindTextures(a,i.get(a.texture).__webglTexture,i.get(a.depthTexture).__webglTexture);let m=a.texture;(m.isData3DTexture||m.isDataArrayTexture||m.isCompressedArrayTexture)&&(k=!0);let n=i.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(f=Array.isArray(n[b])?n[b][c]:n[b],h=!0):f=d.isWebGL2&&a.samples>0&&!1===j.useMultisampledRTT(a)?i.get(a).__webglMultisampledFramebuffer:Array.isArray(n)?n[c]:n,ad.copy(a.viewport),ae.copy(a.scissor),af=a.scissorTest}else ad.copy(an).multiplyScalar(ak).floor(),ae.copy(ao).multiplyScalar(ak).floor(),af=ap;if(g.bindFramebuffer(aA.FRAMEBUFFER,f)&&d.drawBuffers&&e&&g.drawBuffers(a,f),g.viewport(ad),g.scissor(ae),g.setScissorTest(af),h){let d=i.get(a.texture);aA.framebufferTexture2D(aA.FRAMEBUFFER,aA.COLOR_ATTACHMENT0,aA.TEXTURE_CUBE_MAP_POSITIVE_X+b,d.__webglTexture,c)}else if(k){let d=i.get(a.texture);aA.framebufferTextureLayer(aA.FRAMEBUFFER,aA.COLOR_ATTACHMENT0,d.__webglTexture,c||0,b||0)}ab=-1},this.readRenderTargetPixels=function(a,b,e,f,h,j,k){if(!(a&&a.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=i.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&&void 0!==k&&(l=l[k]),l){g.bindFramebuffer(aA.FRAMEBUFFER,l);try{let g=a.texture,i=g.format,k=g.type;if(1023!==i&&C.convert(i)!==aA.getParameter(aA.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");let l=1016===k&&(c.has("EXT_color_buffer_half_float")||d.isWebGL2&&c.has("EXT_color_buffer_float"));if(1009!==k&&C.convert(k)!==aA.getParameter(aA.IMPLEMENTATION_COLOR_READ_TYPE)&&!(1015===k&&(d.isWebGL2||c.has("OES_texture_float")||c.has("WEBGL_color_buffer_float")))&&!l)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");b>=0&&b<=a.width-f&&e>=0&&e<=a.height-h&&aA.readPixels(b,e,f,h,C.convert(i),C.convert(k),j)}finally{let a=null!==aa?i.get(aa).__webglFramebuffer:null;g.bindFramebuffer(aA.FRAMEBUFFER,a)}}},this.copyFramebufferToTexture=function(a,b,c=0){let d=Math.pow(2,-c),e=Math.floor(b.image.width*d),f=Math.floor(b.image.height*d);j.setTexture2D(b,0),aA.copyTexSubImage2D(aA.TEXTURE_2D,c,0,0,a.x,a.y,e,f),g.unbindTexture()},this.copyTextureToTexture=function(a,b,c,d=0){let e=b.image.width,f=b.image.height,h=C.convert(c.format),i=C.convert(c.type);j.setTexture2D(c,0),aA.pixelStorei(aA.UNPACK_FLIP_Y_WEBGL,c.flipY),aA.pixelStorei(aA.UNPACK_PREMULTIPLY_ALPHA_WEBGL,c.premultiplyAlpha),aA.pixelStorei(aA.UNPACK_ALIGNMENT,c.unpackAlignment),b.isDataTexture?aA.texSubImage2D(aA.TEXTURE_2D,d,a.x,a.y,e,f,h,i,b.image.data):b.isCompressedTexture?aA.compressedTexSubImage2D(aA.TEXTURE_2D,d,a.x,a.y,b.mipmaps[0].width,b.mipmaps[0].height,h,b.mipmaps[0].data):aA.texSubImage2D(aA.TEXTURE_2D,d,a.x,a.y,h,i,b.image),0===d&&c.generateMipmaps&&aA.generateMipmap(aA.TEXTURE_2D),g.unbindTexture()},this.copyTextureToTexture3D=function(a,b,c,d,e=0){let f;if(Y.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");let h=a.max.x-a.min.x+1,i=a.max.y-a.min.y+1,k=a.max.z-a.min.z+1,l=C.convert(d.format),m=C.convert(d.type);if(d.isData3DTexture)j.setTexture3D(d,0),f=aA.TEXTURE_3D;else{if(!d.isDataArrayTexture&&!d.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");j.setTexture2DArray(d,0),f=aA.TEXTURE_2D_ARRAY}aA.pixelStorei(aA.UNPACK_FLIP_Y_WEBGL,d.flipY),aA.pixelStorei(aA.UNPACK_PREMULTIPLY_ALPHA_WEBGL,d.premultiplyAlpha),aA.pixelStorei(aA.UNPACK_ALIGNMENT,d.unpackAlignment);let n=aA.getParameter(aA.UNPACK_ROW_LENGTH),o=aA.getParameter(aA.UNPACK_IMAGE_HEIGHT),p=aA.getParameter(aA.UNPACK_SKIP_PIXELS),q=aA.getParameter(aA.UNPACK_SKIP_ROWS),r=aA.getParameter(aA.UNPACK_SKIP_IMAGES),s=c.isCompressedTexture?c.mipmaps[e]:c.image;aA.pixelStorei(aA.UNPACK_ROW_LENGTH,s.width),aA.pixelStorei(aA.UNPACK_IMAGE_HEIGHT,s.height),aA.pixelStorei(aA.UNPACK_SKIP_PIXELS,a.min.x),aA.pixelStorei(aA.UNPACK_SKIP_ROWS,a.min.y),aA.pixelStorei(aA.UNPACK_SKIP_IMAGES,a.min.z),c.isDataTexture||c.isData3DTexture?aA.texSubImage3D(f,e,b.x,b.y,b.z,h,i,k,l,m,s.data):c.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),aA.compressedTexSubImage3D(f,e,b.x,b.y,b.z,h,i,k,l,s.data)):aA.texSubImage3D(f,e,b.x,b.y,b.z,h,i,k,l,m,s),aA.pixelStorei(aA.UNPACK_ROW_LENGTH,n),aA.pixelStorei(aA.UNPACK_IMAGE_HEIGHT,o),aA.pixelStorei(aA.UNPACK_SKIP_PIXELS,p),aA.pixelStorei(aA.UNPACK_SKIP_ROWS,q),aA.pixelStorei(aA.UNPACK_SKIP_IMAGES,r),0===e&&d.generateMipmaps&&aA.generateMipmap(f),g.unbindTexture()},this.initTexture=function(a){a.isCubeTexture?j.setTextureCube(a,0):a.isData3DTexture?j.setTexture3D(a,0):a.isDataArrayTexture||a.isCompressedArrayTexture?j.setTexture2DArray(a,0):j.setTexture2D(a,0),g.unbindTexture()},this.resetState=function(){$=0,_=0,aa=null,g.reset(),D.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(a){this._outputColorSpace=a;let b=this.getContext();b.drawingBufferColorSpace=a===g?"display-p3":"srgb",b.unpackColorSpace=H.workingColorSpace===h?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===e?3001:3e3}set outputEncoding(a){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=3001===a?e:f}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(a){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=a}}(class extends el{}).prototype.isWebGL1Renderer=!0;class em{constructor(a,b=1,c=1e3){this.isFog=!0,this.name="",this.color=new ba(a),this.near=b,this.far=c}clone(){return new em(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class en extends aW{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),this.backgroundBlurriness=a.backgroundBlurriness,this.backgroundIntensity=a.backgroundIntensity,null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(a){let b=super.toJSON(a);return null!==this.fog&&(b.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(b.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(b.object.backgroundIntensity=this.backgroundIntensity),b}}class eo extends bd{constructor(a){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ba(0xffffff),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this.fog=a.fog,this}}let ep=new V,eq=new V,er=new ax,es=new aw,et=new ao;class eu extends aW{constructor(a=new bs,b=new eo){super(),this.isLine=!0,this.type="Line",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),this.material=Array.isArray(a.material)?a.material.slice():a.material,this.geometry=a.geometry,this}computeLineDistances(){let a=this.geometry;if(null===a.index){let b=a.attributes.position,c=[0];for(let a=1,d=b.count;a<d;a++)ep.fromBufferAttribute(b,a-1),eq.fromBufferAttribute(b,a),c[a]=c[a-1],c[a]+=ep.distanceTo(eq);a.setAttribute("lineDistance",new bk(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),et.copy(c.boundingSphere),et.applyMatrix4(d),et.radius+=e,!1===a.ray.intersectsSphere(et))return;er.copy(d).invert(),es.copy(a.ray).applyMatrix4(er);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g,i=new V,j=new V,k=new V,l=new V,m=this.isLineSegments?2:1,n=c.index,o=c.attributes.position;if(null!==n){let c=Math.max(0,f.start),d=Math.min(n.count,f.start+f.count);for(let e=c,f=d-1;e<f;e+=m){let c=n.getX(e),d=n.getX(e+1);if(i.fromBufferAttribute(o,c),j.fromBufferAttribute(o,d),es.distanceSqToSegment(i,j,l,k)>h)continue;l.applyMatrix4(this.matrixWorld);let f=a.ray.origin.distanceTo(l);f<a.near||f>a.far||b.push({distance:f,point:k.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}else{let c=Math.max(0,f.start),d=Math.min(o.count,f.start+f.count);for(let e=c,f=d-1;e<f;e+=m){if(i.fromBufferAttribute(o,e),j.fromBufferAttribute(o,e+1),es.distanceSqToSegment(i,j,l,k)>h)continue;l.applyMatrix4(this.matrixWorld);let c=a.ray.origin.distanceTo(l);c<a.near||c>a.far||b.push({distance:c,point:k.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let a=this.geometry.morphAttributes,b=Object.keys(a);if(b.length>0){let c=a[b[0]];if(void 0!==c){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,b=c.length;a<b;a++){let b=c[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[b]=a}}}}}let ev=new V,ew=new V;class ex extends eu{constructor(a,b){super(a,b),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let a=this.geometry;if(null===a.index){let b=a.attributes.position,c=[];for(let a=0,d=b.count;a<d;a+=2)ev.fromBufferAttribute(b,a),ew.fromBufferAttribute(b,a+1),c[a]=0===a?0:c[a-1],c[a+1]=c[a]+ev.distanceTo(ew);a.setAttribute("lineDistance",new bk(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class ey extends bd{constructor(a){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ba(0xffffff),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this.fog=a.fog,this}}let ez=new ax,eA=new aw,eB=new ao,eC=new V;class eD extends aW{constructor(a=new bs,b=new ey){super(),this.isPoints=!0,this.type="Points",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),this.material=Array.isArray(a.material)?a.material.slice():a.material,this.geometry=a.geometry,this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Points.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),eB.copy(c.boundingSphere),eB.applyMatrix4(d),eB.radius+=e,!1===a.ray.intersectsSphere(eB))return;ez.copy(d).invert(),eA.copy(a.ray).applyMatrix4(ez);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g,i=c.index,j=c.attributes.position;if(null!==i){let c=Math.max(0,f.start),e=Math.min(i.count,f.start+f.count);for(let f=c;f<e;f++){let c=i.getX(f);eC.fromBufferAttribute(j,c),eE(eC,c,h,d,a,b,this)}}else{let c=Math.max(0,f.start),e=Math.min(j.count,f.start+f.count);for(let f=c;f<e;f++)eC.fromBufferAttribute(j,f),eE(eC,f,h,d,a,b,this)}}updateMorphTargets(){let a=this.geometry.morphAttributes,b=Object.keys(a);if(b.length>0){let c=a[b[0]];if(void 0!==c){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,b=c.length;a<b;a++){let b=c[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[b]=a}}}}}function eE(a,b,c,d,e,f,g){let h=eA.distanceSqToPoint(a);if(h<c){let c=new V;eA.closestPointToPoint(a,c),c.applyMatrix4(d);let i=e.ray.origin.distanceTo(c);if(i<e.near||i>e.far)return;f.push({distance:i,distanceToRay:Math.sqrt(h),point:c,index:b,face:null,object:g})}}class eF{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)}getPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b}getSpacedPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b}getLength(){let a=this.getLengths();return a[a.length-1]}getLengths(a=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let b=[],c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)b.push(e+=(c=this.getPoint(f/a)).distanceTo(d)),d=c;return this.cacheArcLengths=b,b}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(a,b){let c,d=this.getLengths(),e=0,f=d.length;c=b||a*d[f-1];let g=0,h=f-1,i;for(;g<=h;)if((i=d[e=Math.floor(g+(h-g)/2)]-c)<0)g=e+1;else if(i>0)h=e-1;else{h=e;break}if(d[e=h]===c)return e/(f-1);let j=d[e],k=d[e+1];return(e+(c-j)/(k-j))/(f-1)}getTangent(a,b){let c=a-1e-4,d=a+1e-4;c<0&&(c=0),d>1&&(d=1);let e=this.getPoint(c),f=this.getPoint(d),g=b||(e.isVector2?new w:new V);return g.copy(f).sub(e).normalize(),g}getTangentAt(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)}computeFrenetFrames(a,b){let c=new V,d=[],e=[],f=[],g=new V,h=new ax;for(let b=0;b<=a;b++){let c=b/a;d[b]=this.getTangentAt(c,new V)}e[0]=new V,f[0]=new V;let i=Number.MAX_VALUE,j=Math.abs(d[0].x),k=Math.abs(d[0].y),l=Math.abs(d[0].z);j<=i&&(i=j,c.set(1,0,0)),k<=i&&(i=k,c.set(0,1,0)),l<=i&&c.set(0,0,1),g.crossVectors(d[0],c).normalize(),e[0].crossVectors(d[0],g),f[0].crossVectors(d[0],e[0]);for(let b=1;b<=a;b++){if(e[b]=e[b-1].clone(),f[b]=f[b-1].clone(),g.crossVectors(d[b-1],d[b]),g.length()>Number.EPSILON){g.normalize();let a=Math.acos(r(d[b-1].dot(d[b]),-1,1));e[b].applyMatrix4(h.makeRotationAxis(g,a))}f[b].crossVectors(d[b],e[b])}if(!0===b){let b=Math.acos(r(e[0].dot(e[a]),-1,1));b/=a,d[0].dot(g.crossVectors(e[0],e[a]))>0&&(b=-b);for(let c=1;c<=a;c++)e[c].applyMatrix4(h.makeRotationAxis(d[c],b*c)),f[c].crossVectors(d[c],e[c])}return{tangents:d,normals:e,binormals:f}}clone(){return new this.constructor().copy(this)}copy(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}toJSON(){let a={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a}fromJSON(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}class eG extends eF{constructor(a=0,b=0,c=1,d=1,e=0,f=2*Math.PI,g=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g,this.aRotation=h}getPoint(a,b){let c=b||new w,d=2*Math.PI,e=this.aEndAngle-this.aStartAngle,f=Math.abs(e)<Number.EPSILON;for(;e<0;)e+=d;for(;e>d;)e-=d;e<Number.EPSILON&&(e=f?0:d),!0!==this.aClockwise||f||(e===d?e=-d:e-=d);let g=this.aStartAngle+a*e,h=this.aX+this.xRadius*Math.cos(g),i=this.aY+this.yRadius*Math.sin(g);if(0!==this.aRotation){let a=Math.cos(this.aRotation),b=Math.sin(this.aRotation),c=h-this.aX,d=i-this.aY;h=c*a-d*b+this.aX,i=c*b+d*a+this.aY}return c.set(h,i)}copy(a){return super.copy(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}toJSON(){let a=super.toJSON();return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a}fromJSON(a){return super.fromJSON(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}}function eH(){let a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e,b=g,c=-3*e+3*f-2*g-h,d=2*e-2*f+g+h}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b))},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){let i=(b-a)/f-(c-a)/(f+g)+(c-b)/g,j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;e(b,c,i*=g,j*=g)},calc:function(e){let f=e*e;return a+b*e+c*f+f*e*d}}}let eI=new V,eJ=new eH,eK=new eH,eL=new eH;class eM extends eF{constructor(a=[],b=!1,c="centripetal",d=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=a,this.closed=b,this.curveType=c,this.tension=d}getPoint(a,b=new V){let c,d,e=this.points,f=e.length,g=(f-!this.closed)*a,h=Math.floor(g),i=g-h;this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/f)+1)*f:0===i&&h===f-1&&(h=f-2,i=1),this.closed||h>0?c=e[(h-1)%f]:(eI.subVectors(e[0],e[1]).add(e[0]),c=eI);let j=e[h%f],k=e[(h+1)%f];if(this.closed||h+2<f?d=e[(h+2)%f]:(eI.subVectors(e[f-1],e[f-2]).add(e[f-1]),d=eI),"centripetal"===this.curveType||"chordal"===this.curveType){let a="chordal"===this.curveType?.5:.25,b=Math.pow(c.distanceToSquared(j),a),e=Math.pow(j.distanceToSquared(k),a),f=Math.pow(k.distanceToSquared(d),a);e<1e-4&&(e=1),b<1e-4&&(b=e),f<1e-4&&(f=e),eJ.initNonuniformCatmullRom(c.x,j.x,k.x,d.x,b,e,f),eK.initNonuniformCatmullRom(c.y,j.y,k.y,d.y,b,e,f),eL.initNonuniformCatmullRom(c.z,j.z,k.z,d.z,b,e,f)}else"catmullrom"===this.curveType&&(eJ.initCatmullRom(c.x,j.x,k.x,d.x,this.tension),eK.initCatmullRom(c.y,j.y,k.y,d.y,this.tension),eL.initCatmullRom(c.z,j.z,k.z,d.z,this.tension));return b.set(eJ.calc(i),eK.calc(i),eL.calc(i)),b}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let c=a.points[b];this.points.push(c.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let c=this.points[b];a.points.push(c.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let c=a.points[b];this.points.push(new V().fromArray(c))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}}function eN(a,b,c,d,e){let f=(d-b)*.5,g=(e-c)*.5,h=a*a;return a*h*(2*c-2*d+f+g)+(-3*c+3*d-2*f-g)*h+f*a+c}function eO(a,b,c,d){return function(a,b){let c=1-a;return c*c*b}(a,b)+2*(1-a)*a*c+a*a*d}function eP(a,b,c,d,e){return function(a,b){let c=1-a;return c*c*c*b}(a,b)+function(a,b){let c=1-a;return 3*c*c*a*b}(a,c)+3*(1-a)*a*a*d+a*a*a*e}class eQ extends eF{constructor(a=new w,b=new w,c=new w,d=new w){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new w){let c=this.v0,d=this.v1,e=this.v2,f=this.v3;return b.set(eP(a,c.x,d.x,e.x,f.x),eP(a,c.y,d.y,e.y,f.y)),b}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}class eR extends eF{constructor(a=new w,b=new w){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=a,this.v2=b}getPoint(a,b=new w){return 1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1)),b}getPointAt(a,b){return this.getPoint(a,b)}getTangent(a,b=new w){return b.subVectors(this.v2,this.v1).normalize()}getTangentAt(a,b){return this.getTangent(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class eS extends eF{constructor(a=new w,b=new w,c=new w){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new w){let c=this.v0,d=this.v1,e=this.v2;return b.set(eO(a,c.x,d.x,e.x),eO(a,c.y,d.y,e.y)),b}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class eT extends eF{constructor(a=new V,b=new V,c=new V){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new V){let c=this.v0,d=this.v1,e=this.v2;return b.set(eO(a,c.x,d.x,e.x),eO(a,c.y,d.y,e.y),eO(a,c.z,d.z,e.z)),b}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class eU extends eF{constructor(a=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=a}getPoint(a,b=new w){let c=this.points,d=(c.length-1)*a,e=Math.floor(d),f=d-e,g=c[0===e?e:e-1],h=c[e],i=c[e>c.length-2?c.length-1:e+1],j=c[e>c.length-3?c.length-1:e+2];return b.set(eN(f,g.x,h.x,i.x,j.x),eN(f,g.y,h.y,i.y,j.y)),b}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let c=a.points[b];this.points.push(c.clone())}return this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let c=this.points[b];a.points.push(c.toArray())}return a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let c=a.points[b];this.points.push(new w().fromArray(c))}return this}}var eV=Object.freeze({__proto__:null,ArcCurve:class extends eG{constructor(a,b,c,d,e,f){super(a,b,c,c,d,e,f),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:eM,CubicBezierCurve:eQ,CubicBezierCurve3:class extends eF{constructor(a=new V,b=new V,c=new V,d=new V){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new V){let c=this.v0,d=this.v1,e=this.v2,f=this.v3;return b.set(eP(a,c.x,d.x,e.x,f.x),eP(a,c.y,d.y,e.y,f.y),eP(a,c.z,d.z,e.z,f.z)),b}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}},EllipseCurve:eG,LineCurve:eR,LineCurve3:class extends eF{constructor(a=new V,b=new V){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=a,this.v2=b}getPoint(a,b=new V){return 1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1)),b}getPointAt(a,b){return this.getPoint(a,b)}getTangent(a,b=new V){return b.subVectors(this.v2,this.v1).normalize()}getTangentAt(a,b){return this.getTangent(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}},QuadraticBezierCurve:eS,QuadraticBezierCurve3:eT,SplineCurve:eU});let eW=new V,eX=new V,eY=new V,eZ=new a5;class e$ extends bs{constructor(a=null,b=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:a,thresholdAngle:b},null!==a){let c=Math.cos(o*b),d=a.getIndex(),e=a.getAttribute("position"),f=d?d.count:e.count,g=[0,0,0],h=["a","b","c"],i=[,,,],j={},k=[];for(let a=0;a<f;a+=3){d?(g[0]=d.getX(a),g[1]=d.getX(a+1),g[2]=d.getX(a+2)):(g[0]=a,g[1]=a+1,g[2]=a+2);let{a:b,b:f,c:l}=eZ;if(b.fromBufferAttribute(e,g[0]),f.fromBufferAttribute(e,g[1]),l.fromBufferAttribute(e,g[2]),eZ.getNormal(eY),i[0]=`${Math.round(1e4*b.x)},${Math.round(1e4*b.y)},${Math.round(1e4*b.z)}`,i[1]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,i[2]=`${Math.round(1e4*l.x)},${Math.round(1e4*l.y)},${Math.round(1e4*l.z)}`,i[0]!==i[1]&&i[1]!==i[2]&&i[2]!==i[0])for(let a=0;a<3;a++){let b=(a+1)%3,d=i[a],e=i[b],f=eZ[h[a]],l=eZ[h[b]],m=`${d}_${e}`,n=`${e}_${d}`;n in j&&j[n]?(eY.dot(j[n].normal)<=c&&(k.push(f.x,f.y,f.z),k.push(l.x,l.y,l.z)),j[n]=null):m in j||(j[m]={index0:g[a],index1:g[b],normal:eY.clone()})}}for(let a in j)if(j[a]){let{index0:b,index1:c}=j[a];eW.fromBufferAttribute(e,b),eX.fromBufferAttribute(e,c),k.push(eW.x,eW.y,eW.z),k.push(eX.x,eX.y,eX.z)}this.setAttribute("position",new bk(k,3))}}copy(a){return super.copy(a),this.parameters=Object.assign({},a.parameters),this}}class e_ extends bs{constructor(a=1,b=32,c=16,d=0,e=2*Math.PI,f=0,g=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},b=Math.max(3,Math.floor(b)),c=Math.max(2,Math.floor(c));let h=Math.min(f+g,Math.PI),i=0,j=[],k=new V,l=new V,m=[],n=[],o=[],p=[];for(let m=0;m<=c;m++){let q=[],r=m/c,s=0;0===m&&0===f?s=.5/b:m===c&&h===Math.PI&&(s=-.5/b);for(let c=0;c<=b;c++){let h=c/b;k.x=-a*Math.cos(d+h*e)*Math.sin(f+r*g),k.y=a*Math.cos(f+r*g),k.z=a*Math.sin(d+h*e)*Math.sin(f+r*g),n.push(k.x,k.y,k.z),l.copy(k).normalize(),o.push(l.x,l.y,l.z),p.push(h+s,1-r),q.push(i++)}j.push(q)}for(let a=0;a<c;a++)for(let d=0;d<b;d++){let b=j[a][d+1],e=j[a][d],g=j[a+1][d],i=j[a+1][d+1];(0!==a||f>0)&&m.push(b,e,i),(a!==c-1||h<Math.PI)&&m.push(e,g,i)}this.setIndex(m),this.setAttribute("position",new bk(n,3)),this.setAttribute("normal",new bk(o,3)),this.setAttribute("uv",new bk(p,2))}copy(a){return super.copy(a),this.parameters=Object.assign({},a.parameters),this}static fromJSON(a){return new e_(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)}}class e0 extends bs{constructor(a=1,b=.4,c=12,d=48,e=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},c=Math.floor(c),d=Math.floor(d);let f=[],g=[],h=[],i=[],j=new V,k=new V,l=new V;for(let f=0;f<=c;f++)for(let m=0;m<=d;m++){let n=m/d*e,o=f/c*Math.PI*2;k.x=(a+b*Math.cos(o))*Math.cos(n),k.y=(a+b*Math.cos(o))*Math.sin(n),k.z=b*Math.sin(o),g.push(k.x,k.y,k.z),j.x=a*Math.cos(n),j.y=a*Math.sin(n),l.subVectors(k,j).normalize(),h.push(l.x,l.y,l.z),i.push(m/d),i.push(f/c)}for(let a=1;a<=c;a++)for(let b=1;b<=d;b++){let c=(d+1)*a+b-1,e=(d+1)*(a-1)+b-1,g=(d+1)*(a-1)+b,h=(d+1)*a+b;f.push(c,e,h),f.push(e,g,h)}this.setIndex(f),this.setAttribute("position",new bk(g,3)),this.setAttribute("normal",new bk(h,3)),this.setAttribute("uv",new bk(i,2))}copy(a){return super.copy(a),this.parameters=Object.assign({},a.parameters),this}static fromJSON(a){return new e0(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)}}class e1 extends bs{constructor(a=new eT(new V(-1,-1,0),new V(-1,1,0),new V(1,1,0)),b=64,c=1,d=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};let f=a.computeFrenetFrames(b,e);this.tangents=f.tangents,this.normals=f.normals,this.binormals=f.binormals;let g=new V,h=new V,i=new w,j=new V,k=[],l=[],m=[],n=[];function o(e){j=a.getPointAt(e/b,j);let i=f.normals[e],m=f.binormals[e];for(let a=0;a<=d;a++){let b=a/d*Math.PI*2,e=Math.sin(b),f=-Math.cos(b);h.x=f*i.x+e*m.x,h.y=f*i.y+e*m.y,h.z=f*i.z+e*m.z,h.normalize(),l.push(h.x,h.y,h.z),g.x=j.x+c*h.x,g.y=j.y+c*h.y,g.z=j.z+c*h.z,k.push(g.x,g.y,g.z)}}(function(){for(let a=0;a<b;a++)o(a);o(!1===e?b:0),function(){for(let a=0;a<=b;a++)for(let c=0;c<=d;c++)i.x=a/b,i.y=c/d,m.push(i.x,i.y)}(),function(){for(let a=1;a<=b;a++)for(let b=1;b<=d;b++){let c=(d+1)*(a-1)+(b-1),e=(d+1)*a+(b-1),f=(d+1)*a+b,g=(d+1)*(a-1)+b;n.push(c,e,g),n.push(e,f,g)}}()})(),this.setIndex(n),this.setAttribute("position",new bk(k,3)),this.setAttribute("normal",new bk(l,3)),this.setAttribute("uv",new bk(m,2))}copy(a){return super.copy(a),this.parameters=Object.assign({},a.parameters),this}toJSON(){let a=super.toJSON();return a.path=this.parameters.path.toJSON(),a}static fromJSON(a){return new e1(new eV[a.path.type]().fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed)}}class e2 extends bd{constructor(a){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ba(0xffffff),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ba(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new w(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this.fog=a.fog,this}}class e3 extends e2{constructor(a){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new w(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return r(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ba(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ba(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ba(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(a)}get anisotropy(){return this._anisotropy}set anisotropy(a){this._anisotropy>0!=a>0&&this.version++,this._anisotropy=a}get clearcoat(){return this._clearcoat}set clearcoat(a){this._clearcoat>0!=a>0&&this.version++,this._clearcoat=a}get iridescence(){return this._iridescence}set iridescence(a){this._iridescence>0!=a>0&&this.version++,this._iridescence=a}get sheen(){return this._sheen}set sheen(a){this._sheen>0!=a>0&&this.version++,this._sheen=a}get transmission(){return this._transmission}set transmission(a){this._transmission>0!=a>0&&this.version++,this._transmission=a}copy(a){return super.copy(a),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=a.anisotropy,this.anisotropyRotation=a.anisotropyRotation,this.anisotropyMap=a.anisotropyMap,this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.ior=a.ior,this.iridescence=a.iridescence,this.iridescenceMap=a.iridescenceMap,this.iridescenceIOR=a.iridescenceIOR,this.iridescenceThicknessRange=[...a.iridescenceThicknessRange],this.iridescenceThicknessMap=a.iridescenceThicknessMap,this.sheen=a.sheen,this.sheenColor.copy(a.sheenColor),this.sheenColorMap=a.sheenColorMap,this.sheenRoughness=a.sheenRoughness,this.sheenRoughnessMap=a.sheenRoughnessMap,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this.thickness=a.thickness,this.thicknessMap=a.thicknessMap,this.attenuationDistance=a.attenuationDistance,this.attenuationColor.copy(a.attenuationColor),this.specularIntensity=a.specularIntensity,this.specularIntensityMap=a.specularIntensityMap,this.specularColor.copy(a.specularColor),this.specularColorMap=a.specularColorMap,this}}function e4(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a}class e5{constructor(a,b,c,d){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==d?d:new b.constructor(c),this.sampleValues=b,this.valueSize=c,this.settings=null,this.DefaultSettings_={}}evaluate(a){let b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{let f;c:{d:if(!(a<d)){for(let f=c+2;;){if(void 0===d){if(a<e)break d;return c=b.length,this._cachedIndex=c,this.copySampleValue_(c-1)}if(c===f)break;if(e=d,a<(d=b[++c]))break b}f=b.length;break c}if(!(a>=e)){let g=b[1];a<g&&(c=2,e=g);for(let f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.copySampleValue_(0);if(c===f)break;if(d=e,a>=(e=b[--c-1]))break b}f=c,c=0;break c}break a}for(;c<f;){let d=c+f>>>1;a<b[d]?f=d:c=d+1}if(d=b[c],void 0===(e=b[c-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===d)return c=b.length,this._cachedIndex=c,this.copySampleValue_(c-1)}this._cachedIndex=c,this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(a){let b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(let a=0;a!==d;++a)b[a]=c[e+a];return b}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class e6 extends e5{constructor(a,b,c,d){super(a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(a,b,c){let d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=a,g=2*b-c;break;case 2402:e=d.length-2,g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a,h=2*c-b;break;case 2402:f=1,h=c+d[1]-d[0];break;default:f=a-1,h=b}let i=(c-b)*.5,j=this.valueSize;this._weightPrev=i/(b-g),this._weightNext=i/(h-c),this._offsetPrev=e*j,this._offsetNext=f*j}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n,q=-l*p+2*l*o-l*n,r=(1+l)*p+(-1.5-2*l)*o+(-.5+l)*n+1,s=(-1-m)*p+(1.5+m)*o+.5*n,t=m*p-m*o;for(let a=0;a!==g;++a)e[a]=q*f[j+a]+r*f[i+a]+s*f[h+a]+t*f[k+a];return e}}class e7 extends e5{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(let a=0;a!==g;++a)e[a]=f[i+a]*k+f[h+a]*j;return e}}class e8 extends e5{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a){return this.copySampleValue_(a-1)}}class e9{constructor(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=e4(b,this.TimeBufferType),this.values=e4(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}static toJSON(a){let b,c=a.constructor;if(c.toJSON!==this.toJSON)b=c.toJSON(a);else{b={name:a.name,times:e4(a.times,Array),values:e4(a.values,Array)};let c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}return b.type=a.ValueTypeName,b}InterpolantFactoryMethodDiscrete(a){return new e8(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodLinear(a){return new e7(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodSmooth(a){return new e6(this.times,this.values,this.getValueSize(),a)}setInterpolation(a){let b;switch(a){case 2300:b=this.InterpolantFactoryMethodDiscrete;break;case 2301:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){let b="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(b);return console.warn("THREE.KeyframeTrack:",b),this}return this.createInterpolant=b,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(a){if(0!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this}scale(a){if(1!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this}trim(a,b){let c=this.times,d=c.length,e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;if(++f,0!==e||f!==d){e>=f&&(e=(f=Math.max(f,1))-1);let a=this.getValueSize();this.times=c.slice(e,f),this.values=this.values.slice(e*a,f*a)}return this}validate(){var a;let b=!0,c=this.getValueSize();c-Math.floor(c)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),b=!1);let d=this.times,e=this.values,f=d.length;0===f&&(console.error("THREE.KeyframeTrack: Track is empty.",this),b=!1);let g=null;for(let a=0;a!==f;a++){let c=d[a];if("number"==typeof c&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),b=!1;break}if(null!==g&&g>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,g),b=!1;break}g=c}if(void 0!==e&&ArrayBuffer.isView(a=e)&&!(a instanceof DataView))for(let a=0,c=e.length;a!==c;++a){let c=e[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),b=!1;break}}return b}optimize(){let a=this.times.slice(),b=this.values.slice(),c=this.getValueSize(),d=2302===this.getInterpolation(),e=a.length-1,f=1;for(let g=1;g<e;++g){let e=!1,h=a[g];if(h!==a[g+1]&&(1!==g||h!==a[0]))if(d)e=!0;else{let a=g*c,d=a-c,f=a+c;for(let g=0;g!==c;++g){let c=b[a+g];if(c!==b[d+g]||c!==b[f+g]){e=!0;break}}}if(e){if(g!==f){a[f]=a[g];let d=g*c,e=f*c;for(let a=0;a!==c;++a)b[e+a]=b[d+a]}++f}}if(e>0){a[f]=a[e];for(let a=e*c,d=f*c,g=0;g!==c;++g)b[d+g]=b[a+g];++f}return f!==a.length?(this.times=a.slice(0,f),this.values=b.slice(0,f*c)):(this.times=a,this.values=b),this}clone(){let a=this.times.slice(),b=this.values.slice(),c=new this.constructor(this.name,a,b);return c.createInterpolant=this.createInterpolant,c}}e9.prototype.TimeBufferType=Float32Array,e9.prototype.ValueBufferType=Float32Array,e9.prototype.DefaultInterpolation=2301;class fa extends e9{}fa.prototype.ValueTypeName="bool",fa.prototype.ValueBufferType=Array,fa.prototype.DefaultInterpolation=2300,fa.prototype.InterpolantFactoryMethodLinear=void 0,fa.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends e9{}).prototype.ValueTypeName="color",(class extends e9{}).prototype.ValueTypeName="number";class fb extends e5{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=(c-b)/(d-b),i=a*g;for(let a=i+g;i!==a;i+=4)U.slerpFlat(e,0,f,i-g,f,i,h);return e}}class fc extends e9{InterpolantFactoryMethodLinear(a){return new fb(this.times,this.values,this.getValueSize(),a)}}fc.prototype.ValueTypeName="quaternion",fc.prototype.DefaultInterpolation=2301,fc.prototype.InterpolantFactoryMethodSmooth=void 0;class fd extends e9{}fd.prototype.ValueTypeName="string",fd.prototype.ValueBufferType=Array,fd.prototype.DefaultInterpolation=2300,fd.prototype.InterpolantFactoryMethodLinear=void 0,fd.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends e9{}).prototype.ValueTypeName="vector";class fe extends aW{constructor(a,b=1){super(),this.isLight=!0,this.type="Light",this.color=new ba(a),this.intensity=b}dispose(){}copy(a,b){return super.copy(a,b),this.color.copy(a.color),this.intensity=a.intensity,this}toJSON(a){let b=super.toJSON(a);return b.object.color=this.color.getHex(),b.object.intensity=this.intensity,void 0!==this.groundColor&&(b.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(b.object.distance=this.distance),void 0!==this.angle&&(b.object.angle=this.angle),void 0!==this.decay&&(b.object.decay=this.decay),void 0!==this.penumbra&&(b.object.penumbra=this.penumbra),void 0!==this.shadow&&(b.object.shadow=this.shadow.toJSON()),b}}class ff extends fe{constructor(a,b,c){super(a,c),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(aW.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ba(b)}copy(a,b){return super.copy(a,b),this.groundColor.copy(a.groundColor),this}}let fg=new ax,fh=new V,fi=new V;class fj{constructor(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new w(512,512),this.map=null,this.mapPass=null,this.matrix=new ax,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new b4,this._frameExtents=new w(1,1),this._viewportCount=1,this._viewports=[new Q(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(a){let b=this.camera,c=this.matrix;fh.setFromMatrixPosition(a.matrixWorld),b.position.copy(fh),fi.setFromMatrixPosition(a.target.matrixWorld),b.lookAt(fi),b.updateMatrixWorld(),fg.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fg),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(fg)}getViewport(a){return this._viewports[a]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}class fk extends fj{constructor(){super(new bW(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(a){let b=this.camera,c=2*p*a.angle*this.focus,d=this.mapSize.width/this.mapSize.height,e=a.distance||b.far;(c!==b.fov||d!==b.aspect||e!==b.far)&&(b.fov=c,b.aspect=d,b.far=e,b.updateProjectionMatrix()),super.updateMatrices(a)}copy(a){return super.copy(a),this.focus=a.focus,this}}class fl extends fe{constructor(a,b,c=0,d=Math.PI/3,e=0,f=2){super(a,b),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(aW.DEFAULT_UP),this.updateMatrix(),this.target=new aW,this.distance=c,this.angle=d,this.penumbra=e,this.decay=f,this.map=null,this.shadow=new fk}get power(){return this.intensity*Math.PI}set power(a){this.intensity=a/Math.PI}dispose(){this.shadow.dispose()}copy(a,b){return super.copy(a,b),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}class fm extends fj{constructor(){super(new ci(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class fn extends fe{constructor(a,b){super(a,b),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(aW.DEFAULT_UP),this.updateMatrix(),this.target=new aW,this.shadow=new fm}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}let fo="\\[\\]\\.:\\/",fp=RegExp("["+fo+"]","g"),fq="[^"+fo+"]",fr="[^"+fo.replace("\\.","")+"]",fs=/((?:WC+[\/:])*)/.source.replace("WC",fq),ft=/(WCOD+)?/.source.replace("WCOD",fr),fu=RegExp("^"+fs+ft+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fq)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fq)+"$"),fv=["material","materials","bones","map"];class fw{constructor(a,b,c){this.path=b,this.parsedPath=c||fw.parseTrackName(b),this.node=fw.findNode(a,this.parsedPath.nodeName),this.rootNode=a,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(a,b,c){return a&&a.isAnimationObjectGroup?new fw.Composite(a,b,c):new fw(a,b,c)}static sanitizeNodeName(a){return a.replace(/\s/g,"_").replace(fp,"")}static parseTrackName(a){let b=fu.exec(a);if(null===b)throw Error("PropertyBinding: Cannot parse trackName: "+a);let c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},d=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==d&&-1!==d){let a=c.nodeName.substring(d+1);-1!==fv.indexOf(a)&&(c.nodeName=c.nodeName.substring(0,d),c.objectName=a)}if(null===c.propertyName||0===c.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c}static findNode(a,b){if(void 0===b||""===b||"."===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let c=function(a){for(let d=0;d<a.length;d++){let e=a[d];if(e.name===b||e.uuid===b)return e;let f=c(e.children);if(f)return f}return null},d=c(a.children);if(d)return d}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(a,b){a[b]=this.targetObject[this.propertyName]}_getValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]}_getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}_setValue_direct(a,b){this.targetObject[this.propertyName]=a[b]}_setValue_direct_setNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]}_setValue_array_setNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]}_setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)}_setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(a,b){this.bind(),this.getValue(a,b)}_setValue_unbound(a,b){this.bind(),this.setValue(a,b)}bind(){let a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(a||(a=fw.findNode(this.rootNode,b.nodeName),this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(c){let d=b.objectIndex;switch(c){case"materials":if(!a.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!a.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);a=a.material.materials;break;case"bones":if(!a.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);a=a.skeleton.bones;for(let b=0;b<a.length;b++)if(a[b].name===d){d=b;break}break;case"map":if("map"in a){a=a.map;break}if(!a.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!a.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);a=a.material.map;break;default:if(void 0===a[c])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);a=a[c]}if(void 0!==d){if(void 0===a[d])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);a=a[d]}}let f=a[d];if(void 0===f)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+b.nodeName+"."+d+" but it wasn't found.",a);let g=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?g=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(g=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!a.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}h=this.BindingType.ArrayElement,this.resolvedProperty=f,this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=f):Array.isArray(f)?(h=this.BindingType.EntireArray,this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][g]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}function fx(){let a=(0,d.useRef)(null);return(0,d.useEffect)(()=>{if(!a.current)return;let b=a.current,c=new en;c.fog=new em(0,30,140);let d=new el({antialias:!0,alpha:!0});d.setPixelRatio(Math.min(window.devicePixelRatio,2));let{clientWidth:e,clientHeight:f}=b;d.setSize(e,f),d.shadowMap.enabled=!0,b.appendChild(d.domElement);let g=new bW(45,e/f,.1,1e3);g.position.set(0,6,26);let h=0xf3ff97;c.add(new ff(h,657930,.5));let i=new fl(h,3,200,Math.PI/6,.25,1.5);i.position.set(18,22,16),i.castShadow=!0,c.add(i);let j=new fn(h,1.4);j.position.set(-18,8,-12),c.add(j);let k=(a,b,c=.45)=>new e3({color:a,transparent:!0,opacity:c,roughness:.15,metalness:0,transmission:.85,thickness:.8,clearcoat:1,clearcoatRoughness:.1,emissive:new ba(b),emissiveIntensity:.25}),l=(a=h)=>new e2({color:a,emissive:a,emissiveIntensity:1.6,metalness:.2,roughness:.25}),m=(a,b=8191922,c=.24)=>{let d=new bK(new e_(c,24,24),l(b));return d.position.copy(a),d.castShadow=!0,d.receiveShadow=!0,d},n=function(){let a=new ec;[2.2,1.6,1,.45].forEach((b,c)=>{let d=new bK(new e0(b,.07+.02*c,16,128),k(h,h,.35+.06*c));d.rotation.x=Math.PI/2,a.add(d)});let b=new bK(new e0(1.9,.08,16,160),k(h,h,.55));b.rotation.x=Math.PI/2,a.add(b),[new V(0,1.9,0),new V(1.9,0,0),new V(0,-1.9,0),new V(-1.9,0,0)].forEach(b=>a.add(m(b)));let c=new ex(new e$(new bM(6,6,.1,6,6,1)),new eo({color:h,transparent:!0,opacity:.25}));return c.position.z=-.35,a.add(c),a.tick=c=>{b.rotation.z=.4*c,a.rotation.z=.15*Math.sin(.2*c)},a}();n.position.set(-7.2,3.4,0),c.add(n);let o=function(){let a=new ec;return[3,2.2,1.4,.7].forEach((b,c)=>{let d=new bK(new bM(b,b,.08),k(h,h,.28+.08*c));a.add(d)}),[new V(1.7,1.7,0),new V(-1.7,1.7,0),new V(-1.7,-1.7,0),new V(1.7,-1.7,0)].forEach(b=>a.add(m(b,h,.22))),a.tick=b=>{a.rotation.x=.25*Math.sin(.35*b)+.3,a.rotation.y=.25*b},a}();o.position.set(7.2,2,0),c.add(o);let p=function(){let a=new ec,b=(b,c,d=.07)=>{let e=[];for(let a=0;a<3;a++){let c=2*Math.PI/3*a-Math.PI/2;e.push(new V(Math.cos(c)*b,Math.sin(c)*b,0))}e.push(e[0].clone());let f=new eM(e);a.add(new eu(new bs().setFromPoints(e),new eo({color:c}))),a.add(new bK(new e1(f,90,d,12,!0),l(c)))};b(2,h,.05),b(1.4,h,.04),b(.85,h,.035);for(let b=0;b<3;b++){let c=2*Math.PI/3*b-Math.PI/2;a.add(m(new V(2*Math.cos(c),2*Math.sin(c),0),h,.24))}return a.tick=b=>{a.rotation.z=.3*b+.3},a}();p.position.set(0,-4.5,0),c.add(p);let q=new ec;c.add(q);let r=(a,b,c=.6,d=2.6,e=8191922)=>{let f=a.clone().lerp(b,.5),g=new V().subVectors(b,a).cross(new V(0,1,0)).normalize(),i=a.clone(),j=f.clone().addScaledVector(g,c).add(new V(0,d,0));return((a,b=.06,c=h)=>new bK(new e1(new eM(a),180,b,16,!1),new e2({color:c,emissive:c,emissiveIntensity:1.2,roughness:.35,metalness:0})))([i,j,f.clone().addScaledVector(g,-c).add(new V(0,-(.2*d),0)),b.clone()],.08,e)},s=r(n.position,o.position,1.1,2.4,h),t=r(o.position,p.position,.8,3.2,h),u=r(p.position,n.position,1.4,2.2,h);q.add(s,t,u);let v=new bs,w=new Float32Array(2700);for(let a=0;a<900;a++)w[3*a+0]=(Math.random()-.5)*140,w[3*a+1]=(Math.random()-.5)*100,w[3*a+2]=(Math.random()-.5)*140;v.setAttribute("position",new bh(w,3));let x=new eD(v,new ey({size:.6,color:h,transparent:!0,opacity:.35}));c.add(x);let y=performance.now(),z=()=>{let a=(performance.now()-y)/1e3;[s,t,u].forEach((b,c)=>{let d=1+.25*Math.sin(a*(1.2+.2*c));b.material.emissiveIntensity=.9*d}),[n,o,p].forEach(b=>b.tick&&b.tick(a)),x.rotation.y=.01*a,d.render(c,g),requestAnimationFrame(z)};z();let A=()=>{let a=b.clientWidth,c=b.clientHeight;g.aspect=a/c,g.updateProjectionMatrix(),d.setSize(a,c)};return window.addEventListener("resize",A),()=>{window.removeEventListener("resize",A),b.removeChild(d.domElement),d.dispose()}},[]),(0,c.jsx)("div",{ref:a,className:"absolute inset-0"})}function fy(){return(0,c.jsx)("div",{className:"relative h-[320px] md:h-[420px] lg:h-[520px]",children:(0,c.jsx)(fx,{})})}fw.Composite=class{constructor(a,b,c){let d=c||fw.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,d)}getValue(a,b){this.bind();let c=this._targetGroup.nCachedObjects_,d=this._bindings[c];void 0!==d&&d.getValue(a,b)}setValue(a,b){let c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)}bind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()}unbind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}},fw.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},fw.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},fw.prototype.GetterByBindingType=[fw.prototype._getValue_direct,fw.prototype._getValue_array,fw.prototype._getValue_arrayElement,fw.prototype._getValue_toArray],fw.prototype.SetterByBindingTypeAndVersioning=[[fw.prototype._setValue_direct,fw.prototype._setValue_direct_setNeedsUpdate,fw.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[fw.prototype._setValue_array,fw.prototype._setValue_array_setNeedsUpdate,fw.prototype._setValue_array_setMatrixWorldNeedsUpdate],[fw.prototype._setValue_arrayElement,fw.prototype._setValue_arrayElement_setNeedsUpdate,fw.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[fw.prototype._setValue_fromArray,fw.prototype._setValue_fromArray_setNeedsUpdate,fw.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"161"}}))}];

//# sourceMappingURL=src_components_633c29e3._.js.map