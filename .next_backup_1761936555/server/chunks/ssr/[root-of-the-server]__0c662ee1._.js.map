{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamlee/Client/flowryd/src/components/MatchingAnimation.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { motion, useAnimation } from \"framer-motion\";\n\ntype Anchor = { x: number; y: number }; // normalized (0..1)\n\n// const DURATION = 8; // seconds (full loop) // reserved\n\nfunction useContainerSize(ref: React.RefObject<HTMLDivElement>) {\n  const [size, setSize] = useState({ w: 0, h: 0 });\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n    const ro = new ResizeObserver(() => {\n      const r = el.getBoundingClientRect();\n      setSize({ w: r.width, h: r.height });\n    });\n    ro.observe(el);\n    return () => ro.disconnect();\n  }, [ref]);\n\n  return size;\n}\n\nconst ease = [0.6, 0.05, 0.2, 1] as const;\n\nconst centerAnchor: Anchor = { x: 0.5, y: 0.5 };\n\nfunction anchors3x3(): Anchor[] {\n  const g = [1 / 6, 0.5, 5 / 6];\n  const out: Anchor[] = [];\n  for (let yi = 0; yi < 3; yi++) {\n    for (let xi = 0; xi < 3; xi++) {\n      out.push({ x: g[xi], y: g[yi] });\n    }\n  }\n  return out;\n}\n\nfunction pick<T>(arr: T[]): T {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nfunction CircleGlyph({ size = 56 }: { size?: number }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <circle cx=\"28\" cy=\"28\" r=\"18\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <circle cx=\"28\" cy=\"28\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"1.5\" opacity={0.9} />\n      <circle cx=\"28\" cy=\"28\" r=\"3\" fill=\"currentColor\" />\n      {[0, 90, 180, 270].map((a) => (\n        <circle\n          key={a}\n          cx={28 + 18 * Math.cos((a * Math.PI) / 180)}\n          cy={28 + 18 * Math.sin((a * Math.PI) / 180)}\n          r=\"2.5\"\n          fill=\"currentColor\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nfunction SquareGlyph({ size = 54 }: { size?: number }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <rect x=\"11\" y=\"11\" width=\"34\" height=\"34\" rx=\"3\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <rect x=\"18\" y=\"18\" width=\"20\" height=\"20\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"1.5\" opacity={0.9} />\n      {[{ x: 11, y: 11 }, { x: 45, y: 11 }, { x: 11, y: 45 }, { x: 45, y: 45 }].map((p, i) => (\n        <circle key={i} cx={p.x} cy={p.y} r=\"2.5\" fill=\"currentColor\" />\n      ))}\n    </svg>\n  );\n}\n\nfunction TriangleGlyph({ size = 58 }: { size?: number }) {\n  const p1 = { x: 28, y: 8 };\n  const p2 = { x: 8, y: 46 };\n  const p3 = { x: 48, y: 46 };\n  const ip1 = { x: 28, y: 16 };\n  const ip2 = { x: 16, y: 38 };\n  const ip3 = { x: 40, y: 38 };\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <path d={`M ${p1.x} ${p1.y} L ${p2.x} ${p2.y} L ${p3.x} ${p3.y} Z`} stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <path d={`M ${ip1.x} ${ip1.y} L ${ip2.x} ${ip2.y} L ${ip3.x} ${ip3.y} Z`} stroke=\"currentColor\" strokeWidth=\"1.5\" opacity={0.9} />\n      {[p1, p2, p3].map((p, i) => (\n        <circle key={i} cx={p.x} cy={p.y} r=\"2.5\" fill=\"currentColor\" />\n      ))}\n    </svg>\n  );\n}\n\n// Simple monochrome logo SVGs (minimalist)\n/*\nfunction SlackLogo({ size = 52 }: { size?: number }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <g stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\">\n        <path d=\"M20 10 v12\" />\n        <path d=\"M16 22 h12\" />\n        <path d=\"M36 46 v-12\" />\n        <path d=\"M40 34 h-12\" />\n        <path d=\"M10 36 h12\" />\n        <path d=\"M22 40 v-12\" />\n        <path d=\"M46 20 h-12\" />\n        <path d=\"M34 16 v12\" />\n      </g>\n    </svg>\n  );\n}\n\nfunction DiscordLogo({ size = 56 }: { size?: number }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <path\n        d=\"M18 20c5-3 15-3 20 0 2 1 4 5 5 8-2 1-4 2-6 3-1-2-2-3-2-3-3 1-10 1-13 0 0 0-1 1-2 3-2-1-4-2-6-3 1-3 3-7 5-8z\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        fill=\"none\"\n      />\n      <circle cx=\"23\" cy=\"27\" r=\"2\" fill=\"currentColor\" />\n      <circle cx=\"33\" cy=\"27\" r=\"2\" fill=\"currentColor\" />\n    </svg>\n  );\n}\n\nfunction TelegramLogo({ size = 52 }: { size?: number }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <path d=\"M8 28 L48 12 L40 44 L28 34 L20 40 L22 30 Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\" />\n      <path d=\"M22 30 L34 22\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n    </svg>\n  );\n}\n\nfunction LinkedInLogo({ size = 48 }: { size?: number }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" className=\"text-white/90\" fill=\"none\">\n      <rect x=\"10\" y=\"14\" width=\"36\" height=\"28\" rx=\"3\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <rect x=\"14\" y=\"22\" width=\"6\" height=\"14\" fill=\"currentColor\" />\n      <circle cx=\"17\" cy=\"19\" r=\"3\" fill=\"currentColor\" />\n      <path d=\"M26 36 v-10 h6 m0 0 c6 0 6 4 6 6 v4\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n    </svg>\n  );\n}\n*/\n\nexport default function MatchingAnimation({ logos = false }: { logos?: boolean }) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  // cast to satisfy strict RefObject<HTMLDivElement>\n  const { w, h } = useContainerSize(containerRef as unknown as React.RefObject<HTMLDivElement>);\n  const grid = useMemo(() => anchors3x3(), []);\n\n  // support up to 4 elements; use first N based on mode\n  const controls = [useAnimation(), useAnimation(), useAnimation(), useAnimation()] as const;\n  const opacityControls = [useAnimation(), useAnimation(), useAnimation(), useAnimation()] as const;\n  const scaleControls = [useAnimation(), useAnimation(), useAnimation(), useAnimation()] as const;\n  const count = logos ? 4 : 3;\n\n  const [points, setPoints] = useState<Anchor[]>([\n    { x: Math.random() * 0.8 + 0.1, y: Math.random() * 0.8 + 0.1 },\n    { x: Math.random() * 0.8 + 0.1, y: Math.random() * 0.8 + 0.1 },\n    { x: Math.random() * 0.8 + 0.1, y: Math.random() * 0.8 + 0.1 },\n    { x: Math.random() * 0.8 + 0.1, y: Math.random() * 0.8 + 0.1 },\n  ]);\n  const [showLines, setShowLines] = useState(false);\n  const [pathProgress, setPathProgress] = useState(0);\n\n  const toPercent = (a: Anchor) => ({ left: `${a.x * 100}%`, top: `${a.y * 100}%` });\n  const toPx = (a: Anchor) => ({ x: a.x * w, y: a.y * h });\n\n  // Timeline orchestrator\n  useEffect(() => {\n    let mounted = true;\n\n    const run = async () => {\n      while (mounted) {\n        // Stage 1 — Idle Fade-In (0-1s)\n        const startAnchors = [pick(grid), pick(grid), pick(grid), pick(grid)];\n        setPoints(startAnchors);\n        await Promise.all(\n          Array.from({ length: count }, (_, i) =>\n            Promise.all([\n              controls[i].set(toPercent(startAnchors[i])),\n              opacityControls[i].start({ opacity: [0, 1], transition: { duration: 0.8, ease } }),\n              scaleControls[i].start({ scale: 1, transition: { duration: 0 } }),\n            ])\n          )\n        );\n\n        if (logos) {\n          // Continuous drifting search for logos mode\n          for (let hop = 0; hop < 6 && mounted; hop++) {\n            const next = [pick(grid), pick(grid), pick(grid), pick(grid)];\n            setPoints(next);\n            await Promise.all(\n              Array.from({ length: count }, (_, i) =>\n                controls[i].start({ ...toPercent(next[i]), transition: { duration: 1.1, ease } })\n              )\n            );\n          }\n          continue; // loop again\n        }\n\n        // Stage 2 — Search (1-4s) 3 hops\n        for (let hop = 0; hop < 3; hop++) {\n          const next = [pick(grid), pick(grid), pick(grid)];\n          setPoints(next);\n          await Promise.all(\n            [0, 1, 2].slice(0, count).map((i) =>\n              controls[i].start({ ...toPercent(next[i]), transition: { duration: 0.9, ease } })\n            )\n          );\n        }\n\n        // Stage 3 — Connect (4-6s)\n        setShowLines(true);\n        setPathProgress(0);\n        await new Promise((r) => setTimeout(r, 50));\n        setPathProgress(1);\n        await new Promise((r) => setTimeout(r, 1200));\n\n        // Stage 4 — Align & Pulse (6-8s)\n        setPoints([centerAnchor, centerAnchor, centerAnchor]);\n        await Promise.all(\n          [0, 1, 2].slice(0, count).map((i) =>\n            controls[i].start({ ...toPercent(centerAnchor), transition: { duration: 0.9, ease } })\n          )\n        );\n        await Promise.all(\n          [0, 1, 2].slice(0, count).map((i) =>\n            scaleControls[i].start({ scale: [1, 1.18, 1], transition: { duration: 0.7, ease } })\n          )\n        );\n        setShowLines(false);\n        await Promise.all(\n          [0, 1, 2].slice(0, count).map((i) => opacityControls[i].start({ opacity: [1, 0.6, 1], transition: { duration: 0.3 } }))\n        );\n      }\n    };\n\n    run();\n    return () => {\n      mounted = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const pathCoords = useMemo(() => points.map(toPx), [points, w, h, toPx]);\n\n  return (\n    <div ref={containerRef} className=\"relative w-full h-full overflow-hidden bg-black\">\n      {/* Grid */}\n      <div className=\"absolute inset-0 grid grid-cols-3 grid-rows-3 gap-6 p-6\">\n        {Array.from({ length: 9 }).map((_, i) => (\n          <div key={i} className=\"rounded-xl border border-white/10 bg-white/[0.015]\" />)\n        )}\n      </div>\n\n      {/* Connecting lines layer */}\n      <svg className=\"absolute inset-0\" width={w} height={h} viewBox={`0 0 ${w} ${h}`}>\n        {showLines && w > 0 && h > 0 && (\n          <motion.path\n            d={`M ${pathCoords[0].x} ${pathCoords[0].y} L ${pathCoords[1].x} ${pathCoords[1].y} L ${pathCoords[2].x} ${pathCoords[2].y} Z`}\n            stroke=\"white\"\n            strokeOpacity={0.9}\n            strokeWidth={1}\n            fill=\"none\"\n            initial={{ pathLength: 0 }}\n            animate={{ pathLength: pathProgress }}\n            transition={{ duration: 1.2, ease }}\n          />\n        )}\n      </svg>\n\n      {/* Glyphs layer */}\n      {[CircleGlyph, SquareGlyph, TriangleGlyph].map((Glyph, i) => (\n        <motion.div\n          key={i}\n          className=\"absolute -translate-x-1/2 -translate-y-1/2 mix-blend-lighten [filter:drop-shadow(0_0_8px_rgba(255,255,255,0.2))]\"\n          animate={controls[i]}\n          initial={{ left: \"50%\", top: \"50%\" }}\n          style={{ pointerEvents: \"none\" }}\n        >\n          <motion.div animate={scaleControls[i]}>\n            <motion.div animate={opacityControls[i]}>\n              <Glyph />\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n\n/* Example usage\n\n<section className=\"w-full h-[400px] bg-black\">\n  <MatchingAnimation />\n</section>\n\n*/\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamlee/Client/flowryd/src/components/TypeWord.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useMemo, useState } from \"react\";\n\ntype Props = {\n  words: string[];\n  className?: string;\n  typingSpeedMs?: number;\n  deletingSpeedMs?: number;\n  pauseMs?: number;\n};\n\nexport default function TypeWord({\n  words,\n  className,\n  typingSpeedMs = 90,\n  deletingSpeedMs = 55,\n  pauseMs = 850,\n}: Props) {\n  const list = useMemo(() => (words.length ? words : [\"\"]), [words]);\n  const [i, setI] = useState(0); // index in words\n  const [txt, setTxt] = useState(\"\");\n  const [del, setDel] = useState(false);\n\n  useEffect(() => {\n    let t: NodeJS.Timeout;\n    const full = list[i % list.length];\n    const speed = del ? deletingSpeedMs : typingSpeedMs;\n    if (!del && txt === full) {\n      t = setTimeout(() => setDel(true), pauseMs);\n    } else if (del && txt === \"\") {\n      setDel(false);\n      setI((v) => (v + 1) % list.length);\n    } else {\n      t = setTimeout(() => {\n        setTxt((s) => (del ? s.slice(0, -1) : full.slice(0, s.length + 1)));\n      }, speed);\n    }\n    return () => clearTimeout(t);\n  }, [txt, del, i, list, typingSpeedMs, deletingSpeedMs, pauseMs]);\n\n  return (\n    <span className={className} style={{ color: \"#96FFC2\" }}>\n      {txt}\n      <span className=\"ml-1 inline-block w-[2px] h-[0.9em] align-[-0.05em] bg-[#96FFC2] animate-pulse\" />\n    </span>\n  );\n}\n\n\n\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYe,SAAS,SAAS,EAC/B,KAAK,EACL,SAAS,EACT,gBAAgB,EAAE,EAClB,kBAAkB,EAAE,EACpB,UAAU,GAAG,EACP;IACN,MAAM,OAAO,IAAA,gNAAO,EAAC,IAAO,MAAM,MAAM,GAAG,QAAQ;YAAC;SAAG,EAAG;QAAC;KAAM;IACjE,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,iNAAQ,EAAC,IAAI,iBAAiB;IAChD,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,iNAAQ,EAAC;IAC/B,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,iNAAQ,EAAC;IAE/B,IAAA,kNAAS,EAAC;QACR,IAAI;QACJ,MAAM,OAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;QAClC,MAAM,QAAQ,MAAM,kBAAkB;QACtC,IAAI,CAAC,OAAO,QAAQ,MAAM;YACxB,IAAI,WAAW,IAAM,OAAO,OAAO;QACrC,OAAO,IAAI,OAAO,QAAQ,IAAI;YAC5B,OAAO;YACP,KAAK,CAAC,IAAM,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM;QACnC,OAAO;YACL,IAAI,WAAW;gBACb,OAAO,CAAC,IAAO,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,EAAE,MAAM,GAAG;YACjE,GAAG;QACL;QACA,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAK;QAAK;QAAG;QAAM;QAAe;QAAiB;KAAQ;IAE/D,qBACE,8OAAC;QAAK,WAAW;QAAW,OAAO;YAAE,OAAO;QAAU;;YACnD;0BACD,8OAAC;gBAAK,WAAU;;;;;;;;;;;;AAGtB","debugId":null}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamlee/Client/flowryd/src/components/HeroGlyphs.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\n\nexport default function HeroGlyphs() {\n  const mountRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n    const mount = mountRef.current;\n\n    const scene = new THREE.Scene();\n    scene.fog = new THREE.Fog(0x000000, 30, 140);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    const { clientWidth: W, clientHeight: H } = mount;\n    renderer.setSize(W, H);\n    renderer.shadowMap.enabled = true;\n    mount.appendChild(renderer.domElement);\n\n    const camera = new THREE.PerspectiveCamera(45, W / H, 0.1, 1000);\n    camera.position.set(0, 6, 26);\n\n    // lights\n    // unify palette to #f3ff97 (0xf3ff97)\n    const PALETTE = 0xf3ff97;\n    scene.add(new THREE.HemisphereLight(PALETTE, 0x0a0a0a, 0.5));\n    const key = new THREE.SpotLight(PALETTE, 3.0, 200, Math.PI / 6, 0.25, 1.5);\n    key.position.set(18, 22, 16);\n    key.castShadow = true;\n    scene.add(key);\n    const rim = new THREE.DirectionalLight(PALETTE, 1.4);\n    rim.position.set(-18, 8, -12);\n    scene.add(rim);\n\n    const resin = (hex: number, emissiveHex: number, opacity = 0.45) =>\n      new THREE.MeshPhysicalMaterial({\n        color: hex,\n        transparent: true,\n        opacity,\n        roughness: 0.15,\n        metalness: 0.0,\n        transmission: 0.85,\n        thickness: 0.8,\n        clearcoat: 1.0,\n        clearcoatRoughness: 0.1,\n        emissive: new THREE.Color(emissiveHex),\n        emissiveIntensity: 0.25,\n      });\n\n    const neonMesh = (hex = PALETTE) =>\n      new THREE.MeshStandardMaterial({ color: hex, emissive: hex, emissiveIntensity: 1.6, metalness: 0.2, roughness: 0.25 });\n\n    const connectionTube = (points: THREE.Vector3[], radius = 0.06, color = PALETTE) => {\n      const curve = new THREE.CatmullRomCurve3(points);\n      const geo = new THREE.TubeGeometry(curve, 180, radius, 16, false);\n      const mat = new THREE.MeshStandardMaterial({ color, emissive: color, emissiveIntensity: 1.2, roughness: 0.35, metalness: 0.0 });\n      return new THREE.Mesh(geo, mat);\n    };\n\n    const addNode = (p: THREE.Vector3, color = 0x7cffb2, size = 0.24) => {\n      const g = new THREE.SphereGeometry(size, 24, 24);\n      const m = neonMesh(color);\n      const s = new THREE.Mesh(g, m);\n      s.position.copy(p);\n      s.castShadow = true;\n      s.receiveShadow = true;\n      return s;\n    };\n\n    function createSuperValidator() {\n      const group = new THREE.Group();\n      [2.2, 1.6, 1.0, 0.45].forEach((r, i) => {\n        const torus = new THREE.Mesh(new THREE.TorusGeometry(r, 0.07 + 0.02 * i, 16, 128), resin(PALETTE, PALETTE, 0.35 + 0.06 * i));\n        torus.rotation.x = Math.PI / 2;\n        group.add(torus);\n      });\n      const orbit = new THREE.Mesh(new THREE.TorusGeometry(1.9, 0.08, 16, 160), resin(PALETTE, PALETTE, 0.55));\n      orbit.rotation.x = Math.PI / 2;\n      group.add(orbit);\n      [new THREE.Vector3(0, 1.9, 0), new THREE.Vector3(1.9, 0, 0), new THREE.Vector3(0, -1.9, 0), new THREE.Vector3(-1.9, 0, 0)].forEach((p) =>\n        group.add(addNode(p))\n      );\n      const grid = new THREE.LineSegments(new THREE.EdgesGeometry(new THREE.BoxGeometry(6, 6, 0.1, 6, 6, 1)), new THREE.LineBasicMaterial({ color: PALETTE, transparent: true, opacity: 0.25 }));\n      grid.position.z = -0.35;\n      group.add(grid);\n      (group.userData as { tick?: (t: number) => void }).tick = (t: number) => {\n        orbit.rotation.z = t * 0.4;\n        group.rotation.z = Math.sin(t * 0.2) * 0.15;\n      };\n      return group;\n    }\n\n    function createApplicationBuilder() {\n      const group = new THREE.Group();\n      [3.0, 2.2, 1.4, 0.7].forEach((s, i) => {\n        const mesh = new THREE.Mesh(new THREE.BoxGeometry(s, s, 0.08), resin(PALETTE, PALETTE, 0.28 + i * 0.08));\n        group.add(mesh);\n      });\n      const c = 1.7;\n      [new THREE.Vector3(c, c, 0), new THREE.Vector3(-c, c, 0), new THREE.Vector3(-c, -c, 0), new THREE.Vector3(c, -c, 0)].forEach((p) =>\n        group.add(addNode(p, PALETTE, 0.22))\n      );\n      (group.userData as { tick?: (t: number) => void }).tick = (t: number) => {\n        group.rotation.x = Math.sin(t * 0.35) * 0.25 + 0.3;\n        group.rotation.y = t * 0.25;\n      };\n      return group;\n    }\n\n    function createUserValidator() {\n      const group = new THREE.Group();\n      const makeTri = (r: number, color: number, thick = 0.07) => {\n        const pts: THREE.Vector3[] = [];\n        for (let i = 0; i < 3; i++) {\n          const a = i * ((Math.PI * 2) / 3) - Math.PI / 2;\n          pts.push(new THREE.Vector3(Math.cos(a) * r, Math.sin(a) * r, 0));\n        }\n        pts.push(pts[0].clone());\n        const curve = new THREE.CatmullRomCurve3(pts);\n        group.add(new THREE.Line(new THREE.BufferGeometry().setFromPoints(pts), new THREE.LineBasicMaterial({ color })));\n        group.add(new THREE.Mesh(new THREE.TubeGeometry(curve, 90, thick, 12, true), neonMesh(color)));\n      };\n      makeTri(2.0, PALETTE, 0.05);\n      makeTri(1.4, PALETTE, 0.04);\n      makeTri(0.85, PALETTE, 0.035);\n      const r = 2.0;\n      for (let i = 0; i < 3; i++) {\n        const a = i * ((Math.PI * 2) / 3) - Math.PI / 2;\n        group.add(addNode(new THREE.Vector3(Math.cos(a) * r, Math.sin(a) * r, 0), PALETTE, 0.24));\n      }\n      (group.userData as { tick?: (t: number) => void }).tick = (t: number) => {\n        group.rotation.z = t * 0.3 + 0.3;\n      };\n      return group;\n    }\n\n    const glyphA = createSuperValidator();\n    glyphA.position.set(-7.2, 3.4, 0);\n    scene.add(glyphA);\n    const glyphB = createApplicationBuilder();\n    glyphB.position.set(7.2, 2.0, 0);\n    scene.add(glyphB);\n    const glyphC = createUserValidator();\n    glyphC.position.set(0, -4.5, 0);\n    scene.add(glyphC);\n\n    const connections = new THREE.Group();\n    scene.add(connections);\n    const connect = (a: THREE.Vector3, b: THREE.Vector3, wobble = 0.6, height = 2.6, color = 0x7cffb2) => {\n      const mid = a.clone().lerp(b, 0.5);\n      const perp = new THREE.Vector3().subVectors(b, a).cross(new THREE.Vector3(0, 1, 0)).normalize();\n      const p1 = a.clone();\n      const p2 = mid.clone().addScaledVector(perp, wobble).add(new THREE.Vector3(0, height, 0));\n      const p3 = mid.clone().addScaledVector(perp, -wobble).add(new THREE.Vector3(0, -height * 0.2, 0));\n      const p4 = b.clone();\n      return connectionTube([p1, p2, p3, p4], 0.08, color);\n    };\n    const tubeAB = connect(glyphA.position, glyphB.position, 1.1, 2.4, PALETTE);\n    const tubeBC = connect(glyphB.position, glyphC.position, 0.8, 3.2, PALETTE);\n    const tubeCA = connect(glyphC.position, glyphA.position, 1.4, 2.2, PALETTE);\n    connections.add(tubeAB, tubeBC, tubeCA);\n\n    const starGeo = new THREE.BufferGeometry();\n    const starCount = 900;\n    const positions = new Float32Array(starCount * 3);\n    for (let i = 0; i < starCount; i++) {\n      positions[i * 3 + 0] = (Math.random() - 0.5) * 140;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 100;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 140;\n    }\n    starGeo.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3));\n    const stars = new THREE.Points(starGeo, new THREE.PointsMaterial({ size: 0.6, color: PALETTE, transparent: true, opacity: 0.35 }));\n    scene.add(stars);\n\n    const start = performance.now();\n    const glyphs: THREE.Group[] = [glyphA, glyphB, glyphC];\n    const animate = () => {\n      const t = (performance.now() - start) / 1000;\n      [tubeAB, tubeBC, tubeCA].forEach((m, i) => {\n        const k = 1.0 + Math.sin(t * (1.2 + 0.2 * i)) * 0.25;\n        (m.material as THREE.MeshStandardMaterial).emissiveIntensity = 0.9 * k;\n      });\n      glyphs.forEach((g) => {\n        const tick = (g.userData as { tick?: (v: number) => void }).tick;\n        if (tick) tick(t);\n      });\n      stars.rotation.y = t * 0.01;\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    const onResize = () => {\n      const W = mount.clientWidth;\n      const H = mount.clientHeight;\n      camera.aspect = W / H;\n      camera.updateProjectionMatrix();\n      renderer.setSize(W, H);\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n      mount.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n\n  return <div ref={mountRef} className=\"absolute inset-0\" />;\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamlee/Client/flowryd/src/components/ClientHero.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport HeroGlyphs from \"./HeroGlyphs\";\n\nexport default function ClientHero() {\n  return (\n    <div className=\"relative h-[320px] md:h-[420px] lg:h-[520px]\">\n      <HeroGlyphs />\n    </div>\n  );\n}\n\n\n\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,2IAAU;;;;;;;;;;AAGjB","debugId":null}}]
}